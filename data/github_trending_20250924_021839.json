[
  {
    "basic_info": {
      "name": "Job-Recommendation-System",
      "full_name": "nuglifeleoji/Job-Recommendation-System",
      "owner": "nuglifeleoji",
      "description": "Intelligent job recommendation platform using Java + MySQL + Redis. Supports location-based search, AI keyword extraction, and personalized suggestions.",
      "url": "https://github.com/nuglifeleoji/Job-Recommendation-System",
      "clone_url": "https://github.com/nuglifeleoji/Job-Recommendation-System.git",
      "ssh_url": "git@github.com:nuglifeleoji/Job-Recommendation-System.git",
      "homepage": "",
      "created_at": "2025-08-31T03:59:27Z",
      "updated_at": "2025-09-21T19:39:26Z",
      "pushed_at": "2025-08-31T04:18:08Z"
    },
    "stats": {
      "stars": 207,
      "forks": 32,
      "watchers": 207,
      "open_issues": 0,
      "size": 120
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 120545,
        "JavaScript": 12995,
        "Batchfile": 5382,
        "CSS": 5042
      },
      "license": null,
      "topics": [
        "ai-keyword-extraction",
        "docker",
        "java",
        "java-servlets",
        "job-recommendation",
        "location-based-search",
        "recommendation-system",
        "redis",
        "rest-api"
      ]
    },
    "content": {
      "readme": "# 🚀 Job Recommendation System\n\nAn intelligent job recommendation system that provides location-based job search with personalized recommendations, built with Java, MySQL, Redis, and modern web technologies.\n\n## 📋 Table of Contents\n\n- [Features](#-features)\n- [Architecture](#-architecture)\n- [Prerequisites](#-prerequisites)\n- [Installation](#-installation)\n- [Configuration](#-configuration)\n- [Usage](#-usage)\n- [API Documentation](#-api-documentation)\n- [Development](#-development)\n- [Testing](#-testing)\n- [Deployment](#-deployment)\n- [Contributing](#-contributing)\n- [License](#-license)\n\n## ✨ Features\n\n### Core Functionality\n- **🌍 Location-Based Search**: Find jobs near any geographic location\n- **⭐ Smart Favorites**: Save and manage favorite job listings\n- **🔍 Keyword Extraction**: Automatic job keyword extraction using AI\n- **📊 Personalized Recommendations**: AI-powered job recommendations\n- **⚡ Redis Caching**: High-performance caching for improved response times\n\n### Security & Performance\n- **🔐 Secure Authentication**: MD5-hashed passwords with session management\n- **🛡️ Input Validation**: Comprehensive input sanitization and validation\n- **📝 Structured Logging**: Centralized logging with multiple levels\n- **⚙️ Environment Configuration**: Flexible configuration management\n- **🚦 Error Handling**: Structured exception handling with user-friendly messages\n\n### User Experience\n- **💻 Responsive Web Interface**: Modern, mobile-friendly UI\n- **🔄 Real-time Updates**: Dynamic content loading with AJAX\n- **📱 Cross-platform Compatibility**: Works on desktop, tablet, and mobile\n- **🎨 Professional Design**: Clean, intuitive user interface\n\n## 🏗️ Architecture\n\n### System Components\n\n```\n┌─────────────────┐    ┌─────────────────┐    ┌─────────────────┐\n│   Frontend      │    │    Backend      │    │   External APIs │\n│                 │    │                 │    │                 │\n│ • HTML/CSS/JS   │◄──►│ • Java Servlets │◄──►│ • SerpAPI       │\n│ • Bootstrap     │    │ • REST APIs     │    │ • EdenAI        │\n│ • AJAX          │    │ • Business Logic│    │ • GeoConverter  │\n└─────────────────┘    └─────────────────┘    └─────────────────┘\n                                │\n                                ▼\n                       ┌─────────────────┐    ┌─────────────────┐\n                       │   Data Layer    │    │     Cache       │\n                       │                 │    │                 │\n                       │ • MySQL DB      │◄──►│ • Redis         │\n                       │ • Connection    │    │ • Session Store │\n                       │   Pooling       │    │ • Search Cache  │\n                       └─────────────────┘    └─────────────────┘\n```\n\n### Technology Stack\n\n**Backend:**\n- Java 11+ with Servlet API\n- Maven for dependency management\n- MySQL 8.0+ for data persistence\n- Redis for caching and session management\n\n**Frontend:**\n- HTML5, CSS3, JavaScript (ES6+)\n- Bootstrap for responsive design\n- AJAX for asynchronous communication\n\n**External Services:**\n- **SerpAPI**: Google Jobs search integration\n- **EdenAI**: AI-powered keyword extraction\n- **GeoConverter**: Coordinate to location code conversion\n\n**Development & Deployment:**\n- JUnit 5 for unit testing\n- Apache Tomcat 9+ as servlet container\n- Environment-based configuration\n- Comprehensive logging system\n\n## 📋 Prerequisites\n\nBefore you begin, ensure you have the following installed:\n\n- **Java Development Kit (JDK) 11 or higher**\n- **Apache Maven 3.6+**\n- **MySQL 8.0+**\n- **Redis 6.0+**\n- **Apache Tomcat 9.0+**\n\n### Required API Keys\n- **SerpAPI Key**: [Get your key here](https://serpapi.com/)\n- **EdenAI Key**: [Get your key here](https://www.edenai.co/)\n\n## 🚀 Installation\n\n### 1. Clone the Repository\n\n```bash\ngit clone https://github.com/your-username/job-recommendation-system.git\ncd job-recommendation-system\n```\n\n### 2. Database Setup\n\n```bash\n# Start MySQL server\n# Create database and user\nmysql -u root -p\n\n# Run the initialization script\nmysql -u root -p < scripts/init-database.sql\n```\n\n### 3. Redis Setup\n\n```bash\n# Start Redis server\nredis-server\n\n# Test Redis connection\nredis-cli ping\n```\n\n### 4. Environment Configuration\n\nRun the setup script to configure environment variables:\n\n```bash\n# Windows\nscripts\\setup-env.bat\n\n# Or manually set environment variables:\nset DB_HOST=localhost\nset DB_PORT=3306\nset DB_NAME=jobrec\nset DB_USERNAME=admin\nset DB_PASSWORD=your_password\nset REDIS_HOST=localhost\nset REDIS_PORT=6379\nset REDIS_PASSWORD=your_redis_password\nset SERPAPI_KEY=your_serpapi_key\nset EDENAI_KEY=your_edenai_key\nset APP_ENVIRONMENT=dev\n```\n\n### 5. Build the Application\n\n```bash\nmvn clean compile package\n```\n\n### 6. Deploy to Tomcat\n\n```bash\n# Copy WAR file to Tomcat webapps directory\ncp target/JobSearch-1.0-SNAPSHOT.war $TOMCAT_HOME/webapps/jobrec.war\n\n# Start Tomcat\n$TOMCAT_HOME/bin/startup.sh  # Linux/Mac\n# or\n%TOMCAT_HOME%\\bin\\startup.bat  # Windows\n```\n\n## ⚙️ Configuration\n\n### Application Properties\n\nThe application supports e",
      "default_branch": "main"
    },
    "fetched_at": "2025-09-24T02:18:40.140967"
  },
  {
    "basic_info": {
      "name": "perplexity-scraper",
      "full_name": "oxylabs/perplexity-scraper",
      "owner": "oxylabs",
      "description": "Perplexity Scraper Track brand mentions, analyze rankings, and gain competitor intelligence from Perplexity. Get started in minutes.",
      "url": "https://github.com/oxylabs/perplexity-scraper",
      "clone_url": "https://github.com/oxylabs/perplexity-scraper.git",
      "ssh_url": "git@github.com:oxylabs/perplexity-scraper.git",
      "homepage": "https://oxylabs.io/products/scraper-api/serp/perplexity",
      "created_at": "2025-09-02T13:40:30Z",
      "updated_at": "2025-09-23T08:33:25Z",
      "pushed_at": "2025-09-23T08:33:21Z"
    },
    "stats": {
      "stars": 145,
      "forks": 0,
      "watchers": 145,
      "open_issues": 0,
      "size": 1396
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 1995,
        "C#": 1404,
        "JavaScript": 964,
        "PHP": 739,
        "Go": 712,
        "Python": 454,
        "Shell": 310
      },
      "license": null,
      "topics": [
        "ai-scraper",
        "llm-api",
        "llm-scraper",
        "llm-scraping",
        "perplexity",
        "perplexity-api",
        "perplexity-scraper",
        "proxy-scraper"
      ]
    },
    "content": {
      "readme": "# Perplexity Scraper\n\n[![Oxylabs promo code](https://github.com/oxylabs/perplexity-scraper/blob/main/ScraperAPI%2BPerplexity-1090x275px.png)](https://oxylabs.io/products/scraper-api/serp/perplexity?utm_source=877&utm_medium=affiliate&groupid=877&utm_content=perplexity-scraper-github&transaction_id=102f49063ab94276ae8f116d224b67)\n\n[![](https://dcbadge.limes.pink/api/server/Pds3gBmKMH?style=for-the-badge&theme=discord)](https://discord.gg/Pds3gBmKMH) [![YouTube](https://img.shields.io/badge/YouTube-Oxylabs-red?style=for-the-badge&logo=youtube&logoColor=white)](https://www.youtube.com/@oxylabs)\n\n\nThe [Perplexity Scraper](https://oxylabs.io/products/scraper-api/serp/perplexity) by Oxylabs allows developers to send prompts to Perplexity and automatically collect both AI-generated responses and structured metadata. Instead of just raw HTML, it can also provide results as parsed JSON, website PNG, XHR/Fetch requests, or Markdown output. \n\nYou can use the [Oxylabs’ Web Scraper API](https://oxylabs.io/products/scraper-api) with Perplexity for AI content auditing, research tracking, and analyzing SEO performance. It handles dynamic AI-generated content, fully supports real-time SERP extraction, and integrates seamlessly with Oxylabs' global proxy infrastructure, without the need to manage proxies, browsers, or worry about anti-bot systems.\n\n## How it works\n\nThe Perplexity scraper handles the rendering, parsing, and delivery of results in any requested format. You need to provide your prompt, credentials, and a few optional parameters, as shown below.\n\n### Request sample (Python)\n\n```python\nimport json\nimport requests\n\n# API parameters.\npayload = {\n    'source': 'perplexity',\n    'prompt': 'top 3 smartphones in 2025, compare pricing across US marketplaces',\n    'geo_location': 'United States',\n    'parse': True\n}\n\n# Get a response.\nresponse = requests.post(\n    'https://realtime.oxylabs.io/v1/queries',\n    auth=('USERNAME', 'PASSWORD'),\n    json=payload\n)\n\n# Print response to stdout.\nprint(response.json())\n\n# Save response to a JSON file.\nwith open('response.json', 'w') as file:\n    json.dump(response.json(), file, indent=2)\n```\n\nMore request examples in different programming languages are available [here](https://github.com/oxylabs/perplexity-scraper/tree/main/Code%20examples).\n\n**Note:** By default, all requests to Perplexity use JavaScript rendering. Make sure to set a sufficient timeout (e.g. 180s) when using the Realtime integration method.\n\n### Request parameters\n\n| Parameter | Description | Default value |\n|-----------|-------------|---------------|\n| `source`* | Sets the Perplexity scraper | `perplexity` |\n| `prompt`* | The prompt or question to submit to Perplexity. | – |\n| `parse` | Returns parsed data when set to true. | `true` |\n| `geo_location` | Specify a country to send the prompt from. [More info](https://developers.oxylabs.io/scraping-solutions/web-scraper-api/features/localization/proxy-location). | – |\n| `callback_url` | URL to your callback endpoint. [More info](https://developers.oxylabs.io/scraping-solutions/web-scraper-api/integration-methods/push-pull#callback). | – |\n\n\\* Mandatory parameters\n\n---\n\n### Output samples\n\nWeb Scraper API returns either an HTML document or a JSON object of Perplexity scraper output, which contains structured data from the results page.\n\n**HTML example:**\n\n![HTML Example](image.png)\n\n**Structured JSON output snippet:**\n\n```json\n{\n    \"results\": [\n        {\n            \"content\": {\n                \"url\": \"https://www.perplexity.ai/search/top-3-smartphones-in-2025-comp-wvA0dso7TgW3NpgF8Jd8tg\",\n                \"model\": \"turbo\",\n                \"top_images\": [\"url + title\"],\n                \"top_sources\": [\"url + title + source\"],\n                \"prompt_query\": \"top 3 smartphones in 2025, compare pricing across US marketplaces\",\n                \"answer_results\": [\"answer in JSON\"],\n                \"displayed_tabs\": [\n                    \"search\",\n                    \"images\",\n                    \"sources\"\n                ],\n                \"related_queries\": [                \n                    \"How do the prices of the top 3 smartphones compare across US marketplaces\",\n                    \"What features make the Galaxy S25 Ultra stand out as the best in 2025\",\n                    \"Why is the Pixel 9a considered a top budget option despite its lower price\",\n                    \"How does the iPhone 16 Pro Max's pricing differ from Samsung and Google models\",\n                    \"What factors should I consider when choosing among these top smartphones in 2025\"\n                ],\n                \"answer_results_md\": [\"answer in Markdown\"],\n                \"parse_status_code\": 12000\n            },\n            \"created_at\": \"2025-07-16 12:14:32\",\n            \"updated_at\": \"2025-07-16 12:15:28\",\n            \"page\": 1,\n            \"url\": \"https://www.perplexity.ai/search/top-3-smartphones-in-2025-comp-wvA0dso7TgW3NpgF8Jd8tg\",\n            \"job_id\": \"7351222707934990337\",\n     ",
      "default_branch": "main"
    },
    "fetched_at": "2025-09-24T02:18:41.413939"
  },
  {
    "basic_info": {
      "name": "FreeDroidWarn",
      "full_name": "woheller69/FreeDroidWarn",
      "owner": "woheller69",
      "description": null,
      "url": "https://github.com/woheller69/FreeDroidWarn",
      "clone_url": "https://github.com/woheller69/FreeDroidWarn.git",
      "ssh_url": "git@github.com:woheller69/FreeDroidWarn.git",
      "homepage": null,
      "created_at": "2025-08-26T11:53:34Z",
      "updated_at": "2025-09-23T09:59:21Z",
      "pushed_at": "2025-09-23T09:59:18Z"
    },
    "stats": {
      "stars": 144,
      "forks": 5,
      "watchers": 144,
      "open_issues": 1,
      "size": 121
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 1365
      },
      "license": "Apache License 2.0",
      "topics": []
    },
    "content": {
      "readme": "# FreeDroidWarn\n\n### Overview\n\nThis library shows an alert dialog with a deprecation warning informing that Google will require developer verification for Android apps outside the Play Store from 2026/2027 which the developer is not going to provide.\n\n\n ```\nGoogle has announced that, starting in 2026/2027, all apps on certified Android devices\nwill require the developer to submit personal identity details directly to Google.\nSince the developers of this app do not agree to this requirement, this app will no longer \nwork on certified Android devices after that time.\n```\n\nhttps://www.androidauthority.com/android-developer-verification-requirements-3590911/\n\nhttps://developer.android.com/developer-verification\n\nSome arguments:\n\nRequiring developers to submit personal identity details to Google in order for their apps to run on certified Android devices represents a serious attack on fundamental digital rights:\n\nDeveloper privacy – Individual developers and small teams should not be forced to hand over government IDs or sensitive documents to a multinational corporation. Many developers value their privacy for legitimate personal, political, or security reasons.\n\nThe right to use my own device – As a user, I should be free to run the software of my choice on my phone. Blocking applications that do not meet Google’s new requirements is a restriction on device ownership and digital freedom.\n\nFree and open-source software ecosystems – Many FOSS projects are developed by volunteers who will not (and often cannot) provide identity documents. This policy risks removing an enormous amount of valuable free software from certified Android devices.\n\nDeveloper safety – In some countries, linking real-world identities to developers of privacy tools, political apps, or security software can put them in danger. This requirement could actively harm people.\n\nAdaptation and forking of open-source programs – One of the most important freedoms of open-source software is the ability to fork and adapt programs to personal or local needs. Today, I can simply fork an app, add a translation, build it, and install it on my device. Under the new rules, any fork would require a new package ID — which in turn would force the developer to register with Google and provide personal identity details. This creates a bureaucratic and privacy-invasive barrier to the most basic use of open-source: improving, localizing, and customizing software.\n\n### Workaround\n\nIf you do not have a free, uncensored Android system, e.g. /e/os or GrapheneOS you may need to install apps via ADB.\nGoogle has already confirmed that ADB will also work in future. \n\n#### Set up ADB on your device\n\n    - In Android settings find and tap the Build Number option (usually at the bottom in \"About phone\")\n      seven times until you see the message \"You are now a developer!\"\n    - This enables developer options on your device. \n    - Return to the previous screen to find Developer options at the bottom (or maybe in System).\n    - Now enable USB debugging in Developer options.\n\n#### Download ADB for PC (Windows) \n\nhttps://github.com/K3V1991/ADB-and-FastbootPlusPlus/blob/main/AdbWinApi.dll?raw=true\n\nhttps://github.com/K3V1991/ADB-and-FastbootPlusPlus/blob/main/AdbWinUsbApi.dll?raw=true\n\nhttps://github.com/K3V1991/ADB-and-FastbootPlusPlus/blob/main/adb.exe?raw=true\n\nand the desired apk file, e.g. from F-Droid. Everything should be in your PC's Downloads folder.\n\n#### Connect phone to USB and install app\n\n    - Connect phone to PC via a USB cable and check confirmation box on phone and agree to USB debugging from this PC if asked\n    - Set USB options on phone to file transfer\n    - Type \"cmd\" in Windows search box and click \"open\"\n    - Type \"cd %userprofile%\\downloads\"\n    - Type \"adb install your.apk\"\n\nYour app will be installed 🚀\n\n    Optional (Recommended): Switch off USB debugging in Developer Options until you need it again\n\n### Use the library in your own Android project\n\nAdd the JitPack repository to your root build.gradle at the end of repositories:\n\n```gradle\nallprojects {\n  repositories {\n    ...\n    maven { url 'https://jitpack.io' }\n  }\n}\n```\n\nAdd the library dependency to your build.gradle file.\n\n```gradle\ndependencies {\n    implementation 'com.github.woheller69:FreeDroidWarn:V1.4'\n}\n```\n\nIn onCreate of your app just add:\n\n```\n     FreeDroidWarn.showWarningOnUpgrade(this, BuildConfig.VERSION_CODE);\n\n```\n\n\n### License\n\nThis library is licensed under the Apache V2.0 license.\n\n\n",
      "default_branch": "master"
    },
    "fetched_at": "2025-09-24T02:18:42.706738"
  },
  {
    "basic_info": {
      "name": "google-ai-mode-scraper",
      "full_name": "oxylabs/google-ai-mode-scraper",
      "owner": "oxylabs",
      "description": "Scrape Google AI Mode responses without blocks on a large scale.",
      "url": "https://github.com/oxylabs/google-ai-mode-scraper",
      "clone_url": "https://github.com/oxylabs/google-ai-mode-scraper.git",
      "ssh_url": "git@github.com:oxylabs/google-ai-mode-scraper.git",
      "homepage": "https://oxylabs.io/products/scraper-api/serp/google-ai-mode",
      "created_at": "2025-09-08T13:17:40Z",
      "updated_at": "2025-09-23T08:32:45Z",
      "pushed_at": "2025-09-23T08:32:41Z"
    },
    "stats": {
      "stars": 141,
      "forks": 0,
      "watchers": 141,
      "open_issues": 0,
      "size": 1202
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 1949,
        "C#": 1358,
        "JavaScript": 918,
        "Go": 693,
        "PHP": 693,
        "Python": 583,
        "Shell": 264
      },
      "license": null,
      "topics": [
        "ai-mode",
        "google-ai",
        "google-ai-mode",
        "proxy-scrape",
        "scraper-api",
        "web-scraper",
        "web-scraper-api"
      ]
    },
    "content": {
      "readme": "# Google AI Mode Scraper\n\n[![Oxylabs promo code](https://github.com/oxylabs/google-ai-mode-scraper/blob/main/ScraperAPI%2BGoogleAI-1090x275px.png)](https://oxylabs.io/products/scraper-api/serp/chatgpt?utm_source=877&utm_medium=affiliate&groupid=877&utm_content=chatgpt-scraper-github&transaction_id=102f49063ab94276ae8f116d224b67)\n\n[![](https://dcbadge.limes.pink/api/server/Pds3gBmKMH?style=for-the-badge&theme=discord)](https://discord.gg/Pds3gBmKMH) [![YouTube](https://img.shields.io/badge/YouTube-Oxylabs-red?style=for-the-badge&logo=youtube&logoColor=white)](https://www.youtube.com/@oxylabs)\n\n[Google AI Mode scraper](https://oxylabs.io/products/scraper-api/serp/google-ai-mode) lets you send prompts and reliably extract AI responses at scale without blocks. Built on the [Web Scraper API](https://oxylabs.io/products/scraper-api/web), it delivers parsed data in JSON format while handling proxies, headless browsers, and anti-bot systems for you. You can use scraped Google AI Mode data to power SEO and GEO projects, build training datasets, or support other data tasks.\n\n## How it works\n\nScrape Google AI Mode responses by sending a POST request with your prompt and authentication credentials. See the Python example below, or explore more language samples [here](https://github.com/oxylabs/google-ai-mode-scraper/tree/3e23bc41979eeb78326e9bd9d02b743aa371efb1/Code%20examples).\n\n> [!TIP]\n> Get a **free trial** by registering on the [dashboard](https://dashboard.oxylabs.io/).\n\n### Request sample (Python)\nFirst, install the requests library in your Python environment:\n\n```bash\npip install requests\n```\n\nThen, create the following `.py` file. Make sure to use your Web Scraper API `USERNAME` and `PASSWORD`:\n\n```python\nimport json\nimport requests\n\n\n# API parameters.\npayload = {\n    'source': 'google_ai_mode',\n    'query': 'best health trackers under $200',\n    'render': 'html',\n    'parse': True,\n    'geo_location': 'United States'\n}\n\n# Get a response.\nresponse = requests.post(\n    'https://realtime.oxylabs.io/v1/queries',\n    # Replace with your credentials.\n    auth=('USERNAME', 'PASSWORD'),\n    json=payload,\n)\n\n# Print the response to stdout.\nprint(response.json())\n\n# Save the response to a JSON file.\nwith open('response.json', 'w') as file:\n    json.dump(response.json(), file, indent=2)\n```\n\n### Request parameters\n\n| Parameter | Description | Default Value |\n| :---- | :---- | :---- |\n| `source` (mandatory) | Sets the scraper. | `google_ai_mode` |\n| `query` (mandatory) | The prompt or question to submit to Google AI Mode. Cannot exceed 400 characters. | – |\n| `render` (mandatory) | Setting to `html` is required for this source. | – |\n| `parse` | Returns parsed data when set to `true`. | `false` |\n| `geo_location` | Specify a country to send the prompt from. [More info](https://developers.oxylabs.io/scraping-solutions/web-scraper-api/features/localization/proxy-location). | - |\n| `callback_url` | URL to your callback endpoint. [More info](https://developers.oxylabs.io/scraping-solutions/web-scraper-api/integration-methods/push-pull#callback). | – |\n\nCheck out [documentation](https://developers.oxylabs.io/scraping-solutions/web-scraper-api/targets/google/ai-mode) to learn more.\n\n### Output samples\n#### JSON example\nBelow is a trimmed JSON output sample. See the full JSON output [here](https://github.com/oxylabs/google-ai-mode-scraper/blob/3e23bc41979eeb78326e9bd9d02b743aa371efb1/output-sample.json).\n\n```json\n{\n  \"results\": [\n    {\n      \"content\": {\n        \"links\": [\n          {\n            \"url\": \"https://www.tomsguide.com/best-picks/best-cheap-fitness-trackers\",\n            \"text\": \"We've tested the best cheap fitness trackers available right now\"\n          },\n          {\n            \"url\": \"https://www.garagegymreviews.com/best-budget-fitness-tracker\",\n            \"text\": \"Expert-Tested: Best Budget Fitness Tracker (2025)\"\n          },\n          {\"url\": \"...\", \"text\": \"...\"}\n        ],\n        \"prompt\": \"best health trackers under $200\",\n        \"citations\": [\n          {\n            \"url\": \"https://www.garagegymreviews.com/best-budget-fitness-tracker\",\n            \"text\": \"For the best health trackers under $200, the top contenders are the Fitbit Charge 6 , Fitbit Inspire 3 , and...\"\n          },\n          {\n            \"url\": \"https://www.techradar.com/best/best-cheap-fitness-trackers\",\n            \"text\": \"For the best health trackers under $200, the top contenders are the Fitbit Charge 6 , Fitbit Inspire 3 , and...\"\n          },\n          {\"url\": \"...\", \"text\": \"...\"}\n        ],\n        \"response_text\": \"For the best health trackers under $200, the top contenders are the Fitbit Charge 6 , Fitbit Inspire 3 , and...\",\n        \"parse_status_code\": 12000\n      },\n      \"created_at\": \"2025-09-03 10:13:11\",\n      \"updated_at\": \"2025-09-03 10:13:26\",\n      \"page\": 1,\n      \"url\": \"https://www.google.com/search?udm=50&q=best+health+trackers+under+$200&uule=w+CAIQICINdW5pdGVkIHN0YXRlcw&gl=us&hl=en&sei=vRS4aPrAL9K55OUPhfvBsA",
      "default_branch": "main"
    },
    "fetched_at": "2025-09-24T02:18:43.983102"
  },
  {
    "basic_info": {
      "name": "chatgpt-scraper",
      "full_name": "oxylabs/chatgpt-scraper",
      "owner": "oxylabs",
      "description": "Easily collect responses from ChatGPT scraper by providing a prompt along with valid Web Scraper API credentials.",
      "url": "https://github.com/oxylabs/chatgpt-scraper",
      "clone_url": "https://github.com/oxylabs/chatgpt-scraper.git",
      "ssh_url": "git@github.com:oxylabs/chatgpt-scraper.git",
      "homepage": "https://oxylabs.io/products/scraper-api/serp/chatgpt",
      "created_at": "2025-08-26T07:15:29Z",
      "updated_at": "2025-09-23T08:33:12Z",
      "pushed_at": "2025-09-23T08:33:08Z"
    },
    "stats": {
      "stars": 138,
      "forks": 1,
      "watchers": 138,
      "open_issues": 0,
      "size": 430
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 2000,
        "C#": 1400,
        "JavaScript": 947,
        "Go": 728,
        "PHP": 726,
        "Python": 454,
        "Shell": 299
      },
      "license": null,
      "topics": [
        "chatgpt",
        "chatgpt-api",
        "chatgpt-free",
        "chatgpt-scraper",
        "llm-scraper",
        "openai-chatgpt",
        "proxy-scraper"
      ]
    },
    "content": {
      "readme": "# ChatGPT Scraper\n\n[![Oxylabs promo code](https://raw.githubusercontent.com/oxylabs/chatgpt-scraper/refs/heads/main/ScraperAPI%2BChatGPT-1090x275px.png)](https://oxylabs.io/products/scraper-api/serp/chatgpt?utm_source=877&utm_medium=affiliate&groupid=877&utm_content=chatgpt-scraper-github&transaction_id=102f49063ab94276ae8f116d224b67)\n\n[![](https://dcbadge.limes.pink/api/server/Pds3gBmKMH?style=for-the-badge&theme=discord)](https://discord.gg/Pds3gBmKMH) [![YouTube](https://img.shields.io/badge/YouTube-Oxylabs-red?style=for-the-badge&logo=youtube&logoColor=white)](https://www.youtube.com/@oxylabs)\n\nThe [ChatGPT Scraper](https://oxylabs.io/products/scraper-api/serp/chatgpt) by Oxylabs allows you to send prompts to ChatGPT and automatically collect both conversational responses and structured metadata. You can use the [Web Scraper API](https://oxylabs.io/products/scraper-api) with ChatGPT for SEO monitoring, AI response analysis, and brand presence tracking. It provides parsed, ready-to-use JSON output without the need to manage proxies and browsers, or avoid anti-bot systems.\n\n\n## How it works\n\nYou can gather ChatGPT scraper response results by simply providing a prompt and valid Web Scraper API credentials. Once authenticated, you can make a simple POST request to the API as shown below.\n\n### Request sample (Python)\n\n```python\nimport requests\nfrom pprint import pprint\n\n# Structure payload\npayload = {\n    'source': 'chatgpt',\n    'prompt': 'best supplements for better sleep',\n    'parse': True,\n    'search': True,\n    'geo_location': 'United States'\n}\n\n# Get response\nresponse = requests.request(\n    'POST',\n    'https://realtime.oxylabs.io/v1/queries',\n    auth=('USERNAME', 'PASSWORD'),\n    json=payload,\n)\n# Print prettified response\npprint(response.json())\n```\nYou can find code examples for other programming languages [**here**](https://github.com/oxylabs/chatgpt-scraper/tree/main/Code%20examples).\n\n\n### Request parameters\n\n| Parameter          | Description                                        | Default Value |\n|--------------------|----------------------------------------------------|---------------|\n| `source` (mandatory) | Sets the ChatGPT scraper.                                  | `chatgpt`       |\n| `prompt` (mandatory) | The input prompt to submit (max 4000 characters).  | –             |\n| `search`             | Trigger ChatGPT web search for the prompt.         | `true`          |\n| `geo_location`       | Specify a country to send the prompt from.         | –             |\n| `render`             | JavaScript rendering is enforced by default for `chatgpt`. | –     |\n| `parse`              | Return parsed structured data.                     | `true`          |\n| `callback_url`       | URL for asynchronous callbacks.                    | –             |\n\n\n### Output samples\n\n**HTML example:**\n\n![HTML Example](image.png)\n\nThis is a structured JSON snippet of the response output:\n\n```json\n{\n    \"results\": [\n        {\n            \"content\": {\n                \"prompt\": \"best supplements for better sleep\",\n                \"llm_model\": \"gpt-4o\",\n                \"markdown_json\": [\"json here\"],\n                \"markdown_text\": \"Improving sleep through supplements...\",\n                \"response_text\": \"Improving sleep through supplements...\",\n                \"parse_status_code\": 12000\n            },\n            \"created_at\": \"2025-07-21 09:44:41\",\n            \"updated_at\": \"2025-07-21 09:45:17\",\n            \"page\": 1,\n            \"url\": \"https://chatgpt.com/?hints=search\",\n            \"job_id\": \"7352996936896485377\",\n            \"is_render_forced\": false,\n            \"status_code\": 200,\n            \"parser_type\": \"chatgpt\",\n            \"parser_preset\": null\n        }\n    ]\n}\n```\nYou can find the full [output example file](output-chatgpt-scraper.json) in this repository.\n\nAlternatively, you can extract the data in the Markdown format for easier data integration workflows involving AI tools.\n\n**Note:** The composition of elements may vary depending on whether the query was made from a desktop or mobile device.\n\n\n### JSON output structure\n\nThis is the detailed list of each element that ChatGPT Web Scraper API parses, including descriptions, data types, and relevant metadata.  \n\n**Note:** The number of items and fields for a specific result type may vary depending on the submitted prompt.\n\n| Key Name                 | Description                                                   | Type      |\n|---------------------------|---------------------------------------------------------------|-----------|\n| `url`                       | The URL of ChatGPT conversation.                              | string    |\n| `page`                      | Page number.                                                 | integer   |\n| `content`                   | An object containing the parsed ChatGPT response data.        | object    |\n| `content.prompt`            | Original prompt submitted to ChatGPT.                         | st",
      "default_branch": "main"
    },
    "fetched_at": "2025-09-24T02:18:45.327178"
  },
  {
    "basic_info": {
      "name": "ClassLinefix",
      "full_name": "cwkiller/ClassLinefix",
      "owner": "cwkiller",
      "description": "Java bytecode line number restoration tool",
      "url": "https://github.com/cwkiller/ClassLinefix",
      "clone_url": "https://github.com/cwkiller/ClassLinefix.git",
      "ssh_url": "git@github.com:cwkiller/ClassLinefix.git",
      "homepage": "",
      "created_at": "2025-08-30T19:08:52Z",
      "updated_at": "2025-09-08T08:05:42Z",
      "pushed_at": "2025-08-31T07:22:17Z"
    },
    "stats": {
      "stars": 88,
      "forks": 8,
      "watchers": 88,
      "open_issues": 0,
      "size": 644
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 115052
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "![4de798b7ba63fa0fb6a2b7f338bd997](https://github.com/user-attachments/assets/030b190e-d33b-4f50-a19c-6044f41b9cb6)\n# ClassLinefix\n\n一个专业的Java字节码行号恢复工具，可以为字节码添加顺序行号，使得调试和异常堆栈跟踪更加清晰。\n\n\n## 特性\n\n### 🚀 核心功能\n- **智能行号恢复**: 集成多种策略，自动选择最适合的方法\n- **批量处理**: 支持JAR和CLASS文件的批量处理\n- **目录结构保持**: 输出文件保持与输入相同的目录结构\n- **重复处理检测**: 自动检测已有行号信息，避免重复处理\n\n\n## 使用方法\n\n### 基本用法\n```bash\njava -jar ClassLinefix.jar -i <输入目录> -o <输出目录>\n```\n\n### 命令行选项\n```\nusage: java -jar ClassLinefix.jar\n  -h,--help                      显示帮助信息\n  -i,--input <directory>         包含JAR和CLASS文件的输入目录\n  -o,--output <directory>        处理后文件的输出目录\n  -p,--packages <package1,package2,...>  排除指定包名或类名的处理（逗号分隔）\n  -s,--skip-inner <true|false>   跳过内部类和包含内部类的类（默认：false）\n```\n\n### 使用示例\n\n#### 基本用法\n```bash\n# 处理所有文件\njava -jar ClassLinefix.jar -i ./input-jars -o ./output-jars\n```\n\n#### 排除包含内部类的文件\n```bash\n# 跳过内部类\njava -jar ClassLinefix.jar -i ./input-jars -o ./output-jars -s true\n```\n\n#### 排除特定包\n```bash\n# 排除指定包的处理\njava -jar ClassLinefix.jar -i ./input-jars -o ./output-jars -p \"com.example.exclude,org.test\"\n```\n\n#### 复合选项使用\n```bash\n# 跳过内部类且排除特定包\njava -jar ClassLinefix.jar -i ./input-jars -o ./output-jars -s true -p \"com.obfuscated\"\n```\n\n\n\n## 配置选项详解\n\n### 内部类处理 (`--skip-inner`)\n- **默认值**: `false`\n- **作用**: 控制是否处理内部类和包含内部类的外部类\n\n### 包排除 (`--packages`)\n- **格式**: 逗号分隔的包名或类名列表\n- **支持模式**:\n  - 完整类名: `com.example.MyClass`\n  - 包名前缀: `com.example`（会排除该包下所有类）\n- **使用场景**: 排除已知有问题的包或不需要调试的第三方库\n\n### 输入输出目录\n- **输入目录** (`--input`): 包含JAR和CLASS文件的源目录\n- **输出目录** (`--output`): 处理后文件的目标目录\n- **目录结构**: 输出目录会完全保持输入目录的结构\n\n## 工作原理\n\n### 处理流程\n1. **扫描输入目录**: 递归查找所有JAR和CLASS文件\n2. **文件分析**: 检查每个文件是否已包含行号信息\n3. **内部类检测**: 根据配置决定是否跳过内部类和包含内部类的文件\n4. **包过滤**: 检查文件是否在排除包列表中\n5. **策略选择**: 根据文件特征自动选择最适合的恢复策略\n6. **行号恢复**: 应用选定的策略添加行号信息\n7. **结构保持**: 在输出目录中重建相同的目录结构\n\n### 安全性和兼容性\n- **已有行号检测**: 自动跳过已包含行号信息的文件\n- **智能过滤**: 内部类检测和包排除机制\n- **字节码完整性**: 确保不破坏原始字节码的逻辑结构\n- **跳转目标保护**: 智能处理现有的标签和跳转指令，避免破坏控制流\n- **内部类安全**: 可选的内部类跳过机制，避免处理复杂的嵌套结构\n- **错误恢复**: 处理失败时保持原始文件不变\n\n\n\n## 常见问题\n\n\n**Q: 处理后的JAR文件无法运行**\n\nA: 通过报错确认具体是哪些类存在问题，可暂时使用-p参数排除这些类。\n\n**Q: 某些代码依然没有行号信息**\n\nA: 静态代码块没有添加行号信息\n\n**Q: 某些文件被跳过**\n\nA: 工具会自动跳过已包含行号信息的文件，这是正常行为。\n\n**Q: 程序一直循环卡死**\n\nA: 输出目录不能为输入目录的子目录\n\n**Q: 调试时有时会乱跳行号**\n\nA：行号恢复不能完美复原\n\n# 帆软行号恢复\n\n未恢复行号前帆软不能正常调试\n![](https://github.com/user-attachments/assets/93b3ef73-a058-4449-a1dc-14c645c78c7f)\n只能打方法断点，行断点显示不可用\n\n将工具复制到帆软的`WEB-INF`下，重命名lib为lib2然后执行下面命令\n\n```bash\njava -jar ClassLinefix-1.0.0.jar -i lib2 -o lib -p com.fr.license.function,com.fr.plugin.bridge,com.fr.plugin.manage,com.fr.general.GeneralContext,com.fr.general.GeneralUtils\n```\n此处必须设置`-p`排除某些类才行\n\n![](images/fab2b3c1-743c-467c-ba42-854f5cfcbe3b.png)\n默认为INFO输出详细日志在log目录下\n\n![](images/b84b8c55-1b28-40b3-a928-48a52b4b225e.png)\n使用恢复行号后的jar运行程序，然后将恢复行号的lib加入idea依赖可以看到成功断点\n",
      "default_branch": "master"
    },
    "fetched_at": "2025-09-24T02:18:46.665336"
  },
  {
    "basic_info": {
      "name": "glowxq-oj",
      "full_name": "glowxq/glowxq-oj",
      "owner": "glowxq",
      "description": "Glowxq-OJ OJ 专业开源在线编程测评系统 | 基于Spring Boot 3.x + Java 21 + Vue 3构建 | 支持ACM/ICPC竞赛、信奥赛训练、编程教育 | 多语言判题、实时竞赛、在线IDE | Docker一键部署 | Modern Online Judge Platform for Competitive Programming & Coding Education",
      "url": "https://github.com/glowxq/glowxq-oj",
      "clone_url": "https://github.com/glowxq/glowxq-oj.git",
      "ssh_url": "git@github.com:glowxq/glowxq-oj.git",
      "homepage": "",
      "created_at": "2025-08-28T00:24:57Z",
      "updated_at": "2025-09-23T23:57:05Z",
      "pushed_at": "2025-09-23T07:41:48Z"
    },
    "stats": {
      "stars": 82,
      "forks": 14,
      "watchers": 82,
      "open_issues": 0,
      "size": 39653
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 2212002,
        "C++": 165029,
        "FreeMarker": 40292,
        "Shell": 19243,
        "PowerShell": 13172,
        "JavaScript": 4174,
        "Dockerfile": 3206,
        "HTML": 447,
        "CSS": 42
      },
      "license": "Apache License 2.0",
      "topics": []
    },
    "content": {
      "readme": "# Glowxq-OJ - 在线编程测评系统\n\n<div align=\"center\">\n\n![GlowXQ Logo](docs/images/logo-icon.svg)\n\n\n\n**面向信奥赛、少儿编程教学的在线测评平台**\n\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](LICENSE)\n[![Java](https://img.shields.io/badge/Java-21-orange.svg)](https://openjdk.java.net/projects/jdk/21/)\n[![Spring Boot](https://img.shields.io/badge/Spring%20Boot-3.x-green.svg)](https://spring.io/projects/spring-boot)\n[![Vue](https://img.shields.io/badge/Vue-3.x-brightgreen.svg)](https://vuejs.org/)\n[![Docker](https://img.shields.io/badge/Docker-Supported-blue.svg)](https://www.docker.com/)\n\n![GlowXQ Logo](docs/images/logo.svg)\n\n[🚀 在线体验](http://42.192.87.184:7301/login) | [📖 完整文档](docs/) | [🐛 问题反馈](https://github.com/glowxq/glowxq-oj/issues)\n\n</div>\n\n## ✨ 项目简介\n\nGlowxq-OJ 是一个专为信息学奥林匹克竞赛（信奥赛）和少儿编程教学设计的在线编程测评系统。本项目提供开源版本和商业版本，开源版本包含核心的在线测评功能，商业版本提供更完整的教学管理功能。\n\n### 🎯 在线体验\n\n- **商业版体验地址**: [http://42.192.87.184:7301](http://42.192.87.184:7301) (多租户版本记得**选择租户**)\n- **开源版本**: 本仓库提供完整的开源实现，前后端已经整合，运行后访问http://localhost:7101访问\n\n#### 🔑 默认测试账号\n\n系统提供以下测试账号，密码统一为：**123456**\n\n| 角色 | 账号 | 密码 | 说明 |\n|------|------|------|------|\n| 管理员 | 13667700000 | 123456 | 系统管理员，拥有所有权限 |\n| 学生 | 13667700001 | 123456 | 普通学生账号，可提交代码 |\n| 校长 | 13667700002 | 123456 | 校长账号，管理学校事务 |\n| 老师 | 13667700003 | 123456 | 教师账号，管理班级和学生 |\n| 系统管理员 | 13667700004 | 123456 | 超级管理员，系统维护 |\n\n> 💡 **提示**: 生产环境请务必修改默认密码！\n\n### 🌐 SaaS 云服务\n\n**无需部署，开箱即用！** 我们提供专业的SaaS云服务，类似于 [Hydro](https://hydro.ac)、[洛谷](https://www.luogu.com.cn/) 等知名平台。\n\n#### ✨ SaaS服务优势\n- 🚀 **即开即用**: 无需复杂部署，注册账号即可使用\n- 🎯 **完整功能**: 体验所有商业版功能，包括班级管理、多租户、GlowC、GlowGame等\n- 🛠️ **技术支持**: 专业技术团队提供全方位支持\n- 🔒 **数据安全**: 企业级数据安全保障\n- 📈 **弹性扩容**: 根据使用量自动扩容，无需担心性能问题\n- 💰 **成本优化**: 按需付费，相比自建节省70%以上成本\n\n#### 📞 获取SaaS服务\n想要体验完整的商业版功能？联系我们获取SaaS服务账号：\n- **邮箱**: [glowxq@qq.com](mailto:glowxq@qq.com)\n- **微信**: 扫描下方二维码添加作者微信\n\n<div align=\"center\">\n<table>\n<tr>\n<td align=\"center\">\n<img src=\"docs/images/contact-qr.jpg\" width=\"200\" alt=\"联系二维码\"/>\n<br/>\n<b>联系客服微信</b>\n</td>\n<td align=\"center\">\n<img src=\"docs/images/group-wechat.png\" width=\"200\" alt=\"微信技术交流群\"/>\n<br/>\n<b>技术交流群</b>\n</td>\n</tr>\n</table>\n</div>\n\n### 📋 版本对比\n\n| 功能模块 | 开源版 | 商业版 |\n|---------|--------|--------|\n| 在线测评 | ✅ | ✅ |\n| 题目管理 | ✅ | ✅ |\n| 用户系统 | ✅ | ✅ |\n| 代码编辑器 | ✅ | ✅ |\n| 多语言支持 | ✅ | ✅ |\n| 班级管理 | ❌ | ✅ |\n| 多租户系统 | ❌ | ✅ |\n| GlowC (C++画图) | ❌ | ✅ |\n| GlowGame (编程游戏) | ❌ | ✅ |\n| 部门管理 | ❌ | ✅ |\n| 持续更新 | 社区驱动 | 商业支持 |\n\n## 🏗️ 技术架构\n\n### 后端技术栈\n- **核心框架**: Spring Boot 3.x + Java 21\n- **数据库**: MySQL 8.0 + Redis\n- **ORM框架**: MyBatis-Flex\n- **权限认证**: Sa-Token\n- **API文档**: Knife4j (Swagger)\n- **消息队列**: 内置队列系统\n- **文件存储**: 本地存储 + OSS支持\n- **容器化**: Docker + Docker Compose\n\n### 前端技术栈\n- **框架**: Vue 3.x + TypeScript\n- **UI组件**: Element Plus\n- **代码编辑器**: Monaco Editor\n- **构建工具**: Vite\n- **状态管理**: Pinia\n\n### 判题系统\n- **沙箱技术**: 安全沙箱\n- **支持语言**: C/C++、Java、Python、JavaScript等\n- **判题模式**: 普通判题、特殊判题、交互判题\n- **性能优化**: 虚拟线程 + 异步处理\n\n## 📚 文档导航\n\n### 🚀 快速上手\n- [📖 文档中心](docs/) - 完整的文档导航和索引\n- [⚡ 快速部署](docs/deployment/quick-start.md) - 5分钟快速部署指南\n- [🐳 Docker部署](docs/deployment/docker-deploy.md) - Docker一键部署方案\n\n### 📖 详细文档\n- [🛠️ 部署指南](docs/deployment/deployment-guide.md) - 完整的部署配置指南\n- [💻 开发指南](docs/development/development-guide.md) - 开发环境搭建和规范\n- [👤 用户指南](docs/user/user-guide.md) - 系统使用手册\n- [🔧 管理指南](docs/admin/admin-guide.md) - 系统管理员操作指南\n\n### 🎯 按角色查看\n- **开发者**: [开发指南](docs/development/development-guide.md) → [API文档](docs/development/api-reference.md)\n- **管理员**: [快速部署](docs/deployment/quick-start.md) → [管理指南](docs/admin/admin-guide.md)\n- **教师**: [用户指南](docs/user/user-guide.md) → [功能介绍](docs/user/features.md)\n- **学生**: [用户指南](docs/user/user-guide.md) → [常见问题](docs/user/faq.md)\n\n## 🚀 快速开始\n\n### 环境要求\n\n- **Java**: JDK 21+\n- **Node.js**: 16.x+\n- **MySQL**: 8.0+\n- **Redis**: 6.0+\n- **Docker**: 20.x+ (可选)\n- **Maven**: 3.8+\n\n### 🐳 Docker 一键部署（推荐）\n\n**全自动部署，包含MySQL、Redis、应用服务的完整解决方案！**\n\n1. **克隆项目**\n```bash\ngit clone https://github.com/glowxq/glowxq-oj.git\ncd glowxq-oj\n```\n\n2. **一键启动**\n```bash\n# Linux/macOS\nchmod +x start.sh\n./start.sh\n\n# Windows (使用Git Bash或WSL)\nbash start.sh\n```\n\n3. **访问系统**\n- 前端地址: http://localhost:7101\n- API文档: http://localhost:7101/doc.html\n\n**✨ 特性：**\n- 🚀 一键部署，自动配置MySQL、Redis\n- 📦 自动导入初始化SQL数据\n- 🔄 服务健康检查和自动重启\n- 💾 数据持久化存储\n- 📊 完整的日志和监控\n\n**🛠️ 管理命令：**\n```bash\n./start.sh          # 启动所有服务\n./stop.sh           # 停止所有服务\n./stop.sh --cleanup # 停止并清理资源\n```\n\n详细部署说明请参考：[Docker部署指南](docs/deployment/docker-deploy.md)\n\n### 🛠️ 本地开发部署\n\n#### 1. 数据库准备\n\n**MySQL 配置**\n```sql\n-- 创建数据库\nCREATE DATABASE glowxq_oj CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;\nCREATE DATABASE glowxq_system CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;\n\n-- 导入初始化数据\nsource init/初始化SQL.sql;\n```\n\n**Redis 配置**\n```bash\n# 启动 Redis 服务\nredis-server\n```\n\n#### 2. 后端启动\n\n```bash\n# 安装依赖\nmvn clean install -DskipTests\n\n# 启动 OJ 服务\ncd app/app-oj\nmvn spring-boot:run\n\n# 启动系统管理服务（可选）\ncd app/app-system\nmvn spring-boot:run\n```\n\n#### 3. 前端启动\n\n前端已经集成到springboot中 springboot启动时会自动启动vue项目，所以不需要再启动前端项目。\n直接访问 localhost:7101 即可访问前端页面。\n\n## 📸 系统截图\n\n### 🎨 特色功能 - C++画图 (GlowC)\n<div a",
      "default_branch": "master"
    },
    "fetched_at": "2025-09-24T02:18:47.983968"
  },
  {
    "basic_info": {
      "name": "literature-assistant",
      "full_name": "liyupi/literature-assistant",
      "owner": "liyupi",
      "description": "Spring Boot 3 + Vue 3 的 AI 文献阅读助手项目，帮助用户生成文献阅读指南、智能文献管理和检索。",
      "url": "https://github.com/liyupi/literature-assistant",
      "clone_url": "https://github.com/liyupi/literature-assistant.git",
      "ssh_url": "git@github.com:liyupi/literature-assistant.git",
      "homepage": "",
      "created_at": "2025-09-11T04:08:44Z",
      "updated_at": "2025-09-24T00:35:03Z",
      "pushed_at": "2025-09-12T03:13:27Z"
    },
    "stats": {
      "stars": 72,
      "forks": 19,
      "watchers": 72,
      "open_issues": 1,
      "size": 64648
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 115233,
        "Vue": 93802,
        "JavaScript": 9849,
        "Shell": 2587,
        "CSS": 2245,
        "Batchfile": 2057,
        "HTML": 358
      },
      "license": null,
      "topics": [
        "ai",
        "backend",
        "frontend",
        "java",
        "kimi",
        "springboot",
        "vue",
        "web"
      ]
    },
    "content": {
      "readme": "# 鱼皮文献助手\n\n一个基于 Spring Boot 3 + Vue 的现代化文献管理后端服务，集成 AI 技术为用户提供智能文献阅读指南生成、文献管理和检索功能。\n\n![](docs/wenxianzhushou-image.png)\n\n> 项目利用 AI Vibe Coding 实现\n\n## ✨ 功能特性\n\n- 📚 **文献上传与解析**: 支持 PDF、Word (.doc/.docx)、Markdown 格式文献的上传和内容解析\n- 🤖 **AI 阅读指南生成**: 集成 Kimi AI，基于文献内容自动生成结构化阅读指南\n- 🏷️ **智能分类标签**: AI 自动为文献生成分类标签，便于管理和检索\n- 🔍 **多维度检索**: 支持关键词、标签、文件类型、时间范围等多种筛选条件\n- ⚡ **实时流式响应**: 基于 SSE 技术，实时推送 AI 生成进度和结果\n- 🔧 **完善的异常处理**: 统一异常处理机制，提供友好的错误信息\n- 📖 **API 文档**: 集成 Knife4j，提供完善的 API 接口文档\n\n![](docs/manage-image.png)\n\n## 环境准备\n\n在启动项目前，请确保您的开发环境已经安装并正确配置了以下依赖。\n\n- Java: 21+\n- Node: 20+\n\n\n### 1、Java 21+\n\n**验证安装**\n\n打开终端（macOS）或命令提示符（Windows），输入以下命令。如果能正确显示版本号（21 或更高版本），则说明 Java 环境已配置成功。\n\n```bash\njava -version\n```\n\n-----\n\n**Windows 安装指南**\n\n1. 访问官方 OpenJDK 发行版网站，例如 [Oracle JDK 21](https://www.oracle.com/java/technologies/downloads/#java21)。\n2. 下载适用于 Windows x64 的 `.msi` 安装程序。\n3. 双击运行安装程序，并按照图形化界面的提示完成安装。安装程序会自动配置 `JAVA_HOME` 环境变量和系统 `Path`。\n\n-----\n\n**macOS 安装指南**\n\n推荐使用 [Homebrew](https://brew.sh/) 进行安装，方便管理。\n\n1. 打开终端。\n2. 执行以下命令安装 OpenJDK 21：\n   ```bash\n   brew install openjdk@21\n   ```\n3. 安装完成后，根据 Homebrew 的提示，将 Java 添加到环境变量中。\n\n再次执行以下命令，如果能正常展示版本号即是安装成功：\n\n```bash\njava -version\n```\n\n### 2、Node.js (20+)\n\n**验证安装**\n\n打开终端或命令提示符，输入以下命令。如果能正确显示版本号（Node.js 为 20 或更高版本），则说明 Node.js 环境已配置成功。\n\n```bash\nnode -v\n```\n\n-----\n\n**Windows 安装指南**\n\n1. 访问 [Node.js 官方网站](https://nodejs.org/en/download)。\n2. 下载推荐的 Windows Installer (`.msi`) 版本（LTS，长期支持版）。\n3. 双击运行安装程序，并按照默认选项完成安装。\n\n-----\n\n**macOS 安装指南**\n\n推荐使用 [Homebrew](https://brew.sh/) 进行安装。\n\n1. 打开终端。\n2. 执行以下命令安装 Node.js 20：\n   ```bash\n   brew install node@20\n   ```\n3. 安装完成后即可直接使用 `node` 和 `npm` 命令。\n\n## 🚀 快速开始\n\n项目已内置 H2 数据库，无需安装和额外配置，开箱即用。\n\n### 方式一：使用启动脚本 (推荐)\n\n- **Windows 系统**: 双击运行根目录下的 `start.bat` 脚本。\n\n- **Linux / macOS 系统**: 在项目根目录下执行 `start.sh` 脚本：\n\n  ```bash\n  sh start.sh\n  ```\n\n### 方式二：手动编译运行\n\n```bash\n# 编译项目\nmvn clean compile\n\n# 运行项目\nmvn spring-boot:run\n\n# 或者打包后运行\nmvn clean package\njava -jar target/literature-assistant-0.0.1-SNAPSHOT.jar\n```\n\n### 访问验证\n\n- **应用服务**: http://localhost:8086/api\n- **API 文档**: http://localhost:8086/api/doc.html\n- **健康检查**: http://localhost:8086/api/literature/health\n\n## 🛠 技术栈\n\n- **框架**: Spring Boot 3.5.5\n- **数据库**: H2 Database + MyBatis-Plus 3.5.5\n- **连接池**: HikariCP\n- **文档处理**: Apache POI (Word)、PDFBox (PDF)、CommonMark (Markdown)\n- **AI 集成**: Kimi AI API + OkHttp SSE\n- **API 文档**: Knife4j 4.5.0\n- **工具库**: Hutool 5.8.29\n- **Java 版本**: Java 21\n\n\n## 🔧 核心配置说明\n\n### 数据库配置\n\n项目默认使用 H2 嵌入式数据库，数据文件将存储在项目根目录的 `data` 文件夹下，无需额外配置。\n\n```yaml\nspring:\n  datasource:\n    # 使用 H2 嵌入式数据库，无需安装\n    driver-class-name: org.h2.Driver\n    url: jdbc:h2:file:./data/literature_assistant\n```\n\n### 文件上传配置\n\n```yaml\nliterature:\n  file:\n    upload-path: ./uploads/documents           # 文件存储路径\n    max-file-size: 10MB                       # 单文件最大大小\n    allowed-extensions: pdf,doc,docx,md,markdown # 允许的文件类型\n```\n\n### AI 服务配置\n\n```yaml\nliterature:\n  ai:\n    base-url: https://api.moonshot.cn/v1      # Kimi AI API 地址\n    model: kimi-k2-turbo-preview              # 使用的模型\n    max-tokens: 20480                         # 最大 token 数\n    temperature: 0.7                          # 生成随机性\n    timeout: 60000                            # 请求超时时间（毫秒）\n```\n\n## 🔄 开发指南\n\n### 添加新的文件类型支持\n\n1. 在 `FileProcessingService` 中添加新的解析方法\n2. 更新 `allowedExtensions` 配置\n3. 在 `extractFileContent` 方法中添加类型判断\n\n### 扩展查询条件\n\n1. 在 `LiteratureQueryRequest` 中添加新的查询字段\n2. 更新 `LiteratureMapper.xml` 中的查询条件\n3. 确保数据库索引支持新的查询字段\n\n## 🙏 致谢\n\n- [Spring Boot](https://spring.io/projects/spring-boot) - 企业级 Java 应用框架\n- [MyBatis-Plus](https://baomidou.com/) - MyBatis 增强工具\n- [Kimi AI](https://www.moonshot.cn/) - 智能对话 AI 服务\n- [Apache POI](https://poi.apache.org/) - Java 文档处理库\n- [PDFBox](https://pdfbox.apache.org/) - Java PDF 处理库\n- [Knife4j](https://doc.xiaominfo.com/) - API 文档生成工具\n- [Hutool](https://hutool.cn/) - Java 工具类库\n\n---\n\n让 AI 赋能学术阅读，让文献理解更高效！",
      "default_branch": "master"
    },
    "fetched_at": "2025-09-24T02:18:49.273491"
  },
  {
    "basic_info": {
      "name": "GhidraGPT",
      "full_name": "ZeroDaysBroker/GhidraGPT",
      "owner": "ZeroDaysBroker",
      "description": "Integrates GPT models into Ghidra for automated code analysis, variable renaming, vulnerability detection, and explanation generation.",
      "url": "https://github.com/ZeroDaysBroker/GhidraGPT",
      "clone_url": "https://github.com/ZeroDaysBroker/GhidraGPT.git",
      "ssh_url": "git@github.com:ZeroDaysBroker/GhidraGPT.git",
      "homepage": "",
      "created_at": "2025-09-12T19:40:05Z",
      "updated_at": "2025-09-23T08:00:27Z",
      "pushed_at": "2025-09-13T15:56:48Z"
    },
    "stats": {
      "stars": 67,
      "forks": 4,
      "watchers": 67,
      "open_issues": 0,
      "size": 4255
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 156479,
        "Shell": 11810
      },
      "license": "Apache License 2.0",
      "topics": [
        "agent",
        "ghidra",
        "ghidra-extension",
        "ghidra-plugin",
        "gpt",
        "java",
        "reverse-engineering"
      ]
    },
    "content": {
      "readme": "# GhidraGPT\n\n<div align=\"center\">\n  \n![GhidraGPT Logo](assets/logo.png)\n\n**Author**: Mohamed Benchikh\n\n[![GitHub Stars](https://img.shields.io/github/stars/ZeroDaysBroker/GhidraGPT?style=social)](https://github.com/ZeroDaysBroker/GhidraGPT/stargazers)\n[![GitHub Forks](https://img.shields.io/github/forks/ZeroDaysBroker/GhidraGPT?style=social)](https://github.com/ZeroDaysBroker/GhidraGPT/network)\n[![GitHub Issues](https://img.shields.io/github/issues/ZeroDaysBroker/GhidraGPT)](https://github.com/ZeroDaysBroker/GhidraGPT/issues)\n[![License](https://img.shields.io/github/license/ZeroDaysBroker/GhidraGPT)](https://github.com/ZeroDaysBroker/GhidraGPT/blob/main/LICENSE)\n\n</div>\n\nA powerful Ghidra plugin that integrates Large Language Models (LLMs) to enhance reverse engineering workflows with AI-powered code analysis and enhancement capabilities.\n\n## 🎥 Demo\n\n![Demo](assets/demo.gif)\n\n\n## ⚡ Real-Time Performance\n\nFor optimal real-time performance, it is recommended to use smaller and faster models such as **grok-3** or **deepseek-chat**. These models deliver quicker responses, making them ideal for interactive and latency-sensitive reverse engineering workflows. Using larger reasoning models may result in slower response times.\n\n## 🚀 Features\n\n### Core Functionality\n- **Code Enhancement**: AI-powered function and variable renaming for improved code readability\n- **Code Explanation**: Detailed explanations of function logic and behavior\n- **Code Analysis**: Vulnerability detection and security analysis\n- **Multi-LLM Support**: Compatible with 8+ AI providers including OpenAI, Anthropic, Google Gemini, Cohere, Mistral AI, DeepSeek, Grok (xAI), and Ollama\n\n### Configuration\n- **Flexible Configuration**: Easy setup through configuration panel\n- **Stream Processing**: Real-time AI response streaming for better user experience\n\n### Integration Features\n- **Context Menu Integration**: Right-click functions for instant AI analysis\n- **Console Interface**: Dedicated console for viewing AI responses and results\n- **Automatic Analysis**: Integration with Ghidra's analysis pipeline\n- **Theme Support**: Custom theming for enhanced UI experience\n\n## 🛠️ Installation\n\n1. **Clone the Repository**:\n   ```bash\n   git clone https://github.com/ZeroDaysBroker/GhidraGPT.git\n   cd GhidraGPT\n   ```\n\n2. **Build the Plugin**:\n   ```bash\n   ./build.sh\n   ```\n\n3. **Install in Ghidra**:\n   ```bash\n   ./install.sh\n   ```\n\n4. **Configure API Keys**:\n   - Open Ghidra and navigate to the GhidraGPT configuration panel\n   - Enter your preferred AI service API key\n   - API keys are automatically encrypted and stored securely\n\n## 📋 Usage\n\n### Available Actions\nAccess these features through the right-click context menu on any function:\n\n- **GhidraGPT → Enhance Code**: Improve function and variable names using AI analysis\n- **GhidraGPT → Explain Code**: Get detailed explanations of function behavior\n- **GhidraGPT → Analyze Code**: Detect potential security vulnerabilities\n\n### Supported AI Providers\n- **OpenAI**: GPT models\n- **Anthropic**: Claude models\n- **Google Gemini**: Gemini models\n- **Cohere**: Command models\n- **Mistral AI**: Mistral models\n- **DeepSeek**: DeepSeek models\n- **Grok (xAI)**: Grok models\n- **Ollama**: Local models - No API key required\n\n## 🏗️ Architecture\n\n### Service Layer\n- **`CodeEnhancementService`**: Handles AI-powered function and variable renaming\n- **`CodeAnalysisService`**: Manages comprehensive code analysis and vulnerability detection\n- **`GPTService`**: Core AI communication layer with multi-provider support\n- **`ConfigurationManager`**: Configuration and API key management\n\n### UI Components\n- **`GhidraGPTProvider`**: Main plugin provider with context menu integration\n- **`GhidraGPTConsole`**: Dedicated console for AI responses\n- **`ConfigurationPanel`**: User-friendly configuration interface\n\n## ⚠️ Pending Work\n\n### Code Retyping & Analysis Enhancement\n- **Variable retyping**: Implement automated variable retyping\n- **Cross-Reference Analysis**: Improve analysis of function calls and data flow\n\n### Performance Optimizations\n- **Batch Processing**: Implement batch analysis for multiple functions\n- **Caching System**: Add intelligent caching for AI responses\n\n### Additional Features\n- **Custom Prompts**: Allow users to define custom AI prompts for specific analysis needs\n- **Export Functionality**: Add ability to export analysis results\n\n## 🤝 Contributing\n\nContributions are welcome! Please feel free to submit issues, feature requests, or pull requests.\n\n**Repository**: [https://github.com/ZeroDaysBroker/GhidraGPT](https://github.com/ZeroDaysBroker/GhidraGPT)\n\n- 🐛 **Report Issues**: [Submit bug reports and feature requests](https://github.com/ZeroDaysBroker/GhidraGPT/issues)\n- 🔧 **Pull Requests**: [Contribute code improvements](https://github.com/ZeroDaysBroker/GhidraGPT/pulls)\n- 📖 **Documentation**: Help improve documentation and examples\n- 🧪 **Testing**: Test with different AI providers and report compatibility\n\n## 📄 L",
      "default_branch": "main"
    },
    "fetched_at": "2025-09-24T02:18:50.546656"
  },
  {
    "basic_info": {
      "name": "AndroidIDE-Rv2",
      "full_name": "Mohammed-Baqer-null/AndroidIDE-Rv2",
      "owner": "Mohammed-Baqer-null",
      "description": "AndroidIDE-Rv2 is an IDE for Android to develop full featured Android apps.",
      "url": "https://github.com/Mohammed-Baqer-null/AndroidIDE-Rv2",
      "clone_url": "https://github.com/Mohammed-Baqer-null/AndroidIDE-Rv2.git",
      "ssh_url": "git@github.com:Mohammed-Baqer-null/AndroidIDE-Rv2.git",
      "homepage": "https://github.com/Mohammed-Baqer-null/AndroidIDE-Rv2?tab=readme-ov-file",
      "created_at": "2025-08-27T09:19:47Z",
      "updated_at": "2025-09-23T23:30:40Z",
      "pushed_at": "2025-09-08T18:43:57Z"
    },
    "stats": {
      "stars": 65,
      "forks": 10,
      "watchers": 65,
      "open_issues": 8,
      "size": 1044435
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 35429531,
        "Kotlin": 4073899,
        "ANTLR": 109365,
        "HTML": 109220,
        "C++": 23983,
        "Shell": 16283,
        "Lex": 13233,
        "Scheme": 10276,
        "Tree-sitter Query": 8226,
        "C": 7548,
        "JavaScript": 3824,
        "ReScript": 3232,
        "Makefile": 2698,
        "AIDL": 1165
      },
      "license": "GNU General Public License v3.0",
      "topics": [
        "android",
        "android-application",
        "android-development",
        "android-studio",
        "androiddevelopment",
        "androidide"
      ]
    },
    "content": {
      "readme": "<p align=\"center\">\r\n  <img src=\"./images/icon.png\" alt=\"AndroidIDE\" width=\"80\" height=\"80\"/>\r\n</p>\r\n\r\n<h2 align=\"center\"><b>AndroidIDE-Rv2</b></h2>\r\n<p align=\"center\">\r\n  An IDE to develop real, Gradle-based Android applications on Android devices.\r\n<p><br>\r\n\r\n<p align=\"center\">\r\n<!-- Latest release -->\r\n<img src=\"https://img.shields.io/github/v/release/Mohammed-baqer-null/AndroidIDE-Rv2?include_prereleases&amp;label=latest%20release\" alt=\"Latest release\">\r\n<!-- Build and test -->\r\n<!-- <img src=\"https://github.com/Mohammed-baqer-null/AndroidIDE-Rv2/actions/workflows/asm_build.yml/badge.svg\" alt=\"Builds and tests\"> -->\r\n<!-- Crowdin -->\r\n<a href=\"https://crowdin.com/project/androidide\"><img src=\"https://badges.crowdin.net/androidide/localized.svg\" alt=\"Crowdin\"></a>\r\n<!-- License -->\r\n<img src=\"https://img.shields.io/badge/License-GPLv3-blue.svg\" alt=\"License\"></p>\r\n\r\n<p align=\"center\">\r\n  <a href=\"https://docs.androidide.com/\">Explore the docs »</a> &nbsp; &nbsp;\r\n</p>\r\n\r\n<p align=\"center\">\r\n  <a href=\"https://github.com/Mohammed-baqer-null/AndroidIDE-Rv2/issues/new?labels=bug&template=BUG.yml&title=%5BBug%5D%3A+\">Report a bug</a> &nbsp; &#8226; &nbsp;\r\n  <a href=\"https://github.com/Mohammed-baqer-null/AndroidIDE-Rv2/issues/new?labels=feature&template=FEATURE.yml&title=%5BFeature%5D%3A+\">Request a feature</a> &nbsp; &#8226; &nbsp;\r\n  <a href=\"https://t.me/rv2ide\">Join us on Telegram</a>\r\n</p>\r\n\r\n\r\n## New Features\r\n\r\n- [x] NDK support (Only for `aarch64` android devices)\r\n- [x] Install via shizuku (implemented by [MiyazKaori](https://github.com/MiyazKaori))\r\n- Check out the [New Features](https://github.com/Mohammed-Baqer-null/AndroidIDE-Rv2/tree/dev/whatsnew#whats-new) implemented by [Mohammed-baqer-null](https://github.com/Mohammed-baqer-null)\r\n\r\n## Features\r\n\r\n- [x] Gradle support.\r\n- [x] `JDK 11` and `JDK 17` available for use.\r\n- [x] Terminal with necessary packages.\r\n- [x] Custom environment variables (for Build & Terminal).\r\n- [x] SDK Manager (Available via terminal).\r\n- [x] API information for classes and their members (since, removed, deprecated).\r\n- [x] Log reader (shows your app's logs in real-time)\r\n- [ ] Language servers\r\n    - [x] Java\r\n    - [x] XML\r\n    - [ ] Kotlin\r\n- [ ] UI Designer\r\n    - [x] Layout inflater\r\n    - [x] Resolve resource references\r\n    - [x] Auto-complete resource values when user edits attributes using the attribute editor\r\n    - [x] Drag & Drop\r\n    - [x] Visual attribute editor\r\n    - [x] Android Widgets\r\n- [ ] String Translator\r\n- [ ] Asset Studio (Drawable & Icon Maker)\r\n- [x] Git\r\n\r\n## Installation\r\n\r\n[<img src=\"https://github.com/Kunzisoft/Github-badge/raw/main/get-it-on-github.svg\"\r\n    alt=\"Get it on F-Droid\"\r\n    height=\"80\">](https://github.com/Mohammed-baqer-null/AndroidIDE-Rv2/releases)\r\n\r\n> _Please install AndroidIDE-Rv2 from trusted sources only i.e._\r\n> - [_GitHub Releases_](https://github.com/Mohammed-baqer-null/AndroidIDE-Rv2/releases)\r\n\r\n- Download the AndroidIDE-Rv2 APK from the mentioned trusted sources.\r\n- Follow the\r\n  instructions [here](https://docs.androidide.com/tutorials/get-started.html) to\r\n  install the build tools.\r\n\r\n## Limitations\r\n\r\n- For working with projects in AndroidIDE, your project must use Android Gradle Plugin v7.2.0 or\r\n  newer. Projects with older AGP must be migrated to newer versions.\r\n- SDK Manager is already included in Android SDK and is accessible in AndroidIDE-Rv2 via its Terminal.\r\n  But, you cannot use it to install some tools (like NDK) because those tools are not built for\r\n  Android.\r\n- No official NDK support because we haven't built the NDK for Android.\r\n\r\nThe app is still being developed actively. It's in beta stage and may not be stable. if you have any\r\nissues using the app, please let us know.\r\n\r\n## Contributing\r\n\r\nSee the [contributing guide](./CONTRIBUTING.md).\r\n\r\nFor translations, visit the [Crowdin project page](https://crowdin.com/project/androidide).\r\n\r\n## Thanks to\r\n\r\n- [Rosemoe](https://github.com/Rosemoe) for the\r\n  awesome [CodeEditor](https://github.com/Rosemoe/sora-editor)\r\n- [Termux](https://github.com/termux) for [Terminal Emulator](https://github.com/termux/termux-app)\r\n- [Bogdan Melnychuk](https://github.com/bmelnychuk)\r\n  for [AndroidTreeView](https://github.com/bmelnychuk/AndroidTreeView)\r\n- [George Fraser](https://github.com/georgewfraser) for\r\n  the [Java Language Server](https://github.com/georgewfraser/java-language-server)\r\n- [Itsaky](https://github.com/itsaky) The original developer\r\n  of [AndroidIDE](https://github.com/AndroidIDEOfficial/AndroidIDE.git) whose project I forked and now maintain.\r\n  \r\nThanks to all the developers who have contributed to this project.\r\n\r\n<p>This project is supported by:</p>\r\n<p>\r\n  <a href=\"https://m.do.co/c/54add371d1d7\">\r\n    <img src=\"https://opensource.nyc3.cdn.digitaloceanspaces.com/attribution/assets/SVG/DO_Logo_horizontal_blue.svg\" width=\"201px\">\r\n  </a>\r\n</p>\r\n\r\n## Contact Us\r\n\r\n- [Website](https://m.androidide.com)\r\n- [Telegram](https://t.me/rv2ide",
      "default_branch": "dev"
    },
    "fetched_at": "2025-09-24T02:18:51.860145"
  },
  {
    "basic_info": {
      "name": "askAndLearn",
      "full_name": "jookaz/askAndLearn",
      "owner": "jookaz",
      "description": "智能问学系统",
      "url": "https://github.com/jookaz/askAndLearn",
      "clone_url": "https://github.com/jookaz/askAndLearn.git",
      "ssh_url": "git@github.com:jookaz/askAndLearn.git",
      "homepage": null,
      "created_at": "2025-09-18T03:23:31Z",
      "updated_at": "2025-09-24T00:42:28Z",
      "pushed_at": "2025-09-20T12:21:41Z"
    },
    "stats": {
      "stars": 61,
      "forks": 6,
      "watchers": 61,
      "open_issues": 0,
      "size": 68588
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 277518,
        "Vue": 178539,
        "HTML": 24905,
        "JavaScript": 20023
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "# 智慧问学系统\n\n* 问学：通过向大模型提问，并依据回复内容理解学习的以问促学过程。\n\n* 智慧问学：通过你问你答、他问你答和协同改进，提升学生向大模型的提问能力，以及判别大模型回复的能力。\n\n本系统使用SSM框架实现，使用Spring AI调用大语言模型。使用MySQL数据库存储数据。\n\n## 界面展示\n\n1. 登录界面\n\n<img width=\"1981\" height=\"1259\" alt=\"84AA648C3681506A218A469D3EDA838E\" src=\"https://github.com/user-attachments/assets/6270b30d-4ad1-4ab8-b367-bd2bbc422b5f\" />\n\n\n2. 系统主页\n\n<img width=\"1950\" height=\"1270\" alt=\"819A3828716D6DBB70D02893C783B8EC\" src=\"https://github.com/user-attachments/assets/aa7befcd-eac0-4d54-b3fc-b67678c0157d\" />\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-09-24T02:18:53.158081"
  },
  {
    "basic_info": {
      "name": "FHook",
      "full_name": "Rift0911/FHook",
      "owner": "Rift0911",
      "description": null,
      "url": "https://github.com/Rift0911/FHook",
      "clone_url": "https://github.com/Rift0911/FHook.git",
      "ssh_url": "git@github.com:Rift0911/FHook.git",
      "homepage": null,
      "created_at": "2025-09-16T06:06:06Z",
      "updated_at": "2025-09-23T22:43:06Z",
      "pushed_at": "2025-09-20T13:04:22Z"
    },
    "stats": {
      "stars": 56,
      "forks": 6,
      "watchers": 56,
      "open_issues": 0,
      "size": 7944
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 150195,
        "C": 78424,
        "C++": 32511,
        "CMake": 2695
      },
      "license": "Apache License 2.0",
      "topics": []
    },
    "content": {
      "readme": "<p align=\"right\">Language: <b>English</b> · <a href=\"README.cn.md\">Chinese</a></p>\n\n# FHook\n\n**Full-function HOOK framework for the Android Java layer**\n\n* **debug mode** — initialize and use directly inside the app\n* **Android 9+ (API 28+)**, including the latest versions\n* Intercept and modify **arguments/return values** of any **Java method**\n* **Class/instance-wide batch hooks**, covering common **system hotspots** (class loading, device fingerprint, SharedPreferences writes, etc.)\n* Three integration options: Gradle dependency (`implementation`), source integration (module/source copy), and (under compliance) app injection (repack or dynamic loading)\n\n> For **lawful** security research, testing, and debugging only. Ensure you have proper authorization for any target.\n\n---\n\n## 1. What problem does it solve?\n\n* **Rapid observation**: print call stacks/args/returns at runtime without touching target code\n* **Temporary patching**: tweak args/returns or feed “mock data” to verify branches\n* **Batch coverage**: one-click hook for all methods on a class/instance to accelerate debugging and regression\n* **System hotspot auditing**: `Class.forName` / `ClassLoader.loadClass` / `Settings.Secure.getString` /\n  `System.loadLibrary`, etc. can be intercepted and logged\n\n---\n\n## 2. Scenarios & Environment\n\n* **Environment**: Android 9+ (API 28+); works with Kotlin/Java projects\n* **Scenarios**: feature co-debugging, gray-box testing, automated acceptance, critical-path tracing & audit, crash triage\n* **No dependency on** Xposed / Magisk / Root\n\n---\n\n## 3. Quick Start\n\n### 3.1 Add JitPack repository\n\nAdd to **`settings.gradle`** or the root **`build.gradle`**:\n\n```groovy\ndependencyResolutionManagement {\n  repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\n  repositories {\n    mavenCentral()\n    maven { url 'https://jitpack.io' }\n  }\n}\n```\n\n> Kotlin DSL: `maven(url = \"https://jitpack.io\")`\n\n### 3.2 Add dependency\n\nIn your **app module**:\n\n```groovy\ndependencies {\n  implementation \"com.github.Rift0911:fhook:+\"\n}\n```\n\n### 3.3 Initialize (auto / manual)\n\n**Option A: Auto init in `attachBaseContext`**\n\n```java\n@Override\nprotected void attachBaseContext(Context base) {\n    Log.d(TAG, \"attachBaseContext\");\n    if (FCFG.IS_APP_INIT_AUTO) {\n        Log.i(TAG, \"attachBaseContext FHook.init= \" + FHook.init(base));\n    }\n    super.attachBaseContext(base);\n}\n```\n\n**Option B: Manual init anywhere (e.g., button click)**\n\n```java\nbt_main_02.setOnClickListener(v -> {\n    if (FHook.isInited()) {\n        FHook.unInit();\n    } else {\n        if (!FHook.init(this)) {\n            Toast.makeText(this, \"Init failed\", Toast.LENGTH_LONG).show();\n            Log.e(TAG, \"Init failed\");\n        } else {\n            Toast.makeText(this, \"Init success\", Toast.LENGTH_LONG).show();\n            Log.i(TAG, \"Init success\");\n        }\n    }\n});\n```\n\n> Handy calls: `FHook.unHookAll()` to remove all hooks; `FHook.showHookInfo()` to view current hook status.\n\n### 3.4 Minimal runnable samples\n\n#### A) Hook a regular app method\n\nTake `THook.fun_I_III(int a, int b, int c): int` as an example — **modify args and return**:\n\n```java\nimport java.lang.reflect.Method;\nimport android.util.Log;\n\nMethod m = THook.class.getMethod(\"fun_I_III\", int.class, int.class, int.class);\n\nFHook.hook(m)\n    .setOrigFunRun(true) // run the original method first\n    .setHookEnter((thiz, args, types, hh) -> {\n        // change the first argument\n        args.set(0, 6666);\n        Log.d(\"FHook\", \"fun_I_III enter: \" + args);\n    })\n    .setHookExit((ret, type, hh) -> {\n        // force the return value\n        Log.d(\"FHook\", \"fun_I_III exit, origRet=\" + ret);\n        return 8888;\n    })\n    .commit();\n```\n\n#### B) Hook a system method (device fingerprint sample)\n\nTake `Settings.Secure.getString(ContentResolver, String)` — **forge ANDROID\\_ID** selectively:\n\n```java\nimport android.provider.Settings;\nimport android.content.ContentResolver;\nimport java.lang.reflect.Method;\nimport android.util.Log;\n\nMethod sysGet = Settings.Secure.class.getMethod(\n        \"getString\", ContentResolver.class, String.class);\n\nFHook.hook(sysGet)\n    .setOrigFunRun(true)\n    .setHookEnter((thiz, args, types, hh) -> {\n        String key = (String) args.get(1);\n        hh.extras.put(\"key\", key);\n        Log.d(\"FHook\", \"Settings.Secure.getString key=\" + key);\n    })\n    .setHookExit((ret, type, hh) -> {\n        String key = (String) hh.extras.get(\"key\");\n        if (\"android_id\".equalsIgnoreCase(key)) {\n            return \"a1b2c3d4e5f6a7b8\"; // affect ANDROID_ID only\n        }\n        return ret; // keep others intact\n    })\n    .commit();\n```\n\n> Tip: for interface/bridge methods (e.g., `SharedPreferences.Editor.commit`), use\n> `FHookTool.findMethod4Impl(editor, ifaceMethod)` to locate the **actual implementation method** before hooking for a higher success rate.\n\n---\n\n### 3.5 Constructor Hook Samples (System & Custom)\n\n> Notes: By definition, a **constructor always runs**; `setOrigFunRun(true/false)` **has",
      "default_branch": "master"
    },
    "fetched_at": "2025-09-24T02:18:54.412921"
  },
  {
    "basic_info": {
      "name": "Wayback-Recon",
      "full_name": "aditisingh2707/Wayback-Recon",
      "owner": "aditisingh2707",
      "description": null,
      "url": "https://github.com/aditisingh2707/Wayback-Recon",
      "clone_url": "https://github.com/aditisingh2707/Wayback-Recon.git",
      "ssh_url": "git@github.com:aditisingh2707/Wayback-Recon.git",
      "homepage": null,
      "created_at": "2025-09-08T21:51:19Z",
      "updated_at": "2025-09-19T13:33:14Z",
      "pushed_at": "2025-09-08T23:59:33Z"
    },
    "stats": {
      "stars": 44,
      "forks": 5,
      "watchers": 44,
      "open_issues": 0,
      "size": 4700
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 680718
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "# Wayback-Recon\n\nA Burp Suite extension for passive recon using the Wayback Machine\n\n![w](https://github.com/user-attachments/assets/dcf1421b-09fb-48f5-b086-669c57d4d8ee)\n\n🔍 Overview\n\nWayback Recon integrates the Internet Archive Wayback Machine\ninto Burp Suite, letting you fetch and analyze historical URLs for a target domain directly inside Burp. This helps uncover forgotten endpoints, parameters, and assets that might still be useful for bug bounty or penetration testing.\n\n✨ Features\n✅ Fetch archived URLs from the Wayback Machine for any domain\n\n✅ Display results in a sortable, searchable table\n\n✅ Shows Year, URL, Length, and MIME-Type for each entry\n\n✅ Built-in search filter for quick keyword hunting\n\n✅ Right-click options:\n   - Send to Sitemap (integrates with Burp’s Target tab)\n   - Copy URLs to clipboard\n   - Export results to a file\n     \n✅ Toggle “Add to sitemap” before fetching to automatically add all URLs to Burp’s Target sitemap\n\n✅ Optional auto-add to Burp’s Sitemap while fetching\n\n✅ Verbose log panel for debug and progress tracking\n\n✅ Retry mechanism with backoff to handle network issues\n\n🚀 Installation\n\nIn Burp Suite:\n - Go to Extender → Extensions → Add\n - Select Java and load the built wayback-filter-extension-1.jar\n\n📖 Usage\n\n1. Enter a target domain in the input field\n2. Click Fetch to pull historical URLs from the Wayback Machine\n3. Use the Search bar to quickly filter results\n4. Right-click results for more options (Send to Sitemap, Copy, Export)\n\n⚠️ Notes\n\n - By default, image MIME types are excluded to reduce noise\n - Only 200 OK responses are included\n - Duplicate URLs are collapsed to keep results clean\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-09-24T02:18:55.733801"
  },
  {
    "basic_info": {
      "name": "JManus",
      "full_name": "spring-ai-alibaba/JManus",
      "owner": "spring-ai-alibaba",
      "description": "A high-determinism, code-free Agent development framework built with Java 一个高确定性的 无代码 Agent 开发框架，以 Java编写",
      "url": "https://github.com/spring-ai-alibaba/JManus",
      "clone_url": "https://github.com/spring-ai-alibaba/JManus.git",
      "ssh_url": "git@github.com:spring-ai-alibaba/JManus.git",
      "homepage": "",
      "created_at": "2025-09-12T09:28:02Z",
      "updated_at": "2025-09-24T01:24:35Z",
      "pushed_at": "2025-09-23T07:26:38Z"
    },
    "stats": {
      "stars": 42,
      "forks": 12,
      "watchers": 42,
      "open_issues": 12,
      "size": 236043
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 2063390,
        "Vue": 799047,
        "TypeScript": 306724,
        "JavaScript": 158555,
        "Shell": 50228,
        "Python": 26221,
        "Batchfile": 9034,
        "Makefile": 7008,
        "HTML": 2002
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "# Spring AI Alibaba JManus\n\n<div align=\"center\">\n\n[![License](https://img.shields.io/badge/license-Apache%202-blue.svg)](LICENSE)\n[![Java](https://img.shields.io/badge/Java-17+-orange.svg)](https://openjdk.java.net/)\n[![Spring Boot](https://img.shields.io/badge/Spring%20Boot-3.x-green.svg)](https://spring.io/projects/spring-boot)\n[![GitHub Stars](https://img.shields.io/github/stars/alibaba/spring-ai-alibaba.svg)](https://github.com/alibaba/spring-ai-alibaba/stargazers)\n\n🌍 [English](./README.md) | [中文](./README-zh.md)\n\n📚 Developer Docs: [Quick Start (EN)](./README-dev-en.md) | [开发者快速入门 (中文)](./README-dev.md)\n\n[About](#-about) • [Quick Start](#-quick-start) • [Contributing](#-contributing)\n\n</div>\n\n![image](https://github.com/user-attachments/assets/07feeb29-c410-4f56-89bf-532210bc1b63)\n\n---\n\n## ✨ About JManus\n\nJManus is a Java implementation of Manus, currently used in many applications within Alibaba Group. It is primarily used for handling exploratory tasks that require a certain degree of determinism, such as quickly finding data from massive datasets and converting it into a single row in a database, or analyzing logs and issuing alerts.\n\nJManus also provides HTTP service invocation capabilities, making it suitable for integration into existing projects. For details, please refer to the developer quick start guide.\n\n## 🎯 JManus Product Features\n\n### 🤖 **Pure Java Manus Implementation**: \n\nA pure Java multi-agent collaboration implementation that provides a complete set of HTTP call interfaces, suitable for secondary integration by Java developers.\n\n![Image](https://github.com/user-attachments/assets/3d98c1c6-aabb-45a2-b192-7b687093a1ee)\n\n### 🛠️ **Plan-Act Mode**: \n\nAllows you to precisely control every execution detail, providing extremely high execution determinism.\n\n![Image](https://github.com/user-attachments/assets/a689791f-adf5-44b6-9ea6-151f557a26d4)\n\n### 🔗 **MCP Integration**:\n\n Natively supports the Model Context Protocol (MCP) for seamless integration with external services and tools.\n\n![Image](https://github.com/user-attachments/assets/2d3f833f-ba45-42b6-8e1b-f3e9cfd40212)\n\n### 📜 **Web Interface for Agent Configuration**:\n\n Easily configure agents through an intuitive web management interface without modifying code.\n\n![Image](https://github.com/user-attachments/assets/bb25f778-f8c3-46da-9da3-6f7ea2f0917d)\n\n### 🌊 **Infinite Context Handling**: \n\nSupports precise extraction of target information from massive content without relying on specific long-context models.\n\n![Image](https://github.com/user-attachments/assets/f23e5f27-91e1-4262-83d9-5bfbe5d644d5)\n\n\n## 🚀 Quick Start\n\nGet JManus up and running in under 5 minutes:\n\n### Prerequisites\n\n- 🌐 **DashScope API Key** (or alternative AI model provider)\n- 🐳 **Docker** (for containerized deployment) or ☕ **Java 17+** (for source code execution)\n\n### Method 1: Using Docker (Recommended)\n\n#### 🐳 Using Docker Hub Image\n\n```bash\n# Pull the latest develop image\ndocker pull springaialibaba/jmanus:develop\n\n# Basic startup (temporary data storage)\ndocker run -d \\\n  --name jmanus \\\n  -p 18080:18080 \\\n  -e DASHSCOPE_API_KEY=your_api_key_here \\\n  springaialibaba/jmanus:develop\n\n# Or start with data persistence (recommended)\ndocker run -d \\\n  --name jmanus \\\n  -p 18080:18080 \\\n  -e DASHSCOPE_API_KEY=your_api_key_here \\\n  -v $(pwd)/h2-data:/app/extracted/h2-data \\\n  -v $(pwd)/extensions:/app/extracted/extensions \\\n  springaialibaba/jmanus:develop\n```\n\n#### 🇨🇳 Using Alibaba Cloud Image (China Acceleration)\n\n```bash\n# Pull Alibaba Cloud accelerated image\ndocker pull sca-registry.cn-hangzhou.cr.aliyuncs.com/spring-ai-alibaba/jmanus:develop\n\n# Basic startup (temporary data storage)\ndocker run -d \\\n  --name jmanus \\\n  -p 18080:18080 \\\n  -e DASHSCOPE_API_KEY=your_api_key_here \\\n  sca-registry.cn-hangzhou.cr.aliyuncs.com/spring-ai-alibaba/jmanus:develop\n\n# Or start with data persistence (recommended)\ndocker run -d \\\n  --name jmanus \\\n  -p 18080:18080 \\\n  -e DASHSCOPE_API_KEY=your_api_key_here \\\n  -v $(pwd)/h2-data:/app/extracted/h2-data \\\n  -v $(pwd)/extensions:/app/extracted/extensions \\\n  sca-registry.cn-hangzhou.cr.aliyuncs.com/spring-ai-alibaba/jmanus:develop\n```\n\n#### 🔧 Advanced Docker Configuration\n\nIf you need custom configuration or data persistence:\n\n```bash\n# Create data directories\nmkdir -p /path/to/jmanus/h2-data\nmkdir -p /path/to/jmanus/extensions\n\n# Start with custom configuration (recommended for data persistence)\ndocker run -d \\\n  --name jmanus \\\n  -p 18080:18080 \\\n  -e DASHSCOPE_API_KEY=your_api_key_here \\\n  -v /path/to/jmanus/h2-data:/app/extracted/h2-data \\\n  -v /path/to/jmanus/extensions:/app/extracted/extensions \\\n  --restart unless-stopped \\\n  springaialibaba/jmanus:develop\n```\n\n> 📁 **Data Storage Information**:\n> - **H2 Database**: `/app/extracted/h2-data` - Stores application database files\n> - **Runtime Data**: `/app/extracted/extensions` - Stores extensions and runtime configurations\n> - It's recommended to mount these two directories for data per",
      "default_branch": "main"
    },
    "fetched_at": "2025-09-24T02:18:57.015006"
  },
  {
    "basic_info": {
      "name": "jlib-inspector",
      "full_name": "brunoborges/jlib-inspector",
      "owner": "brunoborges",
      "description": "Runtime Library Intelligence for Production JVMs",
      "url": "https://github.com/brunoborges/jlib-inspector",
      "clone_url": "https://github.com/brunoborges/jlib-inspector.git",
      "ssh_url": "git@github.com:brunoborges/jlib-inspector.git",
      "homepage": "https://brunoborges.github.io/jlib-inspector/",
      "created_at": "2025-09-06T04:15:48Z",
      "updated_at": "2025-09-23T04:48:37Z",
      "pushed_at": "2025-09-22T18:16:57Z"
    },
    "stats": {
      "stars": 36,
      "forks": 2,
      "watchers": 36,
      "open_issues": 0,
      "size": 2102
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 223230,
        "JavaScript": 125344,
        "Shell": 13227,
        "PowerShell": 7127,
        "CSS": 2585,
        "HTML": 651
      },
      "license": "MIT License",
      "topics": []
    },
    "content": {
      "readme": "# JLib Inspector\n\n> **⚠️ EXPERIMENTAL - NOT PRODUCTION READY**  \n> This project is currently in experimental/development phase and is **not suitable for production environments**. Use for development, testing, and evaluation purposes only.\n\n<!-- BADGES -->\n[![CI/CD Pipeline](https://github.com/brunoborges/jlib-inspector/actions/workflows/ci.yml/badge.svg)](https://github.com/brunoborges/jlib-inspector/actions/workflows/ci.yml)\n[![Security & Maintenance](https://github.com/brunoborges/jlib-inspector/actions/workflows/security.yml/badge.svg)](https://github.com/brunoborges/jlib-inspector/actions/workflows/security.yml)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n[![Java](https://img.shields.io/badge/Java-21%2B-orange.svg)](https://openjdk.java.net/)\n[![Node.js](https://img.shields.io/badge/Node.js-18%2B-green.svg)](https://nodejs.org/)\n<!-- /BADGES -->\n\nA comprehensive Java application monitoring dashboard that tracks JAR dependencies loaded during application runtime. The system consists of a Java agent, a standalone data collection server, and a modern React-based web dashboard to exemplify data visualization.\n\n## 🎯 Why JLib Inspector?\n\nWhen security vulnerabilities like **Log4Shell** strike, organizations face a critical challenge: **identifying which production systems are affected**. During the Log4j vulnerability crisis, many teams struggled with fundamental questions:\n\n- *\"Which of our production applications use Log4j?\"*\n- *\"What version are they running?\"*\n- *\"Are there transitive dependencies we don't know about?\"*\n- *\"How can we quickly assess our exposure across hundreds of services?\"*\n\n**The Traditional Approach is Reactive and Error-Prone:**\n- 🔍 Manual inspection of deployment artifacts\n- 📂 Digging through production file systems\n- 📋 Relying on outdated documentation or build scripts\n- ⏰ Time-consuming emergency audits during critical security incidents\n- 🎯 Missing transitive dependencies hidden deep in the dependency tree\n\n**JLib Inspector Enables Proactive Dependency Visibility:**\n- 🚀 **Real-time monitoring** of actual JAR files loaded by running JVMs\n- 🎯 **Complete visibility** including transitive dependencies\n- 📊 **Centralized dashboard** showing all applications and their dependencies\n- 🔄 **Continuous tracking** of what's actually running vs. what's deployed\n- ⚡ **Instant response** capability when new vulnerabilities are disclosed\n- 🛡️ **Proactive security posture** instead of reactive emergency responses\n\n**Production Reality Check:**\nUnlike static analysis of build files, JLib Inspector shows you **exactly what JARs are loaded at runtime** - capturing the full picture including:\n- JARs loaded dynamically through plugins or extensions\n- Nested JARs within fat/uber JARs  \n- Platform-specific dependencies loaded conditionally\n- The actual classpath used by the running JVM\n\nWhen the next security vulnerability emerges, you'll have immediate answers instead of emergency archaeology. \n\n## 🏗️ Architecture\n\n- **Java Agent**: Instruments Java applications to track JAR loading and usage (shaded agent JAR)\n- **JLib Server**: Standalone server that collects and aggregates data from instrumented applications (Port 8080, shaded server JAR)\n- **Web Dashboard**: React-based frontend with real-time updates (Ports 3000 for http and 3001 for websocket)\n\n## 📋 Prerequisites\n\n- **Java 21+** (JDK)\n- **Maven 4+** (use the included wrapper `./mvnw`)\n- **Node.js 18+** and **npm**\n- **PowerShell** (for Windows) or equivalent shell\n\n## 🚀 Quick Start\n\n### 1. Build the Project\n\n```bash\n# Clone and navigate to the project\ncd jlib-inspector\n\n# Build all components (agent + server + sample app)\n./mvnw clean package\n```\n\n### 2. Start the JLib Server\n\nThe JLib Server collects data from instrumented Java applications:\n\n```bash\n# Start the data collection server on port 8080 (shaded jar)\njava -jar server/target/jlib-inspector-server-1.0-SNAPSHOT-shaded.jar 8080\n```\n\n**Expected Output:**\n```\nJLib HTTP Server started on port 8080\nAvailable endpoints:\n  PUT /api/apps/{appId} - Register/update application\n  GET /api/apps - List all applications\n  GET /api/apps/{appId} - Get application details\n  GET /api/apps/{appId}/jars - List application JARs\n  GET /health - Health check\n```\n\n### 3. Start the Web Dashboard\n\nThe unified Express.js server serves the React frontend:\n\n```bash\n# Navigate to frontend directory\ncd frontend\n\n# Install dependencies (first time only)\nnpm install\n\n# Build and start the unified server on port 3000\nnpm start\n```\n\n**Expected Output:**\n```\n> jlib-inspector-dashboard@2.0.0 start\n> npm run build && node app.js\n\nwebpack 5.101.3 compiled successfully\nSetting up data fetching schedule...\nJLib Dashboard running on http://localhost:3000\nWebSocket server running on port 3001\nConnecting to JLib Server at http://localhost:8080\n```\n\n### 4. Run Java Applications with Monitoring\n\nInstrument any Java application with the JLib Inspector agent:\n\n**For your o",
      "default_branch": "main"
    },
    "fetched_at": "2025-09-24T02:18:58.305606"
  },
  {
    "basic_info": {
      "name": "retry-wheel-parent",
      "full_name": "Dengmuuuu/retry-wheel-parent",
      "owner": "Dengmuuuu",
      "description": null,
      "url": "https://github.com/Dengmuuuu/retry-wheel-parent",
      "clone_url": "https://github.com/Dengmuuuu/retry-wheel-parent.git",
      "ssh_url": "git@github.com:Dengmuuuu/retry-wheel-parent.git",
      "homepage": null,
      "created_at": "2025-09-19T09:56:22Z",
      "updated_at": "2025-09-24T01:44:29Z",
      "pushed_at": "2025-09-23T14:57:49Z"
    },
    "stats": {
      "stars": 29,
      "forks": 3,
      "watchers": 29,
      "open_issues": 0,
      "size": 118
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 94818
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "# ResilientWheel\n一款基于 Netty HashedWheelTimer 的高可用分布式重试引擎，当前采用 MySQL 持久化 + 分布式抢占/粘滞租约，未来可无缝迁移至 Redis 等存储。\n\n## 模块结构\n\n```\nretry-wheel-parent/\n├─ retry-wheel-spring-boot3-starter/ # Starter：核心引擎、自动装配、SPI、Mapper 等\n└─ sql/ # 初始化/清理 SQL（建表、索引）\n```\n\n\n---\n\n## 快速开始\n\n### 1) 引入依赖\n\n```xml\n<dependency>\n  <groupId>com.fastretry</groupId>\n  <artifactId>retry-wheel-spring-boot3-starter</artifactId>\n  <version>${latest}</version>\n</dependency>\n```\n### 2) 初始化数据库\n\n执行 sql/schema.sql (建表、索引、枚举/注释；包含 retry_task 表及必要索引).\n\n3) 启用与配置（application.yml）\n```yml\nretry:\n  stick:\n    enable: true\n    lease-ttl: 30s\n    renew-ahead: 10s\n  tx:\n    propagation: REQUIRED\n    read-only: false\n    isolation: DEFAULT\n    timeout-seconds: 10\n  wheel:\n   tick-duration: 100ms\n   ticks-per-wheel: 512\n   max-pending-timeouts: 100000\n  scan:\n   initial-delay: 1000\n   period: 2000\n   batch: 200\n  executor:\n   core-pool-size: 8\n   max-pool-size: 32\n   queue-capacity: 1000\n   keep-alive: 60s\n   rejected-handler: CALLER_RUNS\n  backoff:\n   strategy: exponential\n   base: 1s\n   min: 500ms\n   max: 300s\n   jitter-ratio: 0.2\n  default-max-retry: 5\n  default-execute-timeout: 10s\n\n```\n### 4) 注册任务处理器示例\n```JAVA\n@Service(value = \"test-biz\")\npublic class CallHandler implements RetryTaskHandler<PayloadModel> {\n    @Override\n    public boolean supports(String bizType) {\n        return \"test-biz\".equals(bizType);\n    }\n\n    @Override\n    public boolean execute(RetryTaskContext ctx, PayloadModel payload) throws Exception {\n        // 模拟失败\n        if (payload.getSimulateStatus() == 500) {\n            throw new RuntimeException(\"remote 500\");\n        }\n        if (payload.getSimulateStatus() == 408) {\n            Thread.sleep(5000);\n        }\n        return true;\n    }\n\n    @Override\n    public TypeReference<PayloadModel> payloadType() {\n        return new TypeReference<PayloadModel>() {};\n    }\n}\n```\n### 5) 代码中投递任务\n```JAVA\nSubmitOptions opt = SubmitOptions.builder()\n  .maxRetry(8)\n  .priority(10)\n  .executeTimeoutMs(4000)\n  .backoffStrategy(\"exponential\")\n  .delay(Duration.ofSeconds(0))\n  .deadline(Instant.now().plus(Duration.ofMinutes(10)))\n  .build();\nPayloadModel payload = new PayloadModel();\npayload.setBody(\"hello world\");\npayload.setUrl(\"www.baidu.com\");\npayload.setSimulateStatus(408);\nString taskId = engine.submit(\"test-biz\", payload, opt);\nreturn Map.of(\"taskId\", taskId);\n```\n\n---\n\n## 已实现/待完善/未实现\n\n> ✅ 已实现或具备完整骨架；🟨 已实现核心功能但待完善；⬜️ 待实现.\n\n### Starter 与自动装配\n✅ Spring Boot 3.x Starter 形态，自动装配引擎、扫描器、定时轮、默认 SPI(支持覆盖).  \n✅ RetryWheelProperties 配置映射（轮盘、扫描、执行器、回退、粘滞租约等）.  \n\n### 调度与执行\n\n✅ Netty HashedWheelTimer 初始化，tick 与槽数可配.  \n✅ 扫描器：DB 拉取到期任务 → 抢占（或接管）→ 投递本地执行.  \n✅ 执行器：业务线程池可配；采用CompletableFuture 链路 + Timeout机制，异步链路不吞异常.  \n✅ 失败回退：固定/指数退避（含 jitter） + BackoffRegistry SPI（自定义）.  \n⬜️ 优雅停机：释放本机持有任务 RUNNING→PENDING（next=now()）或允许自然到期接管.  \n\n### 泛型与序列化/失败判定\n\n✅ 提供默认PayloadSerializer（Jackson）实现, 可自定实现覆盖.  \n✅ FailureDecider（默认需要重试）：业务基于异常类型与业务返回值判断是否需要重试.  \n\n### 粘滞租约\n\n✅ 表结构新增：owner_node_id、lease_expire_at、fence_token；索引 idx_retry_task_lease.    \n✅ 首次抢占：PENDING→RUNNING 同步设置 owner/lease/fence 并挂入本地时间轮.    \n✅ 本地重试：保持 RUNNING 与 owner 不变，仅回写 retry_count/next_trigger_time/last_error.   \n✅ 接管：lease_expire_at<=now() 条件抢占，其他节点安全接手.   \n\n### 可观测性与运维\n\n🟨 Micrometer 指标：入队、成功、失败、DLQ、重试次数分布、执行时长等；空 MeterRegistry 使用默认/Noop 指标实现保障无侵入.  \n⬜️ Actuator 端点：到期积压、线程池使用、各状态计数等.  \n⬜️ 管理 REST：查询、暂停/恢复、取消、手动重试、DLQ 拉回（如已暴露基础接口）.  \n⬜️ 审计日志：关键状态变更/接管/续约/异常栈保留与截断.  \n\n### 告警通知\n\n✅ 告警通知器 SPI：DLQ、接管失败、续约失败突增等触发器.  \n\n### 多租户/分片\n\n⬜️ 多租户/分片策略 SPI：tenant_id/shard_key 参与扫描与限流；提供路由器扩展点.  \n\n\n\n\n\n\n# retry-notify (通知模块)\n\n> 为重试框架提供 **可插拔、可路由、可限流、可观测** 的通知能力。支持单条通知，覆盖 DLQ、最大重试、不可重试失败、接管、续约失败、引擎异常、持久化异常等事件。\n\n---\n\n## 特性\n\n- **SPI 可插拔**：`Notifier` 接口，内置 `LoggingNotifier`，支持自定义（如 飞书/钉钉/Slack）。\n- **异步派发**：`AsyncNotifyingService` 独立线程池 + 指数退避重试，不阻塞主流程。\n- **路由/过滤**：按事件/租户/业务/严重级别路由到不同通道；内置限流过滤器。\n- **可观测性**：Micrometer 指标 + 结构化日志。\n- **开关友好**：通过`NotifyingFacade`封装`AsyncNotifyingService`, `retry.notify.enabled=false`时不装配异步实现, 由门面内部自动降级为NOOP，调用方零判空，无NPE风险。\n\n---\n\n## 快速开始\n\n### 1) 引入（在 Starter 中已自动装配）\n\n确保引入 `retry-wheel-spring-boot3-starter`，通知模块随 Starter 自动装配。\n\n### 2) 配置\n\n```yaml\nretry:\n  notify:\n    enabled: true         \n    async:\n      core-pool-size: 2\n      max-pool-size: 4\n      queue-capacity: 2000\n      keep-alive: 30s\n    rate-limit:\n      window: 30s                # 限流窗口\n      threshold: 50                  # 限流阈值\n```\n\n### 3) 事件模型/严重级别\n```JAVA\n// 事件模型\npublic enum NotifyEventType {\n  DEAD_LETTER,\n  MAX_RETRY_REACHED,\n  NON_RETRYABLE_FAILED,\n  TAKEOVER,\n  LEASE_RENEW_FAILED,\n  PERSIST_FAILED,\n  ENGINE_ERROR\n}\n\n// 事件严重级别\npublic enum Severity { INFO, WARNING, ERROR, CRITICAL }\n\n```\n### 4) 通知上下文\n```JAVA\npublic class NotifyContext {\n    private NotifyEventType type;\n    private String nodeId;\n    private String bizType;\n    private String taskId;\n    private String tenantId;\n    private Integer retryCount;\n    private Integer maxRetry;\n    // 自定义分类码，如 TIMEOUT/NO_HANDLER/SERDE_ERROR\n    private String reasonCode;\n    // 可被截断/脱敏\n    private String ",
      "default_branch": "master"
    },
    "fetched_at": "2025-09-24T02:18:59.554499"
  },
  {
    "basic_info": {
      "name": "interview-ready",
      "full_name": "dev-gyanendra-singh/interview-ready",
      "owner": "dev-gyanendra-singh",
      "description": null,
      "url": "https://github.com/dev-gyanendra-singh/interview-ready",
      "clone_url": "https://github.com/dev-gyanendra-singh/interview-ready.git",
      "ssh_url": "git@github.com:dev-gyanendra-singh/interview-ready.git",
      "homepage": null,
      "created_at": "2025-09-03T17:35:32Z",
      "updated_at": "2025-09-22T15:31:01Z",
      "pushed_at": "2025-09-09T11:20:38Z"
    },
    "stats": {
      "stars": 27,
      "forks": 17,
      "watchers": 27,
      "open_issues": 0,
      "size": 19813
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 382612,
        "Dockerfile": 1920
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "",
      "default_branch": "master"
    },
    "fetched_at": "2025-09-24T02:19:00.810022"
  },
  {
    "basic_info": {
      "name": "brazilbank",
      "full_name": "anderson17ads/brazilbank",
      "owner": "anderson17ads",
      "description": "Brazil Bank is a banking application built with Java 8 and Spring Boot, following the Hexagonal Architecture (Ports and Adapters) approach.",
      "url": "https://github.com/anderson17ads/brazilbank",
      "clone_url": "https://github.com/anderson17ads/brazilbank.git",
      "ssh_url": "git@github.com:anderson17ads/brazilbank.git",
      "homepage": "",
      "created_at": "2025-08-25T13:09:06Z",
      "updated_at": "2025-09-20T15:37:13Z",
      "pushed_at": "2025-09-14T18:41:51Z"
    },
    "stats": {
      "stars": 25,
      "forks": 0,
      "watchers": 25,
      "open_issues": 0,
      "size": 194
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 46542
      },
      "license": null,
      "topics": [
        "clean-code",
        "code",
        "gradle",
        "hexagonal-architecture",
        "java",
        "java-8",
        "loombok",
        "postgresql",
        "spring",
        "spring-boot",
        "springdata-jpa"
      ]
    },
    "content": {
      "readme": "# Brazil Bank\n\n**Brazil Bank** is a banking application built with **Java 8** and **Spring Boot**, following the **Hexagonal Architecture (Ports and Adapters)** approach.  \nThe goal of this project is to provide a clean, maintainable, and scalable design where business rules are completely decoupled from frameworks and external dependencies.\n\n---\n\n## 🚀 Features\n- Account domain with business rules separated in services\n- REST API built with Spring Boot\n- PostgreSQL integration using Spring Data JPA\n- Domain-driven approach with `entities`, `value objects`, and `enums`\n- Decoupled infrastructure layer for persistence and external adapters\n- Lombok to reduce boilerplate code\n\n---\n\n## 🛠 Tech Stack\n- **Java 8**\n- **Spring Boot 2.7.x**\n- **Spring Data JPA**\n- **PostgreSQL**\n- **Lombok**\n- **Gradle**\n\n---\n\n## ⚙️ Setup\n\n### 1. Clone repository\n```bash\ngit clone https://github.com/your-username/brazilbank.git\ncd brazilbank\n```\n\n### 2. Run PostgreSQL with Docker\nThe database is managed via **Docker Compose**.  \nAll configuration values are stored in the `.env` file at the project root.\n\nStart the container:\n```bash\ndocker-compose up -d\n```\n\n---\n\n## ▶️ Run the application\n\n```bash\n./gradlew bootRun\n```\n\nOr using IntelliJ, just run the `BrazilbankApplication` class.\n\n---\n\n## 📌 Example Endpoints\n\n### Create a customer\n```http\nPOST /customers\nContent-Type: application/json\n\n{\n  \"name\": \"Anderson de Souza\",\n  \"email\": \"anderson17ads@hotmail.com\",\n  \"document\": \"123456\",\n  \"phone\": \"11994048640\",\n  \"birth_date\": \"1988-11-22\"\n}\n```\n### List all customers\n```http\nGET /customers\nContent-Type: application/json\n```\n**Response Example**\n```json\n[\n  {\n    \"id\": \"550e8400-e29b-41d4-a716-446655440000\",\n    \"name\": \"Anderson de Souza\",\n    \"email\": \"anderson17ads@hotmail.com\",\n    \"document\": \"123456\",\n    \"phone\": \"11994048640\",\n    \"birth_date\": \"1988-11-22\"\n  },\n  {\n    \"id\": \"660e8400-e29b-41d4-a716-446655440111\",\n    \"name\": \"Maria Silva\",\n    \"email\": \"maria.silva@example.com\",\n    \"document\": \"654321\",\n    \"phone\": \"11987654321\",\n    \"birth_date\": \"1990-05-15\"\n  }\n]\n```\n### Create an account\n```http\nPOST /accounts\nContent-Type: application/json\n\n{\n  \"balance\": 500.00,\n  \"customer_id\": \"550e8400-e29b-41d4-a716-446655440000\",\n  \"type\": \"CHECKING\"\n}\n```\n### List all accounts\n```http\nGET /accounts\nContent-Type: application/json\n```\n**Response Example**\n```json\n[\n  {\n    \"id\": \"1475eb2d-2565-41a5-a289-2f03d2f6e256\",\n    \"number\": \"3332ba32-a\",\n    \"balance\": 20.00,\n    \"customerId\": \"c28ecd31-189f-4b51-ab55-eadf7c85e1d8\",\n    \"type\": \"CHECKING\"\n  },\n  {\n    \"id\": \"ac59e405-b53d-418e-ae0b-fb7a6102055f\",\n    \"number\": \"d3942fd2-1\",\n    \"balance\": 20.00,\n    \"customerId\": \"c28ecd31-189f-4b51-ab55-eadf7c85e1d8\",\n    \"type\": \"CHECKING\"\n  }\n]\n```\n\n---\n\n## 🧑‍💻 Autor\nDesenvolvido por **Anderson Souza** – Desenvolvedor Sênior em PHP & Java  \n[LinkedIn: Anderson de Souza](https://www.linkedin.com/in/anderson-de-souza-9a6a2339/)\n \n",
      "default_branch": "master"
    },
    "fetched_at": "2025-09-24T02:19:02.106417"
  },
  {
    "basic_info": {
      "name": "dbsandboxer",
      "full_name": "misirio/dbsandboxer",
      "owner": "misirio",
      "description": "DbSandboxer provides test isolation for Spring Boot applications by creating sandboxed database instances for integration tests.",
      "url": "https://github.com/misirio/dbsandboxer",
      "clone_url": "https://github.com/misirio/dbsandboxer.git",
      "ssh_url": "git@github.com:misirio/dbsandboxer.git",
      "homepage": "",
      "created_at": "2025-09-05T07:44:46Z",
      "updated_at": "2025-09-19T07:21:57Z",
      "pushed_at": "2025-09-15T21:01:46Z"
    },
    "stats": {
      "stars": 25,
      "forks": 2,
      "watchers": 25,
      "open_issues": 0,
      "size": 558
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 31733
      },
      "license": "Apache License 2.0",
      "topics": []
    },
    "content": {
      "readme": "# DbSandboxer\n\n**Fast, isolated database testing for Spring Boot applications using PostgreSQL's template database feature.**\n\n\nDemo of 100 integration test executions with fresh PostgreSQL databases per test, post Spring Boot initialization:  \n\n![Speed showcase](docs/speed-showcase.gif)\n\n## The Problem\n\nTesting with databases is painful:\n- **@Transactional rollbacks** hide real database behavior (triggers, constraints don't fire)\n- **Truncating tables** is slow and error-prone with complex schemas\n- **H2/in-memory databases** don't catch PostgreSQL-specific issues\n- **Shared test databases** cause flaky tests due to data pollution\n\n## The Solution\n\nDbSandboxer gives each test its own database copy in ~50ms using PostgreSQL's template databases:\n\n```java\n@Test\nvoid test1_createProduct() {\n    // Starts with clean database\n    productRepo.save(new Product(\"Laptop\", 999));\n    assertThat(productRepo.count()).isEqualTo(1);\n}\n\n@Test\nvoid test2_verifyIsolation() {\n    // Fresh database - no laptop from test1!\n    assertThat(productRepo.findByName(\"Laptop\")).isEmpty();\n    assertThat(productRepo.count()).isEqualTo(0);\n}\n```\n\n## Why DbSandboxer?\n\n| Approach | Speed | Real DB Behavior | Maintenance | Isolation |\n|----------|-------|------------------|-------------|-----------|\n| @Transactional | ✅ Fast | ❌ Fake | ✅ None | ⚠️ Limited |\n| Truncate/Delete | ❌ Slow (grows with schema) | ✅ Real | ❌ High | ✅ Full |\n| H2 In-Memory | ✅ Fast | ❌ Different DB | ✅ Low | ✅ Full |\n| **DbSandboxer** | ✅ Fast (~50ms) | ✅ Real PostgreSQL | ✅ None | ✅ Full |\n\n\n## Quick Start\n\n### 1. Add Dependency\n\n```xml\n<dependency>\n    <groupId>io.misir</groupId>\n    <artifactId>dbsandboxer-spring-boot-starter-test</artifactId>\n    <version>1.0.2</version>\n    <scope>test</scope>\n</dependency>\n```\n\n### 2. Configure Test Database\n\nAdd to `src/test/resources/application.yaml`:\n\n```yaml\nspring:\n  datasource:\n    # Required: SimpleDriverDataSource\n    type: org.springframework.jdbc.datasource.SimpleDriverDataSource\n```\n\n### 3. Enable in Tests\n\n```java\n@TestConfiguration(proxyBeanMethods = false)\npublic class TestConfig {\n    @Bean\n    @ServiceConnection\n    public PostgreSQLContainer<?> postgres() {\n        return new PostgreSQLContainer<>(\"postgres:16-alpine\");\n    }\n}\n\n@SpringBootTest(classes = TestConfig.class)\n@EnableDbSandboxer\nclass OrderServiceTest {\n    \n    @Autowired\n    private OrderRepository orderRepo;\n    \n    @Test\n    void createOrder_persistsSuccessfully() {\n        // Each test starts with fresh database\n        Order order = new Order(\"ORD-001\", 299.99);\n        orderRepo.save(order);\n        \n        assertThat(orderRepo.count()).isEqualTo(1);\n        assertThat(orderRepo.findById(order.getId())).isPresent();\n    }\n    \n    @Test\n    void deleteOrder_removesFromDatabase() {\n        // No data from previous test - complete isolation\n        assertThat(orderRepo.count()).isEqualTo(0);\n        \n        Order order = orderRepo.save(new Order(\"ORD-002\", 199.99));\n        orderRepo.delete(order);\n        \n        assertThat(orderRepo.count()).isEqualTo(0);\n    }\n}\n```\n\nCheck out the [Example project](examples/spring-boot-example) for a complete example.\n\n## How It Works\n\n1. **Template Creation**: Before tests run, DbSandboxer creates a PostgreSQL template database with your schema\n2. **Fast Cloning**: Each test gets a fresh copy via `CREATE DATABASE ... WITH TEMPLATE` (file-level copy, not row-by-row)\n3. **Automatic Cleanup**: Databases are dropped after each test\n\nThis approach is blazing fast because PostgreSQL copies database files directly rather than executing SQL statements.\n\n## Performance\n\n- **Template creation**: One-time cost at test suite start\n- **Per-test overhead**: ~50ms regardless of database size\n- **Cleanup**: Instant (DROP DATABASE)\n\nCompare to truncating 50 tables with foreign keys: often 500ms+\n\n## Requirements\n\n- Java 17+\n- PostgreSQL 12+\n- Spring Boot 2.7+ (for Spring Boot integration)\n\n## Modules\n\n- `dbsandboxer-core` - Core functionality\n- `dbsandboxer-spring-boot-starter-test` - Spring Boot integration\n- `examples` - Complete working examples\n\n## Running the Examples\n\n```bash\n# Clone and build\ngit clone https://github.com/misirio/dbsandboxer.git\ncd dbsandboxer\nmvn clean install\n\n# Run example tests\ncd examples/spring-boot-example\nmvn test\n```\n\nThe examples demonstrate:\n- Liquibase migrations\n- Test fixtures\n- JPA integration\n- Complete test isolation\n\n## FAQ\n\n**Q: Why not use @DirtiesContext?**  \nA: That recreates the entire Spring context (slow). DbSandboxer only resets the database.\n\n**Q: Can I use connection pools?**  \nA: No, use SimpleDriverDataSource. Pools hold connections to dropped databases.\n\n**Q: Does it work with Flyway/Liquibase?**  \nA: Yes! Migrations run once during template creation.\n\n**Q: What about test fixtures?**  \nA: Load them during template creation - they'll be in every test's copy.\n\n## License\n\nApache License 2.0\n\n## Contributing\n\nContributions welcome! Please submit a Pull Request.\n\n##",
      "default_branch": "main"
    },
    "fetched_at": "2025-09-24T02:19:03.444926"
  },
  {
    "basic_info": {
      "name": "DSD_2025.2",
      "full_name": "graconlima/DSD_2025.2",
      "owner": "graconlima",
      "description": null,
      "url": "https://github.com/graconlima/DSD_2025.2",
      "clone_url": "https://github.com/graconlima/DSD_2025.2.git",
      "ssh_url": "git@github.com:graconlima/DSD_2025.2.git",
      "homepage": null,
      "created_at": "2025-09-11T14:46:22Z",
      "updated_at": "2025-09-18T15:42:36Z",
      "pushed_at": "2025-09-18T14:47:11Z"
    },
    "stats": {
      "stars": 22,
      "forks": 0,
      "watchers": 22,
      "open_issues": 0,
      "size": 35
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 4468
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "# DSD-2025.1 \n## Atenção: as aulas da segunda (a partir do 22) e sexta-feira serão cedidas à disciplina de Arquitetura (AS) para fins de antecipação de aulas (em virtude de defesa de doutorado do prof. Fabiano), durante 3 senamas. Após esse período, as aulas de Sistemas Distribuídos utilizarão o horário AS para repor as aulas.\n<p><a class=\"external-link\" href=\"https://academicoifrnedu.sharepoint.com/:u:/s/DSD2024.1/EX5Rq-50ao1LtcehbmnbuiIBsIr-GQ6uwDS5vjxkbhFahA?e=Q0PLLq\">e-book</a> - Notas de Aula DSD </p>\n\n<br>\n\n<p><a class=\"external-link\" href=\"https://academicoifrnedu.sharepoint.com/:u:/s/DSD2024.1/ERge_hjvUepIp0Px-9q-j3cBmrir_8o5_4CL8FW51to_hw?e=biJPwy\">Aula 0</a> - Informações Gerais</p>\n\n<br>\n\n<p><a class=\"external-link\" href=\"https://academicoifrnedu.sharepoint.com/:b:/s/DSD2024.1/ERHBmbQ8UX5MkPFDqCKAoecBMpZFOZjXNq6h2kwDOI5KRg?e=GU44Cs\">Aula 1</a> - Caracterização SD</p>\n\n<br>\n\n<p><a class=\"external-link\" href=\"https://academicoifrnedu.sharepoint.com/:u:/s/DSD2024.1/EdQsNYFjFPtBtejLT7lqb5YBCIJw-ltkzZPIySm0f1l-zg?e=kKGTig\">Aula 2 </a> - WEB</p>\n<p><a class=\"external-link\" href=\"https://academicoifrnedu.sharepoint.com/:v:/s/DSD2023.2/EVWy3e3DVf5Eq10kDlpD_IsBSQSjG4aVaV32xn9m0EJd0g?e=i8O653&amp;nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJTdHJlYW1XZWJBcHAiLCJyZWZlcnJhbFZpZXciOiJTaGFyZURpYWxvZy1MaW5rIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXcifX0%3D\">Aula 2.1 </a> - Estudo de Caso - API (videoaula)</p>\n\n<!--\n\n\n<p><a class=\"external-link\" href=\"https://academicoifrnedu.sharepoint.com/:u:/s/DSD2024.1/EdXZ71Xx1KZFteXtYsvt_PYB298RIbBq3mbeiAmtDsBblg?e=mRdkhd\">Aula 5.2 </a> - Serviços Web (SOAP)</p>\n<p><a class=\"external-link\" href=\"https://academicoifrnedu.sharepoint.com/:u:/s/DSD2024.1/EZmUHKeRpgBKmER0mbQtT3gBA1T3coLP6q-QNkYl2QrofQ?e=xs5C8P\">Aula 5.3 </a> - Serviços Web (REST)</p>\n<p><a class=\"external-link\" href=\"https://academicoifrnedu.sharepoint.com/:u:/s/DSD2024.1/EUvAxaKinehOoPdszugoaS0BCfPM2jTEzhPD0uDLJIq41A?e=TPhq9y\">Aula 5.4 </a> - Tarefa 4 (SOAP e REST)</p>\n\n# Atenção: as aulas dos dias: 05, 12, 19 e 26/06 as aulas de DSD serão destinadas a reposição das aulas de Interfaces Ricas.\n\n\n<p><a class=\"external-link\" href=\"https://academicoifrnedu.sharepoint.com/:b:/s/DSD2024.1/EZRWFBuG5HBPuACTa4GCAxkBu1XksHLJnbLK8mF5t-EKaQ?e=ixmJH4\">Aula 2</a> - Redes</p>\n<p><a class=\"external-link\" href=\"https://academicoifrnedu.sharepoint.com/:b:/s/DSD2024.1/Eav96xzo4sVNuk96rxEl9zYB-BkKGjeConXqGBuHwOf8UA?e=ezLcGd\">Aula 2.1</a> - Tarefa 1</p>\n<p><a class=\"external-link\" href=\"https://academicoifrnedu.sharepoint.com/:b:/s/DSD2024.1/ERlN0-l1mahMmPWWpnQPHMYBmvgKDYAANaGKYdR6s1BZmQ?e=lbf0GB\">Aula 2.2</a> - Requisitos de Redes</p>\n\n<br>\n\n<p><a class=\"external-link\" href=\"https://academicoifrnedu.sharepoint.com/:u:/s/DSD2024.1/EVCt_fq4UAxEjIC3JMO0ykoBE9RruLXjcMR01v4sURzDWQ?e=15DicF\">Aula 3 </a> - Comunicação entre processos</p>\n<p><a class=\"external-link\" href=\"https://academicoifrnedu.sharepoint.com/:u:/s/DSD2024.1/EcA94pr-90FIjWyrhEOgfJYB1NZT47CYH6NRf7vayuz5uQ?e=TOEqwM\">Aula 3.1 </a> - TCP</p>\n<p><a class=\"external-link\" href=\"https://academicoifrnedu.sharepoint.com/:u:/s/DSD2024.1/EZUG01vdM41Mu2RJa880ZfABFXj5y3eAPpIkikxDm2N5oA?e=3te35m\">Aula 3.2 </a> - UDP</p>\n<p><a class=\"external-link\" href=\"https://academicoifrnedu.sharepoint.com/:v:/s/DSD2024.1/ETb4vQUAhDFPjL27sfv7BbEByjtoBmhPCKS2apw2YxTndw?e=WgRRTq\">Aula 3.3 </a> - TCP (videoaula)</p>\n<p><a class=\"external-link\" href=\"https://academicoifrnedu.sharepoint.com/:v:/s/DSD2024.1/ERzXu1bz7_pBq0A-2oSNPsoB3p5O6UO9fToVDBCj3C37CQ?e=yFGU5V\">Aula 3.4 </a> - UDP (videoaula)</p>\n<p><a class=\"external-link\" href=\"https://academicoifrnedu.sharepoint.com/:u:/s/DSD2024.1/ERbFQlBSyINJmB7jmn4UZAwB4L6L2KEkTje6obXZa_giXA?e=crCGNq\">Aula 3.5 </a> - Tarefa 2</p>\n\n<br>\n\n<p><a class=\"external-link\" href=\"https://academicoifrnedu.sharepoint.com/:u:/s/DSD2024.1/EeqRAOHhRvVDpBgWPr65kaIBsDBq-EV6kLCah3h3r_RP0w?e=JYSH9C\">Aula 4 </a> - Invocação Remota</p>\n<p><a class=\"external-link\" href=\"https://academicoifrnedu.sharepoint.com/:v:/s/DSD2024.1/EbOzev_qmphDjAQJCafXW9sBAboPFALmod0br8MWBwVBKQ?e=04ka9r\">Aula 4.1 </a> - Invocação Remota (videoaula)</p>\n<p><a class=\"external-link\" href=\"https://academicoifrnedu.sharepoint.com/:u:/s/DSD2024.1/EU8j5fjyCv5Fp3DxthS59N4BWij8l4rut34EJDQ7taeqeQ?e=CZg2xC\">Aula 4.2 </a> - Protocolos de Requisição-Resposta</p>\n<p><a class=\"external-link\" href=\"https://academicoifrnedu.sharepoint.com/:u:/s/DSD2024.1/EWEegMK0ht1Ag_u0D8G4ZfYBYETjftn3cscIdv5T1oSSMg?e=hSyuGs\">Aula 4.3 </a> - RPC</p>\n<p><a class=\"external-link\" href=\"https://academicoifrnedu.sharepoint.com/:v:/s/DSD2024.1/ESYAxPPJkb9Ckq1d673ynJIBqPFllX2cOu-7n8GO6HiVow?e=yW5XN5\">Aula 4.4 </a> - RPC (videoaula)</p>\n<p><a class=\"external-link\" href=\"https://academicoifrnedu.sharepoint.com/:u:/s/DSD2024.1/EcNeFUM-v1pFgEFlC3co-_kBiHXoFHUO9b9LRRK7zp2MCA?e=jFAMH3\">Aula 4.6 </a> - RMI</p>\n<p><a class=\"external-link\" href=\"https://academicoifrnedu.sharepoint.com/:v:/s/DSD2024.1/EbZ5xvn3O8VArPchhOJPgpEB_6tZak",
      "default_branch": "main"
    },
    "fetched_at": "2025-09-24T02:19:04.866651"
  }
]
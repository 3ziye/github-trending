[
  {
    "basic_info": {
      "name": "ququ",
      "full_name": "yan5xu/ququ",
      "owner": "yan5xu",
      "description": "开源免费的 Wispr Flow 替代方案 | 集成FunASR本地模型和可配置大语言模型的下一代中文桌面语音工作流",
      "url": "https://github.com/yan5xu/ququ",
      "clone_url": "https://github.com/yan5xu/ququ.git",
      "ssh_url": "git@github.com:yan5xu/ququ.git",
      "homepage": "",
      "created_at": "2025-09-20T06:26:58Z",
      "updated_at": "2025-10-02T02:06:58Z",
      "pushed_at": "2025-10-01T12:24:36Z"
    },
    "stats": {
      "stars": 912,
      "forks": 73,
      "watchers": 912,
      "open_issues": 16,
      "size": 2132
    },
    "tech_info": {
      "language": "JavaScript",
      "languages": {
        "JavaScript": 336340,
        "Python": 25053,
        "CSS": 10784,
        "HTML": 2349,
        "TypeScript": 165
      },
      "license": "Other",
      "topics": [
        "ai-text-processing",
        "chinese-speech-recognition",
        "electron-app",
        "funasr",
        "local-processing",
        "open-source",
        "privacy-first",
        "speech-to-text",
        "voice-dictation",
        "wispr-flow-alternative"
      ]
    },
    "content": {
      "readme": "<div align=\"center\">\n\n<!-- 在这里放置您的Logo图片 -->\n<!-- 例如: <img src=\"assets/logo.png\" width=\"150\" /> -->\n<br/>\n<br/>\n\n# 蛐蛐 (QuQu)\n\n**开源免费的 Wispr Flow 替代方案 | 为中文而生的下一代智能语音工作流**\n\n</div>\n\n<div align=\"center\">\n\n<!-- 徽章 (Badges) - 您可以后续替换为动态徽章服务 (如 shields.io) -->\n<img src=\"https://img.shields.io/badge/license-Apache_2.0-blue.svg\" alt=\"License\">\n<img src=\"https://img.shields.io/badge/platform-macOS%20%7C%20Windows%20%7C%20Linux-lightgrey\" alt=\"Platform\">\n<img src=\"https://img.shields.io/badge/release-v1.0.0-brightgreen\" alt=\"Release\">\n<img src=\"https://img.shields.io/badge/PRs-welcome-brightgreen.svg\" alt=\"PRs Welcome\">\n\n</div>\n\n<br/>\n\n> **厌倦了 Wispr Flow 的订阅费用？寻找开源免费的语音输入方案？来试试「蛐蛐」！**\n\n**蛐蛐 (QuQu)** 是 **Wispr Flow 的开源免费替代方案**，专为中文用户打造的注重隐私的桌面端语音输入与文本处理工具。与 Wispr Flow 不同，蛐蛐完全开源免费，数据本地处理，专为中文优化，支持国产AI模型。\n\n### 🆚 vs Wispr Flow：开源免费的替代方案\n\n| 核心对比 | 🎯 蛐蛐 (QuQu) | 💰 Wispr Flow |\n|---------|---------------|---------------|\n| **价格** | ✅ **完全免费** | ❌ $12/月订阅 |\n| **隐私** | ✅ **本地处理** | ❌ 云端处理 |\n| **中文** | ✅ **专为中文优化** | ⚠️ 通用支持 |\n| **AI模型** | ✅ **国产AI支持** | ❌ 仅国外模型 |\n\n想象一下，你可以像和朋友聊天一样写作。说的内容被实时、精准地转换成文字，口误和\"嗯、啊\"等废话被自动修正，甚至能根据你的要求，自动整理成邮件格式或代码片段。**这就是「蛐蛐」为你带来的体验 —— 而且完全免费！**\n\n---\n\n## ✨ 核心优势\n\n| 特性 | 蛐蛐 (QuQu) 的解决方案 |\n| :--- | :--- |\n| 🎯 **顶尖中文识别，隐私至上** | 内置阿里巴巴 **FunASR Paraformer** 模型，在您的电脑本地运行。这意味着它能听懂中文互联网的\"梗\"，也能保护您最私密的语音数据不被上传。 |\n| 💡 **会思考的\"两段式引擎\"** | 独创 **\"ASR精准识别 + LLM智能优化\"** 工作流。它不仅能转录，更能\"理解\"和\"重塑\"您的语言。**自动过滤口头禅**、**修正错误表述**（例如将\"周三开会，不对，是周四\"直接输出为\"周四开会\"），这些都只是基础操作。 |\n| 🌐 **为国内优化的开放AI生态** | 支持任何兼容OpenAI API的服务，并**优先适配国内顶尖模型** (如通义千问、Kimi等)。这意味着更快的响应速度、更低的费用和更好的合规性。 |\n| 🚀 **开发者与效率专家挚爱** | 能准确识别并格式化 `camelCase` 和 `snake_case` 等编程术语。通过自定义AI指令，更能实现**上下文感知**，根据您当前的应用（写代码、回邮件）智能调整输出格式。 |\n\n\n## 🎬 功能演示\n\n<!-- 在这里放置您的GIF演示图 -->\n<!-- 例如: <img src=\"assets/demo.gif\" /> -->\n<p align=\"center\"><i>(这里是应用的GIF演示图)</i></p>\n\n- **一键唤醒**: 全局快捷键 F2，随时随地开始记录。\n- **实时识别**: 本地 FunASR 引擎提供高精度中文识别。\n- **智能优化**: 连接您的AI模型，自动润色、纠错、总结。\n- **无缝粘贴**: 转换完成的文本自动粘贴到您当前光标位置。\n\n### 🚀 从 Wispr Flow 迁移？\n\n如果你正在使用 Wispr Flow 但希望**节省订阅费用**、**保护隐私数据**、**更好的中文支持**，那么蛐蛐就是你的完美选择！\n\n## 🚀 快速开始\n\n### 1. 环境要求\n- **Node.js 18+** 和 pnpm\n- **Python 3.8+** (用于运行本地FunASR服务)\n- **macOS 10.15+**, **Windows 10+**, 或 **Linux**\n\n### 2. 项目初始化\n\n#### 方案一：使用 uv (推荐) 🌟\n\n[uv](https://github.com/astral-sh/uv) 是现代化的 Python 包管理器，能自动管理 Python 版本和依赖，避免环境冲突：\n\n```bash\n# 1. 克隆项目\ngit clone https://github.com/yan5xu/ququ.git\ncd ququ\n\n# 2. 安装 Node.js 依赖\npnpm install\n\n# 3. 安装 uv (如果尚未安装)\n# macOS/Linux:\ncurl -LsSf https://astral.sh/uv/install.sh | sh\n# Windows:\n# powershell -ExecutionPolicy ByPass -c \"irm https://astral.sh/uv/install.ps1 | iex\"\n\n# 4. 初始化 Python 环境 (uv 会自动下载 Python 3.11 和所有依赖)\nuv sync\n\n# 5. 下载 FunASR 模型\nuv run python download_models.py\n\n# 6. 启动应用!\npnpm run dev\n```\n\n#### 方案二：使用系统 Python\n\n如果您更喜欢使用系统 Python 环境：\n\n```bash\n# 1. 克隆项目\ngit clone https://github.com/yan5xu/ququ.git\ncd ququ\n\n# 2. 安装 Node.js 依赖\npnpm install\n\n# 3. 创建虚拟环境 (推荐)\npython3 -m venv .venv\nsource .venv/bin/activate  # Linux/macOS\n# .venv\\Scripts\\activate   # Windows\n\n# 4. 安装 Python 依赖\npip install funasr modelscope torch torchaudio librosa numpy\n\n# 5. 下载 FunASR 模型\npython download_models.py\n\n# 6. 启动应用!\npnpm run dev\n```\n\n#### 方案三：使用嵌入式 Python 环境\n\n项目还支持完全隔离的嵌入式 Python 环境（主要用于生产构建）：\n\n```bash\n# 1-2. 同上克隆项目和安装 Node.js 依赖\n\n# 3. 准备嵌入式 Python 环境\npnpm run prepare:python\n\n# 4. 测试环境是否正常\npnpm run test:python\n\n# 5. 启动应用\npnpm run dev\n```\n\n### 3. 配置AI模型\n启动应用后，在 **设置页面** 中填入您的AI服务商提供的 **API Key**、**Base URL** 和 **模型名称**。支持通义千问、Kimi、智谱AI等国产模型，配置将自动保存在本地。\n\n### 4. 故障排除\n\n#### 常见初始化问题\n\n**问题**: `ModuleNotFoundError: No module named 'funasr'`\n```bash\n# 解决方案 1: 使用 uv (推荐)\nuv sync\nuv run python download_models.py\n\n# 解决方案 2: 重新安装依赖\npip install funasr modelscope torch torchaudio librosa numpy\n\n# 解决方案 3: 使用嵌入式环境\npnpm run prepare:python\n```\n\n**问题**: FunASR 模型下载失败或加载缓慢\n```bash\n# 检查网络连接，确保能访问 modelscope.cn\n# 如果在 macOS 上遇到 SSL 警告：\npip install \"urllib3<2.0\"\n\n# 手动下载模型：\npython download_models.py\n# 或使用 uv:\nuv run python download_models.py\n```\n\n**问题**: Python 版本不兼容\n```bash\n# 使用 uv 自动管理 Python 版本 (推荐)\nuv sync  # 会自动下载 Python 3.11\n\n# 或手动安装 Python 3.8+\n# 检查当前版本: python3 --version\n```\n\n#### 环境选择建议\n\n| 使用场景 | 推荐方案 | 优点 |\n|---------|---------|------|\n| **新用户/快速体验** | uv | 自动管理，无环境冲突 |\n| **开发者/自定义需求** | 系统 Python + 虚拟环境 | 灵活控制，便于调试 |\n| **生产部署** | 嵌入式环境 | 完全隔离，无外部依赖 |\n\n#### 其他常见问题\n\n- **权限问题**: 在某些系统上可能需要使用 `--user` 参数安装Python包\n- **网络问题**: 首次运行时需要下载FunASR模型，请确保网络连接正常\n- **模型路径**: 模型默认下载到 `~/.cache/modelscope/` 目录\n\n## 🛠️ 技术栈\n\n- **前端**: React 19, TypeScript, Tailwind CSS, shadcn/ui, Vite\n- **桌面端**: Electron\n- **语音技术 (本地)**: FunASR (Paraformer-large, FSMN-VAD, CT-Transformer)\n- **AI模型 (可配置)**: 兼容 OpenAI, Anthropic, 阿里云通义千问, Kimi 等\n- **数据库**: better-sqlite3\n\n## 🤝 参与贡献\n\n我们是一个开放和友好的社区，欢迎任何形式的贡献！\n\n### 📋 项目管理\n\n我们使用 GitHub Projects 来管理项目的开发进度和任务规划：\n\n- 📊 **项目看板**: [蛐蛐 开发看板](https://github.com/users/yan5xu/projects/2) - 查看当前开发状态、功能规划和进度跟踪\n- 🎯 **任务管理**: 所有功能开发、Bug修复和改进建议都在项目看板中进行跟踪\n- 🔄 **开发流程**: 从想法提出到功能发布的完整流程可视化\n\n### 如何参与\n\n- 🤔 **提建议**: 对产品有任何想法？欢迎到 [Issues](https://github.com/yan5xu/ququ/issues) 页面提出",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-02T02:16:45.905909"
  },
  {
    "basic_info": {
      "name": "NCE",
      "full_name": "iChochy/NCE",
      "owner": "iChochy",
      "description": "《新概念英语》全四册在线课文朗读、单句点读",
      "url": "https://github.com/iChochy/NCE",
      "clone_url": "https://github.com/iChochy/NCE.git",
      "ssh_url": "git@github.com:iChochy/NCE.git",
      "homepage": "https://nce.ichochy.com/",
      "created_at": "2025-09-24T05:55:42Z",
      "updated_at": "2025-10-02T02:02:12Z",
      "pushed_at": "2025-09-28T14:24:48Z"
    },
    "stats": {
      "stars": 908,
      "forks": 146,
      "watchers": 908,
      "open_issues": 3,
      "size": 598186
    },
    "tech_info": {
      "language": "JavaScript",
      "languages": {
        "JavaScript": 7893,
        "CSS": 6961,
        "HTML": 6059
      },
      "license": "MIT License",
      "topics": [
        "english",
        "learn",
        "nce"
      ]
    },
    "content": {
      "readme": "# 新概念英语-全四册\n## New Concept English\n### 在线课文点读\n\n在线课文朗读，单句点读，随时随地在线学习。\n\n---\n\n## 📕 第一册：《First Things First》\n\n**目标：打基础，日常交流入门**\n\n* **内容概述**：\n\n  * 共144课，都是非常短的小对话和故事。\n  * 涉及**字母、音标、基础词汇、简单句型**。\n  * 场景包括：问候、介绍、买东西、问路、看医生、日常生活。\n* **语法重点**：\n\n  * 一般现在时、一般过去时、一般将来时的基本用法。\n  * be动词、名词单复数、冠词、简单疑问句、祈使句。\n* **词汇量**：约600词左右。\n* **学习重点**：\n\n  * 正确发音、掌握基础语法、能听懂并说出日常用语。\n* **适合人群**：\n\n  * 英语零基础到初级学习者。\n  * 需要建立语感，能开口说简单英文。\n\n---\n\n## 📘 第二册：《Practice and Progress》\n\n**目标：初步运用，听说读写同步提高**\n\n* **内容概述**：\n\n  * 共96课，每课一个短故事，逐渐增加难度。\n  * 情节有趣，加入了旅行、工作、社会生活的情景。\n* **语法重点**：\n\n  * 各种时态（现在完成时、过去完成时、将来时、过去进行时）。\n  * 被动语态、直接引语和间接引语、条件句、比较级和最高级。\n* **词汇量**：约1500词左右。\n* **学习重点**：\n\n  * 掌握基本语法体系，能写简单短文，能听懂慢速英语。\n  * 口语表达更流畅，能描述事件、讲故事。\n* **适合人群**：\n\n  * 有一定英语基础，想系统梳理语法、提高读写能力的人。\n\n---\n\n## 📙 第三册：《Developing Skills》\n\n**目标：语言运用能力进阶，理解真实语境**\n\n* **内容概述**：\n\n  * 共60课，每课一篇短文，题材更丰富（科技、历史、人物、故事）。\n  * 文章更长，句子更复杂，阅读量明显加大。\n* **语法重点**：\n\n  * 虚拟语气、各种复杂从句（定语从句、状语从句、名词性从句）。\n  * 非谓语动词（动词不定式、分词、动名词）的高级用法。\n* **词汇量**：约2500词左右。\n* **学习重点**：\n\n  * 阅读理解能力，扩大词汇量，掌握地道表达。\n  * 能复述文章、用英语讨论话题、写中等长度的文章。\n* **适合人群**：\n\n  * 已学完第二册，想提高综合能力、能读懂原版书或新闻的人。\n\n---\n\n## 📗 第四册：《Fluency in English》\n\n**目标：流利表达，学术/专业阅读能力**\n\n* **内容概述**：\n\n  * 共48课，每课一篇较长的文章，题材涵盖哲学、科学、艺术、历史。\n  * 语言地道、表达严谨，接近大学英语阅读难度。\n* **语法重点**：\n\n  * 巩固所有语法，重点是复杂结构、修辞、长难句分析。\n* **词汇量**：约3500-4000词。\n* **学习重点**：\n\n  * 提高逻辑思维和批判性阅读能力。\n  * 能写较长文章、报告，口语表达接近流利。\n* **适合人群**：\n\n  * 已有较强英语基础，想进一步提升到高级水平的人。\n  * 考研、雅思、托福备考的学习者。\n\n---\n\n## 🎯 总体学习路径建议\n\n1. **第一册**：打好语音、语法和口语基础。\n2. **第二册**：建立完整语法体系，提升听说读写的基本能力。\n3. **第三册**：重点在阅读、词汇和句型复杂度，培养复述和写作能力。\n4. **第四册**：进入英语原著阅读和学术表达层面，达到准母语水平。\n\n---\n\nSite：[http://nce.ichochy.com](http://nce.ichochy.com)\n\nBlog：[http://ichochy.com](http://ichochy.com)\n\n资源：https://github.com/tangx/New-Concept-English\n\n---\n\n## 最后\n>大量的学习，大量的研究  \n>不断地重复，不断的实践  \n>从而建立起自己稳定的内核  \n>在克服逆境的过程中爱上自己  \n",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-02T02:16:47.038124"
  },
  {
    "basic_info": {
      "name": "free-sqlite",
      "full_name": "fjb040911/free-sqlite",
      "owner": "fjb040911",
      "description": "Free SQLite for VSCode.Support writing SQL statements",
      "url": "https://github.com/fjb040911/free-sqlite",
      "clone_url": "https://github.com/fjb040911/free-sqlite.git",
      "ssh_url": "git@github.com:fjb040911/free-sqlite.git",
      "homepage": null,
      "created_at": "2025-09-16T06:20:19Z",
      "updated_at": "2025-10-02T02:15:50Z",
      "pushed_at": "2025-09-18T06:54:35Z"
    },
    "stats": {
      "stars": 787,
      "forks": 0,
      "watchers": 787,
      "open_issues": 1,
      "size": 10083
    },
    "tech_info": {
      "language": "JavaScript",
      "languages": {
        "JavaScript": 58284,
        "TypeScript": 33986,
        "HTML": 2399,
        "CSS": 1455
      },
      "license": "MIT License",
      "topics": []
    },
    "content": {
      "readme": "# Free sqlite\n\nVSCode extension to explore and query SQLite databases.\nopen-source and free.\n\n## ✨ Features\n - 📃 Open any SQLite file - Simply click on .sqlite or .db files to open them instantly\n - 🛡 Table Explorer - Browse all tables in your database from an integrated sidebar\n - 🌈 Data Visualization - View table data in a clean, modern interface that adapts to your VS Code theme\n - 🖥 SQL automatically complete - SQL statement editor, Automatically complete SQL keywords, table names, and fields\n - ❌ SQL error info - Execute query error information output display\n - 📦 Query result export - The query results can be exported as Excel or CSV\n - ❤️ Favorites - Collect some of your most commonly used SQL statements\n\n## How to use\n\n### Install\nVSCode extension install!\n\n\n[Install free sqlite](https://marketplace.visualstudio.com/items?itemName=free-sqlite.free-sqlite)\n\n### Open database\nNow! Browse all tables in your database in the right panel\n\n\n![open](https://github.com/fjb040911/free-sqlite/blob/main/doc/open.gif?raw=true)\n\n### Multiple files\n![multiple](https://github.com/fjb040911/free-sqlite/blob/main/doc/multi.gif?raw=true)\n\n### SQL Editor\nAutomatically complete SQL keywords, table names, and fields\n\n\n![editor](https://github.com/fjb040911/free-sqlite/blob/main/doc/select.gif?raw=true)\n\n### SQL Query error output\nIf there is an error when running SQL, you can see the error log through the following channels\n\n\nTerminal>output>free sqlite\n\n\n![output](https://github.com/fjb040911/free-sqlite/blob/main/doc/oupput.png?raw=true)\n\n### Favorite\nQuickly execute or view your frequently used SQL\n\n\n![favorite](https://github.com/fjb040911/free-sqlite/blob/main/doc/favoites.gif?raw=true)\n\n### Export\n![export](https://github.com/fjb040911/free-sqlite/blob/main/doc/expot.gif?raw=true)\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-02T02:16:48.182531"
  },
  {
    "basic_info": {
      "name": "HeadlessX",
      "full_name": "saifyxpro/HeadlessX",
      "owner": "saifyxpro",
      "description": "A lightweight, self-hosted headless browser automation platform. Designed as an alternative to Browserless, built for speed, privacy, and scalability.",
      "url": "https://github.com/saifyxpro/HeadlessX",
      "clone_url": "https://github.com/saifyxpro/HeadlessX.git",
      "ssh_url": "git@github.com:saifyxpro/HeadlessX.git",
      "homepage": "https://headlessx.saify.me",
      "created_at": "2025-09-12T18:11:48Z",
      "updated_at": "2025-10-01T23:30:10Z",
      "pushed_at": "2025-09-26T19:52:40Z"
    },
    "stats": {
      "stars": 561,
      "forks": 83,
      "watchers": 561,
      "open_issues": 0,
      "size": 3962
    },
    "tech_info": {
      "language": "JavaScript",
      "languages": {
        "JavaScript": 917871,
        "TypeScript": 64817,
        "Shell": 45033,
        "CSS": 5079,
        "Dockerfile": 1857
      },
      "license": "MIT License",
      "topics": [
        "automation",
        "automation-api",
        "automation-platform",
        "browser-automation",
        "browser-testing",
        "browserless",
        "chrome-headless",
        "chromedriver",
        "container-automation",
        "data-extraction",
        "headless",
        "headless-chrome",
        "headless-service",
        "playwright",
        "playwright-automation",
        "puppeteer",
        "scraping-service",
        "web-automation",
        "web-scraping"
      ]
    },
    "content": {
      "readme": "# 🚀 HeadlessX v1.3.0\n\n**Advanced Anti-Detection Web Scraping API with Comprehensive Fingerprinting Control**\n\n<div align=\"center\">\n\n[![License: MIT](https://img.shields.io/badge/License-MIT-green.svg?style=for-the-badge)](https://opensource.org/licenses/MIT)\n[![Version](https://img.shields.io/badge/Version-v1.3.0-blue.svg?style=for-the-badge)](https://github.com/saifyxpro/HeadlessX/releases)\n[![Node.js](https://img.shields.io/badge/Node.js-18%2B-success.svg?style=for-the-badge&logo=node.js)](https://nodejs.org/)\n[![Playwright](https://img.shields.io/badge/Playwright-Latest-orange.svg?style=for-the-badge&logo=playwright)](https://playwright.dev/)\n\n[![GitHub Stars](https://img.shields.io/github/stars/saifyxpro/HeadlessX?style=for-the-badge&logo=github)](https://github.com/saifyxpro/HeadlessX/stargazers)\n[![GitHub Forks](https://img.shields.io/github/forks/saifyxpro/HeadlessX?style=for-the-badge&logo=github)](https://github.com/saifyxpro/HeadlessX/network/members)\n[![Docker](https://img.shields.io/badge/Docker-Ready-blue.svg?style=for-the-badge&logo=docker)](#-docker-deployment)\n[![CI/CD](https://img.shields.io/github/actions/workflow/status/saifyxpro/HeadlessX/ci.yml?style=for-the-badge&logo=github-actions&label=CI%2FCD)](https://github.com/saifyxpro/HeadlessX/actions)\n\n[![Open Source](https://img.shields.io/badge/Open%20Source-100%25-brightgreen.svg?style=for-the-badge&logo=open-source-initiative)](https://github.com/saifyxpro/HeadlessX)\n[![Contributors](https://img.shields.io/github/contributors/saifyxpro/HeadlessX?style=for-the-badge&logo=github)](https://github.com/saifyxpro/HeadlessX/graphs/contributors)\n[![Issues](https://img.shields.io/github/issues/saifyxpro/HeadlessX?style=for-the-badge&logo=github)](https://github.com/saifyxpro/HeadlessX/issues)\n[![PRs Welcome](https://img.shields.io/badge/PRs-Welcome-brightgreen.svg?style=for-the-badge&logo=github)](http://makeapullrequest.com)\n\n</div>\n\n<div align=\"center\">\n\n![HeadlessX Demo](assets/main.gif)\n\n</div>\n\n> 🎯 **Unified Solution**: Website + API on a single domain  \n> 🛡️ **Advanced Anti-Detection**: Canvas/WebGL/Audio spoofing, behavioral simulation  \n> 🧠 **Human-like Behavior**: Bezier mouse movements, keyboard dynamics, natural scrolling  \n> 🚀 **Deploy Anywhere**: Docker, Node.js+PM2, or Development\n\n---\n\n<div align=\"center\">\n\n## 🗺️ **What's Coming Next?**\n\n### 🚀 **HeadlessX v2.0** - Full-Stack AI-Powered Platform\n*The future of intelligent web scraping is here*\n\n[![Roadmap](https://img.shields.io/badge/🗺️_View_Full_Roadmap-v2.0-purple.svg?style=for-the-badge)](./docs/roadmap-v2.md)\n\n**🎯 Revolutionary Features Coming:**\n- 🤖 **AI-Powered Admin Panel** - Intelligent task management & automation\n- 🎨 **Modern React Frontend** - Sleek, responsive dashboard interface  \n- 🧠 **Smart Automation** - AI-driven scraping strategies & optimization\n- 📊 **Advanced Analytics** - Real-time insights & performance metrics\n- 🔄 **Workflow Builder** - Visual scraping pipeline creation\n- 🎛️ **Enterprise Controls** - Advanced user management & permissions\n\n*Transform your web scraping experience with the next generation of HeadlessX*\n\n</div>\n\n---\n\n## ✨ v1.3.0 Key Features\n\n### 🛡️ **Advanced Anti-Detection Engine**\n- **Canvas Fingerprinting Control** - Dynamic noise injection with consistent seeds\n- **WebGL Spoofing** - GPU vendor/model spoofing with realistic profiles\n- **Audio Context Manipulation** - Hardware audio fingerprint database\n- **WebRTC Leak Prevention** - Complete IP leak protection\n- **Hardware Fingerprint Spoofing** - CPU, memory, and performance masking\n\n### 🧠 **Human-like Behavioral Simulation**\n- **Bezier Mouse Movement** - Natural acceleration and deceleration patterns\n- **Keyboard Dynamics** - Realistic dwell time and flight time variations\n- **Natural Scroll Patterns** - Reader, scanner, browser behavioral profiles\n- **Attention Model Simulation** - Human-like focus and interaction patterns\n- **Micro-movement Injection** - Sub-pixel accuracy for maximum realism\n\n### 🌐 **WAF Bypass Capabilities**\n- **Cloudflare Bypass** - Advanced challenge solving and TLS fingerprinting\n- **DataDome Evasion** - Resource blocking and behavioral pattern matching\n- **Incapsula/Akamai** - Generic WAF bypass with adaptive techniques\n- **HTTP/2 Fingerprinting** - Stream prioritization and header ordering\n\n### 📊 **Comprehensive Device Profiles**\n- **50+ Chrome Profiles** - Desktop, mobile, and tablet configurations\n- **Hardware Consistency** - CPU, GPU, memory, and sensor correlation\n- **Geolocation Intelligence** - Timezone, language, and locale matching\n- **Profile Validation** - Real-time consistency checking and scoring\n\n---\n\n\n**Choose your deployment:**\n\n| Method | Command | Best For |\n|--------|---------|----------|\n| 🐳 **Docker** | `docker-compose up -d` | Production, easy deployment |\n| 🔧 **Auto Setup** | `chmod +x scripts/setup.sh && sudo ./scripts/setup.sh` | VPS/Server with full control |\n| 💻 **Development** | `npm install && npm start` | Local development, testing |\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-02T02:16:49.306154"
  },
  {
    "basic_info": {
      "name": "thermoptic",
      "full_name": "mandatoryprogrammer/thermoptic",
      "owner": "mandatoryprogrammer",
      "description": "A next-generation HTTP stealth proxy which perfectly cloaks requests as the Chrome browser across all layers of the stack.",
      "url": "https://github.com/mandatoryprogrammer/thermoptic",
      "clone_url": "https://github.com/mandatoryprogrammer/thermoptic.git",
      "ssh_url": "git@github.com:mandatoryprogrammer/thermoptic.git",
      "homepage": null,
      "created_at": "2025-09-02T04:44:12Z",
      "updated_at": "2025-10-01T17:45:41Z",
      "pushed_at": "2025-10-01T15:09:26Z"
    },
    "stats": {
      "stars": 438,
      "forks": 23,
      "watchers": 438,
      "open_issues": 1,
      "size": 5188
    },
    "tech_info": {
      "language": "JavaScript",
      "languages": {
        "JavaScript": 209336,
        "HTML": 6745,
        "Pug": 4788,
        "Dockerfile": 2787,
        "Shell": 906
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "# thermoptic\n\n<!-- ![Rare image of the Major smiling]() -->\n\n<a href=\"https://www.youtube.com/watch?v=qkXReli7eC0\" target=\"_blank\"><img src=\"_readme/gits.gif\" width=\"100%\"></a>\n\n> *\"I don't believe it, thermoptic camouflage!\"*\n\n## What is it?\n\nThis is an HTTP proxy designed to bypass services that use fingerprinting such as [JA4+](https://blog.foxio.io/ja4%2B-network-fingerprinting) to block certain HTTP clients. Using this proxy, you can use your preferred HTTP clients like `curl` and still have [magically](#how-does-that-work-exactly) indistinguishable fingerprints from a real (Chrome/Chromium) web browser. `thermoptic` also comes with some [fun features](#handling-browser-javascript-fingerprinting-with-thermoptic-hooks) to mitigate JavaScript-based fingerprinting. It also makes it easy to do hybrid scraping using both a web browser and low-level HTTP clients together.\n\nEven if you’re unfamiliar with JA4+ fingerprinting, if you’ve done any scraping you’ve probably been blocked by it before. Popular services such as Cloudflare use such techniques (and other tricks) to detect use of \"non-human\" HTTP clients to block requests. These services can also use this fingerprinting to detect if you start a session with a real browser and then switch to a low-level client like `curl` later. `thermoptic` solves all of these problems by presenting a unified \"real\" browser fingerprint for all scraping requests.\n\n## Example\n\nHere's an example JA4H (HTTP) fingerprint of `curl` without the proxy:\n\n```\n$ curl https://ja4db.com/id/ja4h/\nge11nn090000_b6a016211e8a_000000000000_e3b0c44298fc\n```\n\nThis is quite different from the fingerprint that Chrome produces when you visit the URL directly:\n\n```\nge11cn19enus_f2808f0d04cf_9a10d4221160_7068f58def6e\n```\n\nHowever, when we use the proxy to make the request, our JA4H fingerprint is magically identical:\n\n```\n$ curl --proxy http://username:password@thermoptic:1234 https://ja4db.com/id/ja4h/\nge11cn19enus_f2808f0d04cf_9a10d4221160_7068f58def6e\n```\n\n(The same goes for our JA4 TLS fingerprint as well, etc).\n\n## Setup\n\nTo start a `thermoptic` proxy which cloaks your traffic through a containerized Chrome instance on Ubuntu 22.04:\n\n```\ndocker compose up --build\n```\n\nThat's all, now you can proxy traffic through it:\n\n```\ncurl --proxy http://changeme:changeme@127.0.0.1:1234 --insecure https://ja4db.com/id/ja4h/\n```\n\nImportant notes:\n* Default proxy username and password are `changeme` please make sure you change them before exposing externally.\n* If you don't want to use `---insecure` you need to use the generated CA file located in `./ssl/rootCA.crt`. This is generated the first time you run `thermoptic`.\n* You can connect `thermoptic` to any Chrome/Chromium instance launched with the `--remote-debugging-port` flag. This is essential as you'll want to set up and proxy through more commonly used environments to keep your fingerprint as low profile as possible (e.g. Chrome on Windows).\n\n## How does this cloaking work exactly?\n\n![Visual diagram example](_readme/diagram.png)\n\n* An HTTP request is made using an HTTP client such as `curl` with `thermoptic` set as a proxy.\n* `thermoptic` analyzes the request to best determine what type of browser request it's *supposed* to be (e.g. manual URL visit? Form submission? A `fetch()` request?).\n* `thermoptic` uses the [Chrome Debugging Protocol (CDP)](https://chromedevtools.github.io/devtools-protocol/) to puppet the browser and set up a page that mocks the request exactly as it normally would occur in a real web browser.\n* `thermoptic` triggers the request via the mocked context and captures the HTTP response.\n* `thermoptic` sends the HTTP response back to the client.\n\nDue to the fact that the browser is actually making the request using its full stack, the resulting JA4 fingerprints are identitical.\n\nNOTE: Due to many WAFs employing JavaScript-level fingerprinting of web browsers, `thermoptic` also exposes hooks to utilize the browser for key steps of the scraping process. See [this section](#handling-browser-javascript-fingerprinting-with-thermoptic-hooks) for more information on this.\n\n## Why *this* approach vs other solutions?\n\nTo put it bluntly: other approaches have fundamental flaws which prevent them from being a practical long term solution to the browser fingerprinting problem.\n\nMany other attempts to \"beat\" browser JA4+ fingerprinting do so by reimplementing the various layers of the browser stack. This approach has a number of serious drawbacks, such as:\n\n* Requiring great care to match the behavior of the \"real\" browser implementation perfectly. As a result, *any* quirks or discrepancies can be used to differentiate these clients from the \"real\" browser implementation.\n* Attempting to only solve the problem at one layer of the stack. Chrome utilizes multiple protocols to provide a web browsing experience. As a result, even if you've made a perfectly-matching TLS layer your HTTP layer may give you away if it's not byte-perfect.\n* As the \"re",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-02T02:16:50.447545"
  },
  {
    "basic_info": {
      "name": "danmu_api",
      "full_name": "huangxd-/danmu_api",
      "owner": "huangxd-",
      "description": "一个人人都能部署的基于 js 的弹幕 API 服务器，支持爱优腾芒哔人韩弹幕直接获取，兼容弹弹play的搜索、详情查询和弹幕获取接口，并提供日志记录，支持vercel/cloudflare/docker/claw等部署方式，不用提前下载弹幕，没有nas或小鸡也能一键部署。",
      "url": "https://github.com/huangxd-/danmu_api",
      "clone_url": "https://github.com/huangxd-/danmu_api.git",
      "ssh_url": "git@github.com:huangxd-/danmu_api.git",
      "homepage": "https://danmuapi.vercel.app",
      "created_at": "2025-09-09T13:43:21Z",
      "updated_at": "2025-10-01T15:16:09Z",
      "pushed_at": "2025-10-01T15:09:50Z"
    },
    "stats": {
      "stars": 386,
      "forks": 407,
      "watchers": 386,
      "open_issues": 4,
      "size": 202
    },
    "tech_info": {
      "language": "JavaScript",
      "languages": {
        "JavaScript": 143150,
        "Dockerfile": 417
      },
      "license": "GNU Affero General Public License v3.0",
      "topics": []
    },
    "content": {
      "readme": "<div align=\"center\">\n  <img src=\"https://i.mji.rip/2025/09/27/eedc7b701c0fa5c1f7c175b22f441ad9.jpeg\" alt=\"Clash\" width=\"128\" style=\"border-radius: 16px;\" />\n</div>\n\n<h2 align=\"center\">\nLogVar 弹幕 API 服务器\n</h2>\n\n[![GitHub](https://img.shields.io/badge/-GitHub-181717?logo=github)](https://github.com/huangxd-/damnu_api)\n![GitHub forks](https://img.shields.io/github/forks/huangxd-/danmu_api)\n![GitHub Repo stars](https://img.shields.io/github/stars/huangxd-/danmu_api)\n![GitHub License](https://img.shields.io/github/license/huangxd-/danmu_api)\n![Docker Image Version](https://img.shields.io/docker/v/logvar/danmu-api?sort=semver)\n![Docker Pulls](https://img.shields.io/docker/pulls/logvar/danmu-api)\n[![telegram](https://img.shields.io/static/v1?label=telegram&message=telegram_channel&color=blue)](https://t.me/logvar_danmu_channel)\n[![telegram](https://img.shields.io/static/v1?label=telegram&message=telegram_group&color=blue)](https://t.me/logvar_danmu_group)\n\n---\n\n一个人人都能部署的基于 js 的弹幕 API 服务器，支持爱优腾芒哔人韩弹幕直接获取，兼容弹弹play的搜索、详情查询和弹幕获取接口，并提供日志记录，支持vercel/cloudflare/docker/claw等部署方式，不用提前下载弹幕，没有nas或小鸡也能一键部署。\n\n本项目仅为个人爱好开发，代码开源。如有任何侵权行为，请联系本人删除。\n\n有问题提issue或 [私信机器人](https://t.me/ddjdd_bot) 都ok。\n\n新加了 [tg频道](https://t.me/logvar_danmu_channel) ，方便发送更新通知，以及群组，太多人私信咨询了，索性增加一个 [互助群](https://t.me/logvar_danmu_group) ，大家有问题可以在群里求助。\n\n> 请不要在国内媒体平台宣传本项目！\n\n## 功能\n- **API 接口**：\n  - `GET /api/v2/search/anime?keyword=${queryTitle}`：根据关键字搜索动漫。\n  - `POST /api/v2/match`：根据关键字匹配动漫，用于自动匹配。\n  - `GET /api/v2/search/episodes`：根据关键词搜索所有匹配的剧集信息。\n  - `GET /api/v2/bangumi/:animeId`：获取指定动漫的详细信息。\n  - `GET /api/v2/comment/:commentId?withRelated=true&chConvert=1`：获取指定弹幕评论，支持返回相关评论和字符转换。\n  - `GET /api/logs`：获取最近的日志（最多 500 行，格式为 `[时间戳] 级别: 消息`）。\n- **日志记录**：捕获 `console.log`（info 级别）和 `console.error`（error 级别），JSON 内容格式化输出。\n- **部署支持**：支持本地运行、Docker 容器化、Vercel 一键部署、Cloudflare 一键部署和 Docker 一键启动。\n\n## 前置条件\n- Node.js（v18.0.0 或更高版本；理论兼容更低版本，请自行测试）\n- npm\n- Docker（可选，用于容器化部署）\n\n## 本地运行\n1. **克隆仓库**：\n   ```bash\n   git clone <仓库地址>\n   cd <项目目录>\n   ```\n\n2. **安装依赖**：\n   ```bash\n   npm install\n   ```\n\n3. **启动服务器**：\n   ```bash\n   npm start\n   ```\n   服务器将在 `http://{ip}:9321` 运行，默认token是`87654321`。\n   或者使用下面的命令\n   ```bash\n   # 启动\n   node ./danmu_api/server.js\n   # 测试\n   node --test ./danmu_api/worker.test.js\n   ```\n\n4. **测试 API**：\n   使用 Postman 或 curl 测试：\n   - `GET http://{ip}:9321/87654321`\n   - `GET http://{ip}:9321/87654321/api/v2/search/anime?keyword=生万物`\n   - `POST http://{ip}:9321/87654321/api/v2/api/v2/match`\n   - `GET http://{ip}:9321/87654321/api/v2/search/episodes?anime=生万物`\n   - `GET http://{ip}:9321/87654321/api/v2/bangumi/1`\n   - `GET http://{ip}:9321/87654321/api/v2/comment/1?withRelated=true&chConvert=1`\n   - `GET http://{ip}:9321/87654321/api/logs`\n\n## 使用 Docker 运行\n1. **构建 Docker 镜像**：\n   ```bash\n   docker build -t danmu-api .\n   ```\n\n2. **运行容器**：\n   ```bash\n   docker run -d -p 9321:9321 --name danmu-api -e TOKEN=87654321 danmu-api\n   ```\n   - 使用`-e TOKEN=87654321`设置`TOKEN`环境变量，覆盖Dockerfile中的默认值。\n\n3. **测试 API**：\n   使用 `http://{ip}:9321/{TOKEN}` 访问上述 API 接口。\n\n## Docker 一键启动 【推荐】\n1. **拉取镜像**：\n   ```bash\n   docker pull logvar/danmu-api:latest\n   ```\n\n2. **运行容器**：\n   ```bash\n   docker run -d -p 9321:9321 --name danmu-api -e TOKEN=87654321 logvar/danmu-api:latest\n   ```\n   - 使用`-e TOKEN=87654321`设置`TOKEN`环境变量。\n\n   ```yaml\n   services:\n     danmu-api:\n       image: logvar/danmu-api:latest\n       container_name: danmu-api\n       ports:\n         - \"9321:9321\"\n       environment:\n         - TOKEN=87654321  # 请将 87654321 替换为你想自定义的 Token 值\n       restart: unless-stopped    # 可选配置，容器退出时自动重启（非必需，可根据需求删除）\n   ```\n   - 或使用docker compose部署。\n   ```yaml\n   services:\n     watchtower:\n       image: containrrr/watchtower\n       container_name: watchtower-gx\n       restart: always\n       volumes:\n         - /var/run/docker.sock:/var/run/docker.sock\n       environment:\n         - TZ=Asia/Shanghai  # 保持时区正确\n       command:\n         - --cleanup         # 更新后清理旧镜像\n         - --interval        # 间隔参数\n         - \"12600\"           # 30分钟（1800秒），适合测试\n         - danmu-api         # 监控的目标容器名\n   ```\n   - 可以使用watchtower监控有新版本自动更新。\n\n3. **测试 API**：\n   使用 `http://{ip}:9321/{TOKEN}` 访问上述 API 接口。\n\n## 部署到 Vercel 【推荐】\n\n### 一键部署\n点击以下按钮即可将项目快速部署到 Vercel：\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/clone?repository-url=https://github.com/huangxd-/danmu_api&project-name=danmu_api&repository-name=danmu_api)\n\n**注意**：请将按钮链接中的 `https://github.com/huangxd-/danmu_api` 替换为你的实际 Git 仓库地址。编辑 `README.md` 并更新链接后，推送到仓库，点击按钮即可自动克隆和部署。\n- **设置环境变量**：部署后，在 Vercel 仪表板中：\n  1. 转到你的项目设置。\n  2. 在“Environment Variables”部分添加 `TOKEN` 变量，输入你的 API 令牌值。\n  3. 保存更改并重新部署。\n- 示例请求：`https://{your_domian}.vercel.app/87654321/api/v2/search/anime?keyword=子夜归`\n\n### 优化点\nSettings > Functions > Advanced Setting > Function Region 切换为 Hong Kong，能提高访问速度，体验更优\n> hk有可能访问不了360，也可以尝试切其他region，如新加坡等\n\n## 部署到 腾讯云 edgeone pages\n\n### 一键部署\n[![使用 EdgeOne Pages 部署](https://cdnstatic.tencentcs.com/edgeone/pages/deploy.svg)](https://console",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-02T02:16:51.577797"
  },
  {
    "basic_info": {
      "name": "devtools-debugger-mcp",
      "full_name": "ScriptedAlchemy/devtools-debugger-mcp",
      "owner": "ScriptedAlchemy",
      "description": "An MCP server exposing full Chrome DevTools Protocol debugging: breakpoints, step/run, call stacks, eval, and source maps.",
      "url": "https://github.com/ScriptedAlchemy/devtools-debugger-mcp",
      "clone_url": "https://github.com/ScriptedAlchemy/devtools-debugger-mcp.git",
      "ssh_url": "git@github.com:ScriptedAlchemy/devtools-debugger-mcp.git",
      "homepage": null,
      "created_at": "2025-09-12T04:04:46Z",
      "updated_at": "2025-09-30T23:39:10Z",
      "pushed_at": "2025-09-12T22:21:28Z"
    },
    "stats": {
      "stars": 329,
      "forks": 18,
      "watchers": 329,
      "open_issues": 3,
      "size": 88
    },
    "tech_info": {
      "language": "JavaScript",
      "languages": {
        "JavaScript": 44665,
        "TypeScript": 25033
      },
      "license": "MIT License",
      "topics": []
    },
    "content": {
      "readme": "# Node.js Debugger MCP\n\nAn MCP server that provides comprehensive Node.js debugging capabilities using the Chrome DevTools Protocol. This server enables AI assistants to debug Node.js applications with full access to breakpoints, stepping, variable inspection, call stacks, expression evaluation, and source maps.\n\n## Why use this MCP server?\nThis MCP server is useful when you need AI assistance with debugging Node.js applications. It provides programmatic access to all the debugging features you'd find in Chrome DevTools or VS Code, allowing AI assistants to help you set breakpoints, inspect variables, step through code, and analyze runtime behavior. \n\n## Features\n\n- **Full Node.js debugger**: Set breakpoints, conditional breakpoints, logpoints, and pause-on-exceptions\n- **Stepping controls**: Step over/into/out, continue to location, restart frame\n- **Variable inspection**: Explore locals/closure scopes, `this` preview, and drill down into object properties\n- **Expression evaluation**: Evaluate JavaScript expressions in the current call frame with console output capture\n- **Call stack analysis**: Inspect call stacks and pause-state information\n- **Source map support**: Debug TypeScript and other transpiled code with full source map support\n- **Console monitoring**: Capture and review console output during debugging sessions\n\n## Installation\n\n```bash\nnpm install devtools-debugger-mcp\n```\n\n## Configuration\n\nAdd the server to your MCP settings configuration:\n\n```json\n{\n  \"devtools-debugger-mcp\": {\n    \"command\": \"node\",\n    \"args\": [\"path/to/devtools-debugger-mcp/dist/index.js\"]\n  }\n}\n```\n\nAlternatively, if installed globally, you can use the CLI binary:\n\n```json\n{\n  \"devtools-debugger-mcp\": {\n    \"command\": \"devtools-debugger-mcp\"\n  }\n}\n```\n\n## Node.js Debugging\n\nThis MCP server can debug Node.js programs by launching your script with the built‑in inspector (`--inspect-brk=0`) and speaking the Chrome DevTools Protocol (CDP).\n\nHow it works\n- `start_node_debug` spawns `node --inspect-brk=0 your-script.js`, waits for the inspector WebSocket, attaches, and returns the initial pause (first line) with a `pauseId` and top call frame.\n- You can then set breakpoints (by file path or URL regex), choose pause-on-exceptions, and resume/step. At each pause, tools can inspect scopes, evaluate expressions, and read console output captured since the last step/resume.\n- When the process exits, the server cleans up the CDP session and resets its state.\n\nQuickstart (from an MCP-enabled client)\n1) Start a debug session\n```json\n{ \"tool\": \"start_node_debug\", \"params\": { \"scriptPath\": \"/absolute/path/to/app.js\" } }\n```\n2) Set a breakpoint (file path + 1-based line)\n```json\n{ \"tool\": \"set_breakpoint\", \"params\": { \"filePath\": \"/absolute/path/to/app.js\", \"line\": 42 } }\n```\n3) Run to next pause (optionally include console/stack)\n```json\n{ \"tool\": \"resume_execution\", \"params\": { \"includeConsole\": true, \"includeStack\": true } }\n```\n4) Inspect at a pause\n```json\n{ \"tool\": \"inspect_scopes\", \"params\": { \"maxProps\": 15 } }\n{ \"tool\": \"evaluate_expression\", \"params\": { \"expr\": \"user.name\" } }\n```\n5) Step\n```json\n{ \"tool\": \"step_over\" }\n{ \"tool\": \"step_into\" }\n{ \"tool\": \"step_out\" }\n```\n6) Finish\n```json\n{ \"tool\": \"stop_debug_session\" }\n```\n\nNode.js tool reference (summary)\n- `start_node_debug({ scriptPath, format? })` — Launches Node with inspector and returns initial pause.\n- `set_breakpoint({ filePath, line })` — Breakpoint by file path (1-based line).\n- `set_breakpoint_condition({ filePath?, urlRegex?, line, column?, condition, format? })` — Conditional breakpoint or by URL regex.\n- `add_logpoint({ filePath?, urlRegex?, line, column?, message, format? })` — Logpoint via conditional breakpoint that logs and returns `false`.\n- `set_exception_breakpoints({ state })` — `none | uncaught | all`.\n- `blackbox_scripts({ patterns })` — Ignore frames from matching script URLs.\n- `list_scripts()` / `get_script_source({ scriptId? | url? })` — Discover and fetch script sources.\n- `continue_to_location({ filePath, line, column? })` — Run until a specific source location.\n- `restart_frame({ frameIndex, pauseId?, format? })` — Re-run the selected frame.\n- `resume_execution({ includeScopes?, includeStack?, includeConsole?, format? })` — Continue to next pause or exit.\n- `step_over|step_into|step_out({ includeScopes?, includeStack?, includeConsole?, format? })` — Stepping with optional context in the result.\n- `evaluate_expression({ expr, pauseId?, frameIndex?, returnByValue?, format? })` — Evaluate in a paused frame; defaults to top frame.\n- `inspect_scopes({ maxProps?, pauseId?, frameIndex?, includeThisPreview?, format? })` — Locals/closures and `this` summary.\n- `get_object_properties({ objectId, maxProps?, format? })` — Drill into object previews.\n- `list_call_stack({ depth?, pauseId?, includeThis?, format? })` — Top N frames summary.\n- `get_pause_info({ pauseId?, format? })` — Pause reason/location summary.\n- `read_console({ format? })` — Console message",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-02T02:16:52.710413"
  },
  {
    "basic_info": {
      "name": "Auto-deploy-sap-and-keepalive",
      "full_name": "eooce/Auto-deploy-sap-and-keepalive",
      "owner": "eooce",
      "description": "Auto deploy sap and keepalive",
      "url": "https://github.com/eooce/Auto-deploy-sap-and-keepalive",
      "clone_url": "https://github.com/eooce/Auto-deploy-sap-and-keepalive.git",
      "ssh_url": "git@github.com:eooce/Auto-deploy-sap-and-keepalive.git",
      "homepage": "https://keepalive-sap.eooce.xx.kg",
      "created_at": "2025-09-15T09:57:24Z",
      "updated_at": "2025-10-02T02:03:39Z",
      "pushed_at": "2025-09-30T07:13:21Z"
    },
    "stats": {
      "stars": 328,
      "forks": 1429,
      "watchers": 328,
      "open_issues": 0,
      "size": 87
    },
    "tech_info": {
      "language": "JavaScript",
      "languages": {},
      "license": "Apache License 2.0",
      "topics": [
        "sap",
        "trojan",
        "vless-ws-tls",
        "vmess",
        "vmess-ws-tls"
      ]
    },
    "content": {
      "readme": "",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-02T02:16:53.748951"
  },
  {
    "basic_info": {
      "name": "snippets-vless-reverse-proxy",
      "full_name": "neibcn/snippets-vless-reverse-proxy",
      "owner": "neibcn",
      "description": null,
      "url": "https://github.com/neibcn/snippets-vless-reverse-proxy",
      "clone_url": "https://github.com/neibcn/snippets-vless-reverse-proxy.git",
      "ssh_url": "git@github.com:neibcn/snippets-vless-reverse-proxy.git",
      "homepage": null,
      "created_at": "2025-09-13T03:54:34Z",
      "updated_at": "2025-10-01T22:39:41Z",
      "pushed_at": "2025-09-13T04:37:09Z"
    },
    "stats": {
      "stars": 306,
      "forks": 309,
      "watchers": 306,
      "open_issues": 0,
      "size": 0
    },
    "tech_info": {
      "language": "JavaScript",
      "languages": {},
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-02T02:16:54.786886"
  },
  {
    "basic_info": {
      "name": "awesome-nano-banana-images",
      "full_name": "githubssg/awesome-nano-banana-images",
      "owner": "githubssg",
      "description": "Awesome curated collection of images and prompts generated by GPT-4o and gpt-image-1. Explore AI generated visuals created with ChatGPT and Sora, showcasing OpenAI’s advanced image generation capabilities.",
      "url": "https://github.com/githubssg/awesome-nano-banana-images",
      "clone_url": "https://github.com/githubssg/awesome-nano-banana-images.git",
      "ssh_url": "git@github.com:githubssg/awesome-nano-banana-images.git",
      "homepage": "https://animeai.online/gallery",
      "created_at": "2025-09-03T14:08:23Z",
      "updated_at": "2025-10-01T15:41:52Z",
      "pushed_at": "2025-09-03T14:10:07Z"
    },
    "stats": {
      "stars": 243,
      "forks": 32,
      "watchers": 243,
      "open_issues": 0,
      "size": 147294
    },
    "tech_info": {
      "language": "JavaScript",
      "languages": {},
      "license": "Other",
      "topics": []
    },
    "content": {
      "readme": "",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-02T02:16:55.824801"
  },
  {
    "basic_info": {
      "name": "PatchMon",
      "full_name": "PatchMon/PatchMon",
      "owner": "PatchMon",
      "description": "Linux Patch Monitoring Automation Platform",
      "url": "https://github.com/PatchMon/PatchMon",
      "clone_url": "https://github.com/PatchMon/PatchMon.git",
      "ssh_url": "git@github.com:PatchMon/PatchMon.git",
      "homepage": "https://patchmon.net",
      "created_at": "2025-09-16T13:23:41Z",
      "updated_at": "2025-10-01T22:43:24Z",
      "pushed_at": "2025-10-02T01:41:10Z"
    },
    "stats": {
      "stars": 220,
      "forks": 9,
      "watchers": 220,
      "open_issues": 42,
      "size": 1084
    },
    "tech_info": {
      "language": "JavaScript",
      "languages": {},
      "license": "GNU General Public License v3.0",
      "topics": [
        "apt",
        "apt-get",
        "centos",
        "debian",
        "dnf",
        "docker",
        "linux",
        "node",
        "redhat",
        "ubuntu",
        "updates",
        "yum"
      ]
    },
    "content": {
      "readme": "",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-02T02:16:56.863113"
  },
  {
    "basic_info": {
      "name": "CF-Workers-BPSUB",
      "full_name": "cmliu/CF-Workers-BPSUB",
      "owner": "cmliu",
      "description": "Snipaste 节点订阅生成器",
      "url": "https://github.com/cmliu/CF-Workers-BPSUB",
      "clone_url": "https://github.com/cmliu/CF-Workers-BPSUB.git",
      "ssh_url": "git@github.com:cmliu/CF-Workers-BPSUB.git",
      "homepage": "https://BP.SUB.CMLiussss.net",
      "created_at": "2025-09-09T04:42:47Z",
      "updated_at": "2025-10-01T17:18:32Z",
      "pushed_at": "2025-09-30T18:47:24Z"
    },
    "stats": {
      "stars": 191,
      "forks": 200,
      "watchers": 191,
      "open_issues": 0,
      "size": 578
    },
    "tech_info": {
      "language": "JavaScript",
      "languages": {},
      "license": "GNU General Public License v3.0",
      "topics": []
    },
    "content": {
      "readme": "",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-02T02:16:57.901424"
  },
  {
    "basic_info": {
      "name": "cc-cli",
      "full_name": "cjh-store/cc-cli",
      "owner": "cjh-store",
      "description": "claude code工具集合",
      "url": "https://github.com/cjh-store/cc-cli",
      "clone_url": "https://github.com/cjh-store/cc-cli.git",
      "ssh_url": "git@github.com:cjh-store/cc-cli.git",
      "homepage": null,
      "created_at": "2025-09-21T05:55:01Z",
      "updated_at": "2025-10-01T23:53:23Z",
      "pushed_at": "2025-09-30T14:23:22Z"
    },
    "stats": {
      "stars": 177,
      "forks": 11,
      "watchers": 177,
      "open_issues": 0,
      "size": 401
    },
    "tech_info": {
      "language": "JavaScript",
      "languages": {},
      "license": "MIT License",
      "topics": []
    },
    "content": {
      "readme": "",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-02T02:16:58.939789"
  },
  {
    "basic_info": {
      "name": "maxheadbox",
      "full_name": "syxanash/maxheadbox",
      "owner": "syxanash",
      "description": "Tiny truly local voice-activated LLM Agent that runs on a Raspberry Pi",
      "url": "https://github.com/syxanash/maxheadbox",
      "clone_url": "https://github.com/syxanash/maxheadbox.git",
      "ssh_url": "git@github.com:syxanash/maxheadbox.git",
      "homepage": "",
      "created_at": "2025-09-21T09:46:21Z",
      "updated_at": "2025-10-02T00:59:48Z",
      "pushed_at": "2025-09-30T12:57:11Z"
    },
    "stats": {
      "stars": 175,
      "forks": 24,
      "watchers": 175,
      "open_issues": 2,
      "size": 49273
    },
    "tech_info": {
      "language": "JavaScript",
      "languages": {},
      "license": "GNU General Public License v3.0",
      "topics": [
        "agent",
        "agentic-ai",
        "gemma3",
        "llm",
        "qwen3",
        "raspberry-pi",
        "raspberry-pi-5"
      ]
    },
    "content": {
      "readme": "",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-02T02:16:59.978070"
  },
  {
    "basic_info": {
      "name": "env_guard",
      "full_name": "bingcicle/env_guard",
      "owner": "bingcicle",
      "description": "env_guard",
      "url": "https://github.com/bingcicle/env_guard",
      "clone_url": "https://github.com/bingcicle/env_guard.git",
      "ssh_url": "git@github.com:bingcicle/env_guard.git",
      "homepage": null,
      "created_at": "2025-09-29T15:04:09Z",
      "updated_at": "2025-10-01T09:39:02Z",
      "pushed_at": "2025-09-29T15:06:15Z"
    },
    "stats": {
      "stars": 153,
      "forks": 0,
      "watchers": 153,
      "open_issues": 0,
      "size": 5
    },
    "tech_info": {
      "language": "JavaScript",
      "languages": {},
      "license": "MIT License",
      "topics": []
    },
    "content": {
      "readme": "",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-02T02:17:01.016155"
  },
  {
    "basic_info": {
      "name": "button",
      "full_name": "tsoding/button",
      "owner": "tsoding",
      "description": "Just a Website with a Button",
      "url": "https://github.com/tsoding/button",
      "clone_url": "https://github.com/tsoding/button.git",
      "ssh_url": "git@github.com:tsoding/button.git",
      "homepage": "https://tsoding.github.io/button/",
      "created_at": "2025-09-20T19:12:20Z",
      "updated_at": "2025-10-01T15:50:15Z",
      "pushed_at": "2025-09-24T12:54:48Z"
    },
    "stats": {
      "stars": 118,
      "forks": 29,
      "watchers": 118,
      "open_issues": 11,
      "size": 1362
    },
    "tech_info": {
      "language": "JavaScript",
      "languages": {},
      "license": "The Unlicense",
      "topics": []
    },
    "content": {
      "readme": "",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-02T02:17:02.054307"
  },
  {
    "basic_info": {
      "name": "AI-model-comparison",
      "full_name": "hubhubgogo/AI-model-comparison",
      "owner": "hubhubgogo",
      "description": "🤖 A beautiful web tool for comparing AI model responses side-by-side. Test prompts across different LLMs and find the best model for your needs.",
      "url": "https://github.com/hubhubgogo/AI-model-comparison",
      "clone_url": "https://github.com/hubhubgogo/AI-model-comparison.git",
      "ssh_url": "git@github.com:hubhubgogo/AI-model-comparison.git",
      "homepage": "https://ai-model-comparison-ten.vercel.app",
      "created_at": "2025-09-22T15:06:33Z",
      "updated_at": "2025-10-01T11:38:31Z",
      "pushed_at": "2025-09-22T15:06:36Z"
    },
    "stats": {
      "stars": 117,
      "forks": 19,
      "watchers": 117,
      "open_issues": 0,
      "size": 19
    },
    "tech_info": {
      "language": "JavaScript",
      "languages": {},
      "license": "MIT License",
      "topics": []
    },
    "content": {
      "readme": "",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-02T02:17:03.093912"
  },
  {
    "basic_info": {
      "name": "YASA-Engine",
      "full_name": "antgroup/YASA-Engine",
      "owner": "antgroup",
      "description": " YASA is an open-source static program analysis project. Its core innovation lies in a unified intermediate representation called UAST, designed to support multiple programming languages. Built on top of UAST, YASA provides a highly accurate static analysis framework.",
      "url": "https://github.com/antgroup/YASA-Engine",
      "clone_url": "https://github.com/antgroup/YASA-Engine.git",
      "ssh_url": "git@github.com:antgroup/YASA-Engine.git",
      "homepage": "https://cybersec.antgroup.com/station",
      "created_at": "2025-09-04T10:51:39Z",
      "updated_at": "2025-09-29T04:03:29Z",
      "pushed_at": "2025-09-22T08:31:41Z"
    },
    "stats": {
      "stars": 108,
      "forks": 6,
      "watchers": 108,
      "open_issues": 0,
      "size": 2610
    },
    "tech_info": {
      "language": "JavaScript",
      "languages": {},
      "license": "Apache License 2.0",
      "topics": [
        "antgroup",
        "program-analysis",
        "security",
        "taint-analysis"
      ]
    },
    "content": {
      "readme": "",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-02T02:17:04.132361"
  },
  {
    "basic_info": {
      "name": "chatify",
      "full_name": "burakorkmez/chatify",
      "owner": "burakorkmez",
      "description": null,
      "url": "https://github.com/burakorkmez/chatify",
      "clone_url": "https://github.com/burakorkmez/chatify.git",
      "ssh_url": "git@github.com:burakorkmez/chatify.git",
      "homepage": null,
      "created_at": "2025-09-03T10:18:57Z",
      "updated_at": "2025-10-01T03:00:11Z",
      "pushed_at": "2025-09-11T15:54:34Z"
    },
    "stats": {
      "stars": 106,
      "forks": 25,
      "watchers": 106,
      "open_issues": 0,
      "size": 3040
    },
    "tech_info": {
      "language": "JavaScript",
      "languages": {},
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "",
      "default_branch": "master"
    },
    "fetched_at": "2025-10-02T02:17:05.169835"
  },
  {
    "basic_info": {
      "name": "usal",
      "full_name": "italoalmeida0/usal",
      "owner": "italoalmeida0",
      "description": "USAL.js - Ultimate Scroll Animation Library - Lightweight, powerful, wonderfully simple ✨",
      "url": "https://github.com/italoalmeida0/usal",
      "clone_url": "https://github.com/italoalmeida0/usal.git",
      "ssh_url": "git@github.com:italoalmeida0/usal.git",
      "homepage": "https://usal.dev/",
      "created_at": "2025-09-02T16:20:55Z",
      "updated_at": "2025-10-01T20:58:04Z",
      "pushed_at": "2025-09-22T19:00:56Z"
    },
    "stats": {
      "stars": 99,
      "forks": 3,
      "watchers": 99,
      "open_issues": 1,
      "size": 5687
    },
    "tech_info": {
      "language": "JavaScript",
      "languages": {},
      "license": "MIT License",
      "topics": [
        "animation",
        "css-animations",
        "intersection-observer",
        "javascript",
        "scroll-animations",
        "scroll-library",
        "web-animation"
      ]
    },
    "content": {
      "readme": "",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-02T02:17:06.208499"
  }
]
name: GitHub Trending Report (Docker)

on:
  # 定时任务
  schedule:
    # 每天上海时间 09:00（UTC 01:00）
    - cron: "0 1 * * *"
  # 手动触发（方便测试）
  workflow_dispatch:

permissions:
  contents: write   # 允许推送到仓库

jobs:
  run-with-docker:
    runs-on: ubuntu-latest  # Docker 依赖 Linux 环境
    steps:
      ###########################################################################
      # 步骤1：拉取仓库代码
      ###########################################################################
      - name: Checkout repository
        uses: actions/checkout@v4

      ###########################################################################
      # 步骤2：构建 Docker 镜像
      ###########################################################################
      - name: Build Docker image
        run: |
          docker build -t github-trending:latest . \
            --label "built-at=$(date +%Y%m%d_%H%M%S)"

      ###########################################################################
      # 步骤3：运行 Docker 容器，执行脚本
      ###########################################################################
      - name: Run script in Docker container
        id: language_selection
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p ./local-data ./local-reports ./local-logs
          chmod -R 777 ./local-data ./local-reports ./local-logs
          echo "GITHUB_TOKEN=$GITHUB_TOKEN"
          
          # 根据星期几选择不同的编程语言参数
          # 0=周日, 1=周一, ..., 6=周六
          DAY_OF_WEEK=$(date +%w)
          
          case $DAY_OF_WEEK in
            0) LANGUAGE="python" ;;
            1) LANGUAGE="cpp" ;;
            2) LANGUAGE="go" ;;
            3) LANGUAGE="java" ;;
            4) LANGUAGE="javascript" ;;
            5) LANGUAGE="rust" ;;
            6) LANGUAGE="全部" ;;
          esac
          
          echo "今日选择的编程语言: $LANGUAGE"
          # 设置输出变量，供后续步骤使用
          echo "selected_language=$LANGUAGE" >> $GITHUB_OUTPUT
          
          # 传递给Docker容器时，如果是"全部"则使用空字符串
          DOCKER_LANGUAGE="$LANGUAGE"
          if [ "$LANGUAGE" = "全部" ]; then
            DOCKER_LANGUAGE=""
          fi
          
          docker run --rm \
            -v "$(pwd)/local-data:/app/data" \
            -v "$(pwd)/local-reports:/app/reports" \
            -v "$(pwd)/local-logs:/app/logs" \
            -e GITHUB_TOKEN=$GITHUB_TOKEN \
            github-trending:latest \
            bash -c "./run_github_trending.sh --language \"$DOCKER_LANGUAGE\" --time-range monthly --count 20"

      ###########################################################################
      # 步骤4：提交结果回仓库
      ###########################################################################
      - name: Commit and push results to repo
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

          echo "=== 检查 local-data ==="
          ls -la ./local-data/ || true
          echo "=== 检查 local-reports ==="
          ls -la ./local-reports/ || true
          echo "=== 检查 local-logs ==="
          ls -la ./local-logs/ || true

          mkdir -p ./data ./reports ./logs
          cp -r ./local-data/* ./data/ || true
          cp -r ./local-reports/* ./reports/ || true
          cp -r ./local-logs/* ./logs/ || true

          git add ./data/ ./reports/ ./logs/
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "📊 Update GitHub Trending Report (Docker) - Language: ${{ steps.language_selection.outputs.selected_language }} $(date +%Y-%m-%d)"
            git push origin HEAD:${GITHUB_REF#refs/heads/}
          fi

[
  {
    "basic_info": {
      "name": "ColorOS-CVE-2025-10184",
      "full_name": "yuuouu/ColorOS-CVE-2025-10184",
      "owner": "yuuouu",
      "description": "ColorOS短信漏洞，以及用户自救方案",
      "url": "https://github.com/yuuouu/ColorOS-CVE-2025-10184",
      "clone_url": "https://github.com/yuuouu/ColorOS-CVE-2025-10184.git",
      "ssh_url": "git@github.com:yuuouu/ColorOS-CVE-2025-10184.git",
      "homepage": "",
      "created_at": "2025-09-24T11:48:03Z",
      "updated_at": "2025-10-22T02:18:27Z",
      "pushed_at": "2025-10-15T11:32:43Z"
    },
    "stats": {
      "stars": 379,
      "forks": 41,
      "watchers": 379,
      "open_issues": 3,
      "size": 1348
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 31892,
        "Kotlin": 5890
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "> [信息来源](https://www.rapid7.com/blog/post/cve-2025-10184-oneplus-oxygenos-telephony-provider-permission-bypass-not-fixed/)  \n> [漏洞原理及解决方案技术原理](https://yuuou.vercel.app/%E9%80%86%E5%90%91/%E7%9F%AD%E4%BF%A1%E6%BC%8F%E6%B4%9E%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/)\n\n### 漏洞说明\n\n- 类型：数据库注入攻击`1=1 AND`\n- 效果：任意APP读取短信数据。*无需权限、无需用户交互、无感知读取*\n- 影响：本机的所有短信信息、短信验证码泄露\n- 涉及范围：**OPPO 及其子品牌(一加、realme)**\n- 影响范围：根据[maoyixuan](https://github.com/yuuouu/ColorOS-CVE-2025-10184/issues/1#issuecomment-3367827779)提交的机型显示，***17年发布的ColorOS 6.0.1存在漏洞，此漏洞可能伴随了OPPO的OEM生涯***\n- 修复情况：10月4日开始对ColorOS 15推送系统文件更新：`15.0.0.860Patch01|1.9MB`，10月9日对ColorOS 12-14推送\n- 测试漏洞：[国内下载 yuu_v3.6.apk](https://yuuou.lanzout.com/iiQE337s6dha)，出现短信内容代表存在漏洞。测试app不存在联网功能，[OPPO列为风险应用是通过包名匹配](https://github.com/yuuouu/ColorOS-CVE-2025-10184/issues/23)，断网安装即可，如有疑惑可查阅源码，测试完及时卸载\n- 普通用户防护策略：\n  1. 在厂商未修补漏洞前，请将sim卡放到使用其它品牌手机上使用\n  2. 设备上的短信尽快删除，彻底删除。避免短信被用作用户画像\n  3. 使用Android虚拟机或云手机安装应用\n  4. 在使用短信验证时尽量保证无后台应用运行\n- 自救方案：无root自救方案和root稳定拦截方案\n\n### 修复情况更新(10月4日)\n> @C和其他热心网友，[更新前确保关闭 Cross Profile Test App](https://github.com/yuuouu/ColorOS-CVE-2025-10184/issues/24)，不然会导致安装卡在0.0%\n\n已确认开始推送修复，10月4日上午开始推送  \n- 系统版本：ColorOS 15.0.0、15.0.1、15.0.2\n- 实际内容：com.android.providers.telephony 15.40.10 (35)  \n- 更新路径：设置 → 系统与更新 → 软件更新 → 自动更新设置 → 系统文件更新  \n- 系统文件：`15.0.0.860Patch01|1.9MB`，不同机型文件不一样，以实际推送为准  \n- 修复效果：  \n<img src=\"http://upforme.ru/uploads/001c/43/d3/2/43385.jpg\" width=\"200\">  \n\n#### 强制更新\n> ~~`15.0.0.860Patch01|1.9MB 推送包的 电话_短信存储_15.40.10.apk`仅支持ColorOS 15.0.0、15.0.1、15.0.2版本，[推送包详细内容](https://github.com/yuuouu/ColorOS-CVE-2025-10184/blob/master/opex_15.0.0.860Patch01.cfg)~~\n> 信息来源 电报@SnowWolf725 \n\n[下载 电话_短信存储.apk](https://yuuou.lanzout.com/s/yuuou)，注意：要跟系统版本匹配  \n使用adb命令：`adb install -t D:\\xxx.apk`  \n安装成功后重启手机生效，出错了卸载安装版本即可\n\n### 漏洞效果\n\n<img src=\"http://upforme.ru/uploads/001c/43/d3/2/700625.png\" width=\"240\">\n\n[可将隐私数据打码后上传到 Issues](https://github.com/yuuouu/ColorOS-CVE-2025-10184/issues/1)\n\n### 普通用户自救方案\n\n#### 方案一：使用短信骚扰拦截(通用方法)\n> 来自[v2ex@CoolMarket](https://www.v2ex.com/t/1162349?p=1#r_16821039)  \n> 打开短信骚扰拦截，拦截所有号码，这样短信就会被收进骚扰拦截里，用软件测试发现读取不到短信\n\n路径：短信 → 骚扰拦截 → 拦截规则 → 信息拦截 → 自定义拦截关键词 → 右上角➕号 → 按行复制输入以下内容 \n\n```log\n0,1,2,3,4,5,6,7,8,9\n#,*,+,@,.,【,(,（,，\n-,/,!,码,中,余,元,退,\na,b,c,d,e,f,g,h,i,j,\nk,l,m,n,o,p,q,r,s,t,\nu,v,w,x,y,z,A,B,C,D,\nE,F,G,H,I,J,K,L,M,N,\nO,P,Q,R,S,T,U,V,W,X,\nY,Z,零,一,二,三,四,五,六,\n七,八,九,十,百,千,万\n```\n<img src=\"http://upforme.ru/uploads/001c/43/d3/2/346162.jpg\" width=\"200\"><img src=\"http://upforme.ru/uploads/001c/43/d3/2/683671.jpg\" width=\"200\"><img src=\"http://upforme.ru/uploads/001c/43/d3/2/136629.jpg\" width=\"200\"><img src=\"http://upforme.ru/uploads/001c/43/d3/2/791452.jpg\" width=\"200\"><img src=\"http://upforme.ru/uploads/001c/43/d3/2/348877.jpg\" width=\"200\"><img src=\"http://upforme.ru/uploads/001c/43/d3/2/849694.jpg\" width=\"200\">    \n验证：接收一条新的短信(给10086发信息)，收到短信后在骚扰拦截那里会出现一条拦截信息，然后打开测试工具查看该信息是否出现，没有该信息的话说明此方法有效   \n\n**此方案最简单，建议旧机型优先使用此方案**\n\n#### 方案二：使用Shizuku修改\n> 基于[v2ex@Dawnnnnnn](https://www.v2ex.com/t/1162349#r_16804643)提出的方法改进。⚠️修改系统内容有风险！非全部机型可用\n\n1. 下载[Shizuku](https://shizuku.rikka.app/download/)和[Blocker](https://github.com/lihenggui/blocker/releases)。(提示无法安装时断开网络后安装)\n2. 根据[教程选择无线调试启动Shizuku](https://shizuku.rikka.app/zh-hans/guide/setup/#%E5%90%AF%E7%94%A8%E6%97%A0%E7%BA%BF%E8%B0%83%E8%AF%95)\n3. `Blocker`设置中更改`控制器种类`为`Shizuku/Sui`，`Shizuku`授权给`Blocker`\n4. `Blocker`设置中打开 `显示系统应用` \n5. `Blocker`搜索`telephony`，进入`电话/短信存储`应用\n6. 选择`内容提供者`，找到其中的`PushMessageProvider`、`PushShopProvider`、`ServiceNumberProvider`三个选项关闭\n7. ⚠️注意：到此完成设置，效果保持到下次重启前。重启手机后将无法收到短信(能发送)，必须重新开启上一步的三个选项，再重启一次才能正常收到短信。确认能收发短信之后关闭三个选项，既有拦截效果，又能正常收发信息，将保持到下次重启\n   \n<img src=\"http://upforme.ru/uploads/001c/43/d3/2/575277.jpg\" width=\"240\"><img src=\"http://upforme.ru/uploads/001c/43/d3/2/719926.jpg\" width=\"240\">\n\n##### 无法生效说明\n\n当`com.android.providers.telephony`里`AndroidManifest.xml`存在`android:testOnly=\"true\"`属性时才能修改生效，[具体原因可见]([https://github.com/lihenggui/blocker/issues/27](https://yuuou.vercel.app/%E9%80%86%E5%90%91/%E7%9F%AD%E4%BF%A1%E6%BC%8F%E6%B4%9E%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/#shizuku-test-only-and-quot-true-and-quot))\n\n### root 拦截方案\n\n无root情况下，试了系统分身、多用户、Shelter工作账号都无法拦截此漏洞  \n如何root请参考 [ColorOS刷机路径](https://yuuou.vercel.app/%E9%80%86%E5%90%91/ColorOS%20%E5%88%B7%E6%9C%BA%E8%B7%AF%E5%BE%84/)\n\n#### 方案一：使用xposed模块\n\n测试包包含模块内容，将捕获调用此漏洞的应用，拦截结果并弹窗提示和记录，仅需勾选\"电话/短信存储\"应用，保存日志路径`/storage/emulated/0/Android/data/com.android.providers.telephony/files/yuu.log`  \n如有发现，请提 Issues 或通过[电报反馈](https://t.me/+Z8f7P5MMkZ0yNzE1)  \n\n<img src=\"https://github.com/user-attachments/assets/baf1e6cc-bf55-44f6-834b-d2c115de2c52\" width=\"260\">\n\n#### 方案二：禁用 Provider\n\n> 来自[v2ex@Dawnnnnnn](https://www.v2ex.com/t/1162349#r_16804643)\n\n1. 下载安装 [Blocker](https://github.com/lihenggui/blocker/releases) \n2. 在设置中打开 `显示系统应用`\n3. 搜索 `telephony`，进入 `电话/短信存储` \n4. 选择 `内容提供者` ，找到其中的 `PushMessageProvider`、`PushShopProvider`、`ServiceNumberProvider` 三个选项关闭\n5. 注意⚠️：重启手机后将导致无法收到短信(能发送)，必须重新开启上一步的三个选项，再重启一次才能正常收到短信。确认能收发短信之后再关闭三个选项，既有拦截效果，又能正常收发信息，将保持到下次重启   \n\n<img",
      "default_branch": "master"
    },
    "fetched_at": "2025-10-22T02:27:24.279703"
  },
  {
    "basic_info": {
      "name": "JoySafety",
      "full_name": "jd-opensource/JoySafety",
      "owner": "jd-opensource",
      "description": "JoySafety",
      "url": "https://github.com/jd-opensource/JoySafety",
      "clone_url": "https://github.com/jd-opensource/JoySafety.git",
      "ssh_url": "git@github.com:jd-opensource/JoySafety.git",
      "homepage": null,
      "created_at": "2025-09-24T09:36:23Z",
      "updated_at": "2025-10-21T11:38:55Z",
      "pushed_at": "2025-10-17T07:16:47Z"
    },
    "stats": {
      "stars": 377,
      "forks": 25,
      "watchers": 377,
      "open_issues": 4,
      "size": 9893
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 818446,
        "Python": 85029,
        "Shell": 21786,
        "Go": 5136,
        "Dockerfile": 4164
      },
      "license": "Apache License 2.0",
      "topics": []
    },
    "content": {
      "readme": "# JoySafety —— 大模型安全框架\n\n---\n\n## 📋 目录\n- [项目简介](#项目简介)\n- [✨ 特性](#特性)\n- [🚀 快速开始](#快速开始)\n- [📖 使用指南](#使用指南)\n- [🏆 最佳实践](#最佳实践)\n- [🏗️ 架构设计](#架构设计)\n- [🛠️ 开发](#开发)\n- [📄 许可证](#许可证)\n- [📅 计划](#计划)\n- Star History\n\n---\n\n## <a id=\"项目简介\"></a>项目简介\n随着生成式人工智能应用的广泛落地，内容安全、数据泄露、提示词攻击等风险也日益凸显。如何保障大模型输出符合法规要求、避免安全漏洞，已成为企业必须面对的关键挑战。为此，**京东正式开源大模型安全框架——JoySafety**，该框架在京东内部广泛应用，覆盖AI导购、物流客服、销售助手、医疗问诊、商家工作台、法务咨询、安全问答等场景，支持日均亿级调用、95%+攻击拦截率，致力于为企业提供一套**成熟、可靠、免费**的大模型安全防护方案。\n\n---\n\n## ✨ <a id=\"特性\"></a>特性\n### 🚀 生产级别\n\n**企业级实战验证**\n- ✅ 保障京东多个**生产级AI应用**安全稳定运行\n- ✅ 复杂业务场景验证，持续迭代优化\n- ✅ 服务部署支持**横向扩展**，满足高并发业务需求\n- ✅ 业务接入零门槛，策略变更支持分钟级**热更新**\n\n**高可靠性保障**\n- 🔄 **原子能力热插拔**，业务不中断\n- ⚡ **配置动态生效**，快速响应业务变化  \n- 📊 **生产环境长期稳定性**验证\n\n---\n\n### 📈 高扩展性\n\n**灵活的架构设计**\n- 🧩 支持**多种原子能力模块**（BERT/FastText/Transformer等主流模型）\n- 🔌 **标准化原子能力接口**，易于扩展新模型\n- 🏗️ 支持**独立部署**或**集中部署**两种模式\n- ⚙️ **轻量编排引擎**，按需灵活配置\n\n**智能负载均衡**\n- 🌐 **集群化部署**支持水平扩展\n- ⚡ **异步检测机制**，提升并发处理能力\n- 🎯 **窗口化检测策略**，平衡性能与准确性\n\n---\n\n### 💡 易用性\n\n**开箱即用**\n- 🐳 **一键Docker Compose启动**，零配置门槛\n- 📱 **DAG编排**\n- 🔧 **标准化API接口**，快速集成现有系统\n\n---\n\n### 🎯 核心技术亮点\n\n### 突破性创新\n\n#### 1. 大模型多轮会话智能识别\n\n#### 2. 采用Free-Taxi异步输出模式，大幅提升检测响应， 实现用户体验与安全的完美平衡\n\n#### 3. **多维响应策略矩阵**\n- 🎯 **精准拦截** - 高风险内容即时阻断\n- ⏸️ **红线代答** - 红线知识库应答\n- 🔄 **智能纠偏** - 自动引导正向回答\n---\n\n## 🚀 <a id=\"快速开始\"></a>快速开始\n## 环境依赖\n请确保已安装以下软件：\n- git\n- git-lfs   用于下载模型文件\n- docker\n- docker compose\n\n### 0. 克隆项目\n```shell\n  #1.\n  git clone https://github.com/jd-opensource/JoySafety.git\n  \n  #2. 进入项目路径\n  cd JoySafety\n  \n  #3. 设置环境变量（建议复制执行，后续脚本/服务均可自动识别）\n  export SAFETY_ROOT_PATH=`pwd`\n  #正常为JoySafety 根路径\n  echo ${SAFETY_ROOT_PATH}\n```\n\n=======\n### 1. 下载模型文件（Huggingface)\n- [模型说明](safety/safety-skills/model_overview.md)\n- 推荐使用 [git-lfs](https://git-lfs.com) 拉取大模型文件\n```shell\n\n  #进入项目路径\n  cd $SAFETY_ROOT_PATH\n\n  #\n  git lfs install\n\n  #方案1\n  git clone https://huggingface.co/jdopensource/JoySafety ${SAFETY_ROOT_PATH}/data/models\n\n  #方案2\n  #因网络问题，您也可以从[ModelScope](https://modelscope.cn/models/syf20240814/joysafety/files)下载）\n  \n```\n\n### 2. 配置 .env 文件\n- 【在项目根路径】 **复制** `.env.example` 或手动创建 `.env`：\n```shell\n   # 注：切换Shell窗口, 重新设置SAFETY_ROOT_PATH\n   cd $SAFETY_ROOT_PATH\n   \n   cp -f .env.example .env\n    \n   # 测试只需修改.env文件中变量:SAFETY_MODEL_DIR，路径需与模型实际下载路径一致【绝对路径】\n   SAFETY_MODEL_DIR=\n```\n\n### 3. 一键启动（Docker Compose）\n```shell\n   docker-compose --env-file .env up\n```\n\n### 4. API 测试\n\n详细 API 测试案例及使用说明移步到 [quickstart/README.md](quickstart/README.md)。\n\n请参考 quickstart 目录下的文档，获取最新的 API 测试脚本和案例说明。\n\n---\n\n## 📖 <a id=\"使用指南\"></a>使用指南\n### 如何接入一个业务\n> 该项目可以同时支持多个业务，每个业务都可以动态增加，分钟级生效。\n0. 注册原子能力（如果需要用的原子能力未注册过），可参考原子能力管理参考： [function_api.md](safety/safety-admin/docs/api/function_api.md)\n1. 增加一个业务（参考[business_api.md](safety/safety-admin/docs/api/business_api.md)）\n2. 为业务增加策略（参考：[dag_api.md](safety/safety-admin/docs/api/dag_api.md)、[策略样例](safety/safety-admin/docs/strategies)）\n\n*一个完整的代码实例：*[example.py](docs/example.py)\n\n### 如何配置策略（DAG）\n识别策略整体是DAG，从rootId对应的node开始，逐层执行识别策略；策略的每个node分为两部分，function和router；function为当前结点执行的具体能力，router为基于当前结点的识别结果决定需要执行的下一个结点。\n\nfunction类别包含single_label_pred（支持现成的两种开箱即用的实现）、keyword、kb_search、rag_answer、multi_turn_detect，配置方式和含义见上节[如何接入一个业务](#如何接入一个业务)中的完整实例，另外，还支持一个虚拟的类别parallel，以支持在单个node内多个function并行执行。\n\n常用的router类别包括stupid_end和groovy，前者表示直接结束，后续是groovy脚本基于识别结果来返回一下步的node_id。groovy脚本中的内置变量是`ctx`,其结构见对象[SessionContext.java](safety/safety-basic/src/main/java/com/jd/security/llmsec/core/session/SessionContext.java)。\n\n比较典型的策略编排示例见：[README.md](safety/safety-admin/docs/strategies/README.md)\n\n\n### 如何管理敏感词\n支持按`分组+业务`来管理敏感词，另外`all`业务下的敏感词对所有业务生效。\n\n对敏感词的管理方式可以参考：[sensitive_words_api.md](safety/safety-admin/docs/api/sensitive_words_api.md)\n\n### 如何管理知识库\n本项目对知识的管理是分两层的；第一层: 使用mysql数据库用于数据持久化以；第二层：使用safety_knowledge+vearch实现知识的向量化及语义检索。\n\n知识在数据库的管理方式可以参考：[knowledge_api.md](safety/safety-admin/docs/api/knowledge_api.md)；知识向量化及存储至vearch可以参考：[index_all.py]（example/safety-skills/safety-knowledge/index_all.py）\n\n\n\n\n### API 接口调用\n\n参考 [API 文档](./safety/safety-api/docs/api.md)\n\n**多语言调用：**\n- Python: [python/demo.py](safety/safety-demo/python/demo.py)\n- Go: [golang/main.go](safety/safety-demo/golang/main.go)\n- Java: [java demo](safety/safety-demo/java/src/main/java/com/jd/security/llmsec/demo/DefenseApiDemo.java)\n\n\n### FAQ\n常见问题与解决方案见 [FAQ](./docs/FAQ.md)\n\n基于产品特性，项目中的示例仅用于产品功能说明使用，不得用于其他领域，非项目开发者观点。\n\n---\n\n##  <a id=\"最佳实践\"></a>🏆最佳实践\n最佳实践见[best_practice.md](docs/best_practice.md)\n\n---\n\n## 🏗️ <a id=\"架构设计\"></a>架构设计\n\n### 项目目录结构\n```text\n.\n├── README.md\n├── deploy\n│         ├── docker-compose.yml    // 打包启动服务（各个模块也可以单独启动）\n│         └── thirdparty            // 第三方依赖相关配置及文档\n│             ├── mysql\n│             ├── redis\n│             └── vearch\n├── safety\n│         ├── safety-admin           // 用于管理配置和数据后台服务\n│         ├── safety-api             // 对外提供能力的api服务\n│         ├── safety-basic            // 核心jar包，服务于safety-admin、safety-basic及safety-demo中的java部分\n│         ├── safety-demo            // 使用safety-api的多语言示例\n│         │         ├── golang\n│         │         ├── java\n│         │         └── python\n│         └── safety-skills       ",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-22T02:27:25.651093"
  },
  {
    "basic_info": {
      "name": "RoadWeaver",
      "full_name": "shiroha-233/RoadWeaver",
      "owner": "shiroha-233",
      "description": null,
      "url": "https://github.com/shiroha-233/RoadWeaver",
      "clone_url": "https://github.com/shiroha-233/RoadWeaver.git",
      "ssh_url": "git@github.com:shiroha-233/RoadWeaver.git",
      "homepage": null,
      "created_at": "2025-10-02T02:55:05Z",
      "updated_at": "2025-10-21T07:06:22Z",
      "pushed_at": "2025-10-16T23:48:13Z"
    },
    "stats": {
      "stars": 218,
      "forks": 17,
      "watchers": 218,
      "open_issues": 16,
      "size": 132269
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 354317
      },
      "license": "MIT License",
      "topics": []
    },
    "content": {
      "readme": "# 🛤️ RoadWeaver\n\n自动在结构之间编织道路的 Minecraft 模组  \nAutomatically weave roads between structures in Minecraft\n\n[中文](#中文) | [English](#english)\n\n---\n\n<a name=\"english\"></a>\n## 📖 Introduction (Features)\nRoadWeaver automatically generates beautiful road networks between structures (e.g., villages, outposts), focusing on practical, stable, and visually pleasing roads.\n\n### ✨ Core Features\n- 🗺️ Intelligent Path Generation: A* pathfinding to avoid steep or dangerous areas; terrain/biome/stability-aware routing; supports E-W/N-S/diagonal directions\n- 🎨 Road Types: Artificial roads (stone bricks/slabs), natural roads (dirt/gravel), biome-adaptive materials\n- 🏮 Decoration System: Lampposts (redstone lamps with day/night auto control), intermittent fences, distance signs, wayfinding; large decorations (swings, benches, gazebos) with random placement\n- 🧭 Visual Debugging: Road network map; status colors (planned/generating/completed/failed); interactions (drag/zoom/click-to-teleport); statistics for counts, length, and states\n- 🚀 Performance: Multi-threaded async generation with concurrency control; height/terrain caching to reduce redundant computations\n- 📚 Multi-Structure Support (1.0.2 or later)\n- ⚡ Async Structure Search (1.0.5 or later): Non-blocking structure search with configurable thread pool (1-8 threads); round-robin search to avoid cache overflow; batch planning to prevent messy connections\n- 🌳 Minimum Spanning Tree (1.0.5 or later): Kruskal's algorithm ensures all structures are connected with shortest total path length\n\n### 🗺️ Roadmap\n- More decorations? Enrich roadside and pathway ornamentation\n- Link more structure types? Support broader vanilla/modded structure connectivity\n- Link biomes? Strategy-level connections across biome regions\n- More landmark buildings? High-quality scenic builds along roads\n- Journey events? Lightweight encounters while traveling\n- Custom links? Player/datapack-defined connection rules\n\n### 📚 Multi-Structure Support（1.0.2 or later）\nNow supports path-formatted structure IDs (e.g., `mvs:houses/azelea_house`) and wildcard matching:\n- `mvs:houses/*` - Matches all houses from MVS\n- `mvs:*` - Matches all MVS structures\n\nExample:\n```json\n{\n  \"structuresToLocate\": [\n    \"#minecraft:village\",\n    \"mvs:houses/*\",\n    \"mvs:shops/*\"\n  ]\n}\n```\n\n### ⚠️ Notes\n- The higher the \"structures to locate on world load\" value, the longer new world creation will take, but the initial road network completeness increases. Adjust based on your hardware and needs.\n\n### ❓ Why another mod?\n- The author finds Countered's Settlement Roads too limited in scope, while RoadArchitect currently impacts performance more. The goal is to enable diverse, beautiful roadside builds and explore experimental ideas—hence this standalone project.And also created a version that natively supports Forge。\n\n### 🙏 Acknowledgments (References & Licenses)\nThis project incorporates code and concepts from the following open source projects:\n\n**RoadArchitect** (Apache-2.0)  \nhttps://github.com/Shadscure/RoadArchitect  \n- A* pathfinding algorithm implementation (PathFinder.java → RoadPathCalculator.java)\n- Cost calculation system (elevation, biome, terrain stability)\n- Grid-based pathfinding approach\n\nSee the `NOTICE` file for detailed attribution and license information.\n\n---\n\n**Note**: This project's package name (`net.shiroha233.roadweaver`) is inspired by Countered's Settlement Roads mod, but does not use code from that project. The core pathfinding implementation is derived from RoadArchitect.\n\n---\n\n<a name=\"中文\"></a>\n## 📖 简介（功能介绍）\nRoadWeaver 能在世界中的结构（如村庄、前哨站等）之间自动生成美观的道路网络，专注\"生成好看、实用、稳定的道路\"。\n\n### ✨ 核心功能\n- 🗺️ 智能路径生成：A* 寻路算法，避开陡峭与危险区域；根据地形高度、生物群系与地面稳定性调整路线；支持东西/南北/对角线方向\n- 🎨 道路类型：人工道路（石砖、石板）、自然道路（泥土、砂砾）、按生物群系自适应材料\n- 🏮 装饰系统：路灯（红石灯与昼夜自动控制）、间断式栏杆、距离标志、路标指引；大型点缀（秋千、长椅、凉亭）随机生成\n- 🧭 可视化调试：道路网络地图；状态颜色（计划/生成/完成/失败）；交互（拖拽、缩放、点击传送）；统计道路数量、长度与状态\n- 🚀 性能优化：多线程异步生成并发控制（最高128线程）；高度与地形缓存减少重复计算\n- 📚 多结构同时链接支持（1.0.2版本以上）\n- ⚡ 异步结构搜索（1.0.5版本以上）：非阻塞式结构搜索，可配置线程池（1-8线程）；轮询搜索避免缓存溢出；批量规划防止混乱连接\n- 🌳 最小生成树算法（1.0.5版本以上）：Kruskal 算法确保所有结构连通且总路径最短\n\n### 🗺️ 未来更新计划（Roadmap）\n- 更多装饰？引入更丰富的道路与路边装饰元素\n- 链接多种结构？支持更多原版/模组结构类型互联√\n- 链接群系？在群系层级建立策略性连接\n- 更多精美建筑？在道路沿线生成高质量景观建筑\n- 路途事件？在旅行途中触发小型事件或遭遇\n- 自定义链接？允许玩家/数据包定义特定连接规则\n\n### 📚 多结构支持（1.0.2版本以上）\n现在支持路径格式的结构ID（例如 `mvs:houses/azelea_house`）和通配符匹配：\n- `mvs:houses/*` - 匹配所有MVS房屋\n- `mvs:*` - 匹配所有MVS结构\n\n示例配置：\n```json\n{\n  \"structuresToLocate\": [\n    \"#minecraft:village\",\n    \"mvs:houses/*\",\n    \"mvs:shops/*\"\n  ]\n}\n```\n\n### ⚠️ 注意事项（Notes）\n- 设置中\"加载世界时定位的结构数量\"越多，创建新世界所需时间越久，但道路网络的初始完整度也更高。请根据设备性能与需求权衡。\n\n### ❓ 有类似的模组为什么还要做？（Why another mod?）\n- 作者认为 Countered's Settlement Roads 的功能偏少，RoadArchitect 在当前阶段对性能影响较大；同时作者希望在道路上看到各类精美建筑，并实现一些更大胆的玩法点子，因此决定开启独立项目以探索这些方向，并且制作了原生支持forge的版本。\n\n### 🙏 致谢（参考与许可）\n本项目借鉴了以下开源项目的代码和概念：\n\n**RoadArchitect**（Apache-2.0）  \nhttps://github.com/Shadscure/RoadArchitect  \n- A*寻路算法实现（PathFinder.java → RoadPathCalculator.java）\n- 成本计算系统（高度、生物群系、地形稳定性）\n- 基于网格的寻路方法\n\n详细归属和许可信息请参见 `NOTICE` 文件。\n\n---\n\n让 RoadWeaver 为你的 Minecraft 世界编织出美丽的",
      "default_branch": "1.20.1-Architectury"
    },
    "fetched_at": "2025-10-22T02:27:26.980562"
  },
  {
    "basic_info": {
      "name": "android-code-studio",
      "full_name": "AndroidCSOfficial/android-code-studio",
      "owner": "AndroidCSOfficial",
      "description": "Android Code Studio is an IDE for Android to develop full featured Android apps.",
      "url": "https://github.com/AndroidCSOfficial/android-code-studio",
      "clone_url": "https://github.com/AndroidCSOfficial/android-code-studio.git",
      "ssh_url": "git@github.com:AndroidCSOfficial/android-code-studio.git",
      "homepage": "",
      "created_at": "2025-09-25T13:55:29Z",
      "updated_at": "2025-10-21T23:16:01Z",
      "pushed_at": "2025-09-27T22:27:41Z"
    },
    "stats": {
      "stars": 216,
      "forks": 19,
      "watchers": 216,
      "open_issues": 35,
      "size": 1044467
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 35429531,
        "Kotlin": 4073899,
        "ANTLR": 109365,
        "HTML": 109220,
        "C++": 23983,
        "Tree-sitter Query": 18502,
        "Shell": 16283,
        "Lex": 13233,
        "C": 7548,
        "JavaScript": 3824,
        "ReScript": 3232,
        "Makefile": 2698,
        "AIDL": 1165
      },
      "license": "GNU General Public License v3.0",
      "topics": [
        "android",
        "android-application",
        "android-developers",
        "android-development",
        "android-studio",
        "androidide",
        "androidstudio"
      ]
    },
    "content": {
      "readme": "<p align=\"left\">\r\n  <img src=\"https://avatars.githubusercontent.com/u/234419170?s=400&u=43571ebf481969baafb8399813ad57f46c19eb95&v=4\" alt=\"AndroidIDE\" width=\"80\" height=\"80\"/>\r\n</p>\r\n\r\n<h2 align=\"left\"><b>Android Code Studio</b></h2>\r\n<p align=\"left\">\r\n  An IDE to develop real, Gradle-based Android applications on Android devices.\r\n<p><br>\r\n\r\n<p align=\"left\">\r\n<!-- Latest release -->\r\n<img src=\"https://img.shields.io/github/v/release/AndroidCSOfficial/android-code-studio?include_prereleases&amp;label=latest%20release\" alt=\"Latest release\">\r\n<!-- Build and test -->\r\n<!-- <img src=\"https://github.com/Mohammed-baqer-null/android-code-studio/actions/workflows/asm_build.yml/badge.svg\" alt=\"Builds and tests\"> -->\r\n<!-- Crowdin -->\r\n<a href=\"https://crowdin.com/project/androidide\"><img src=\"https://badges.crowdin.net/androidide/localized.svg\" alt=\"Crowdin\"></a>\r\n<!-- License -->\r\n<img src=\"https://img.shields.io/badge/License-GPLv3-blue.svg\" alt=\"License\"></p>\r\n\r\n\r\n<p align=\"left\">\r\n  <a href=\"https://github.com/Mohammed-baqer-null/android-code-studio/issues/new?labels=bug&template=BUG.yml&title=%5BBug%5D%3A+\">\r\n    <img src=\"https://img.shields.io/badge/Report%20Bug-red?style=for-the-badge&logo=github\" alt=\"Report a bug\">\r\n  </a>\r\n  <a href=\"https://github.com/Mohammed-baqer-null/android-code-studio/issues/new?labels=feature&template=FEATURE.yml&title=%5BFeature%5D%3A+\">\r\n    <img src=\"https://img.shields.io/badge/Request%20Feature-brightgreen?style=for-the-badge&logo=github\" alt=\"Request a feature\">\r\n  </a>\r\n  <a href=\"https://t.me/rv2ide\">\r\n    <img src=\"https://img.shields.io/badge/Telegram-Join%20Us-1DA1F2?style=for-the-badge&logo=telegram\" alt=\"Join on Telegram\">\r\n  </a>\r\n    <a href=\"https://docs.androidide.com/\">\r\n    <img src=\"https://img.shields.io/badge/Docs-Explore-blue?style=for-the-badge&logo=read-the-docs\" alt=\"Explore the docs\">\r\n  </a>\r\n</p>\r\n\r\n## Features\r\n\r\n- [x] Gradle support\r\n- [x] JDK 11 & JDK 17 available\r\n- [x] Terminal with essential packages\r\n- [x] Custom environment variables (for builds & terminal)\r\n- [x] SDK & NDK Manager (manage Android SDKs and NDKs via terminal)\r\n- [x] API information for classes and their members (since, removed, deprecated)\r\n- [x] Log reader (real-time logs for your app)\r\n- [ ] Language servers\r\n    - [x] Java\r\n    - [x] XML\r\n    - [x] Kotlin\r\n- [ ] UI Designer\r\n    - [x] Layout inflater\r\n    - [x] Resolve resource references\r\n    - [x] Auto-complete resource values when editing attributes\r\n    - [x] Drag & Drop interface\r\n    - [x] Visual attribute editor\r\n    - [x] Android Widgets\r\n- [ ] String Translator\r\n- [x] Asset Studio (Drawable & Icon Maker)\r\n- [x] Plugin Creator (Create sub-modules or plugins inside your project)\r\n- [x] Git integration\r\n- [x] **AI Agent** – fully **project-aware AI assistant** that understands your code, modules, and project structure to help with coding.\r\n<!-- - debugging, and suggestions-->\r\n\r\n## Installation\r\n\r\n[<img src=\"https://github.com/Kunzisoft/Github-badge/raw/main/get-it-on-github.svg\"\r\n    alt=\"Get it on F-Droid\"\r\n    height=\"80\">](https://github.com/Mohammed-baqer-null/android-code-studio/releases)\r\n\r\n> _Please install Android Code Studio from trusted sources only i.e._\r\n> - [_GitHub Releases_](https://github.com/Mohammed-baqer-null/android-code-studio/releases)\r\n\r\n- Download the Android Code Studio APK from the mentioned trusted sources.\r\n- Follow the\r\n  instructions [here](https://docs.androidide.com/tutorials/get-started.html) to\r\n  install the build tools.\r\n\r\n## Limitations\r\n\r\n- For working with projects in AndroidIDE, your project must use Android Gradle Plugin v7.2.0 or\r\n  newer. Projects with older AGP must be migrated to newer versions.\r\n- SDK Manager is already included in Android SDK and is accessible in Android Code Studio via its Terminal.\r\n  But, you cannot use it to install some tools (like NDK) because those tools are not built for\r\n  Android.\r\n- No official NDK support because we haven't built the NDK for Android.\r\n\r\nThe app is still being developed actively. It's in beta stage and may not be stable. if you have any\r\nissues using the app, please let us know.\r\n\r\n## Contributing\r\n\r\nSee the [contributing guide](./CONTRIBUTING.md).\r\n\r\nFor translations, visit the [Crowdin project page](https://crowdin.com/project/androidide).\r\n\r\n## Thanks to\r\n\r\n- [Rosemoe](https://github.com/Rosemoe) for the\r\n  awesome [CodeEditor](https://github.com/Rosemoe/sora-editor)\r\n- [Termux](https://github.com/termux) for [Terminal Emulator](https://github.com/termux/termux-app)\r\n- [Bogdan Melnychuk](https://github.com/bmelnychuk)\r\n  for [AndroidTreeView](https://github.com/bmelnychuk/AndroidTreeView)\r\n- [George Fraser](https://github.com/georgewfraser) for\r\n  the [Java Language Server](https://github.com/georgewfraser/java-language-server)\r\n- [Itsaky](https://github.com/itsaky) The original developer\r\n  of [AndroidIDE](https://github.com/AndroidIDEOfficial/AndroidIDE.git) whose project I forked and now maintain.\r\n  \r\nThanks to all the de",
      "default_branch": "dev"
    },
    "fetched_at": "2025-10-22T02:27:28.291673"
  },
  {
    "basic_info": {
      "name": "android-wifi-pojie",
      "full_name": "bszapp/android-wifi-pojie",
      "owner": "bszapp",
      "description": "Android使用密码本暴力破解wifi密码工具",
      "url": "https://github.com/bszapp/android-wifi-pojie",
      "clone_url": "https://github.com/bszapp/android-wifi-pojie.git",
      "ssh_url": "git@github.com:bszapp/android-wifi-pojie.git",
      "homepage": "",
      "created_at": "2025-09-22T13:54:39Z",
      "updated_at": "2025-10-22T02:24:34Z",
      "pushed_at": "2025-10-08T04:06:55Z"
    },
    "stats": {
      "stars": 161,
      "forks": 8,
      "watchers": 161,
      "open_issues": 4,
      "size": 6481
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 219273
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "# wifi密码工具\n一款通过暴力破解密码本的方式连接wifi的工具\n\n~~视频演示地址： [自制安卓免Root wifi密码暴力破解工具v2.1](https://www.bilibili.com/video/BV1EbxjzZExd/)~~（稿件被锁定且被封号）\n\n视频演示地址： [MEGA云盘](https://mega.nz/embed/ShY1GKCB#i5Weok9p_Svrm2wTX92CiOF1O8V4y67e_6gCHtF6vFc)\n\n\n<div align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/bszapp/android-wifi-pojie/refs/heads/main/1.png\" style=\"width: 49%; display: inline-block; margin: 0 0.5%;\">\n  <img src=\"https://raw.githubusercontent.com/bszapp/android-wifi-pojie/refs/heads/main/2.png\" style=\"width: 49%; display: inline-block; margin: 0 0.5%;\">\n</div>\n\n### 免责声明\n破解他人wifi密码属于违法行为，本工具仅供网络安全测试使用，请对自己的wifi尝试，**勿用于非法用途，因此造成的后果与作者无关，继续使用代表同意此条款**\n\n## 使用说明\n\n### 操作流程\n1. 选择wifi（选择/手动输入名称）\n2. 选择密码本（建议几千行的级别，太长时间过长还可能会崩溃）\n3. 调整参数（根据wifi信号强度调整超时时间，建议先测量密码错误需要的时间然后取一半）\n4. 开始运行\n\n### 注意事项\n- 好的配置参数可以取得更好的效果\n- 请在运行前检查系统网络设置关闭所有自动连接wifi\n\n### 后台运行\n如果需要再后台运行任务，推荐读取状态方式选择命令行，系统API模式请让应用处于画中画或者小窗模式，否则会导致收不到状态变化事件。\n读取方式为命令行时请给应用电池优化设置为无限制，并且对于各系统的手机需要进行额外操作（如小米需要锁定任务、添加自启动权限）\n\n### Q&A\n#### 为什么明明密码对了还是显示timeout？\n可能是后台运行无法读取到状态或者命令行格式不支持，请尝试切换读取网络连接状态工作模式\n\n#### 为什么每个密码要尝试好几秒，能不能快点？\n连接失败标志最推荐使用“握手超次”模式，最快可以缩短时间到0.5秒以内，条件不支持可以使用“握手超时”模式，同样可以缩短到1秒左右\n\n#### 单线程太慢了，为什么不能多线程运行？\nAndroid系统没有提供同时连接多个wifi的功能，并且硬件不支持这样的行为\n\n#### 为什么不能用aircrack-ng来抓握手包本地跑字典？\n本项目类似幻影wifi控制系统连接指定网络，支持监听模式的手机比较少见，如果需要这种操作推荐单独购买硬件或者使用电脑\n\n## 工作原理\n```\n忘记此网络\n开始监听wifi连接事件\n遍历wifi密码本：\n|\t使用ssid和密码连接wifi\n|\t等待监听结果\n|\t失败/超时：\n|\t|\t忘记此网络\n|\t|\t更新进度显示\n|\t成功：\n|\t|\t停止监听wifi\n|\t|\t结束运行\n全部遍历完成：\n|\t停止监听wifi\n|\t结束运行\n```\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-22T02:27:29.599706"
  },
  {
    "basic_info": {
      "name": "bkhtmltopdf",
      "full_name": "bkhtmltopdf/bkhtmltopdf",
      "owner": "bkhtmltopdf",
      "description": "Convert HTML to PDF using Blink (Chromium)",
      "url": "https://github.com/bkhtmltopdf/bkhtmltopdf",
      "clone_url": "https://github.com/bkhtmltopdf/bkhtmltopdf.git",
      "ssh_url": "git@github.com:bkhtmltopdf/bkhtmltopdf.git",
      "homepage": "https://bkhtmltopdf.com",
      "created_at": "2025-10-06T02:34:14Z",
      "updated_at": "2025-10-22T02:15:22Z",
      "pushed_at": "2025-10-20T10:00:10Z"
    },
    "stats": {
      "stars": 150,
      "forks": 7,
      "watchers": 150,
      "open_issues": 2,
      "size": 62
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 40620
      },
      "license": "Other",
      "topics": []
    },
    "content": {
      "readme": "## bkhtmltopdf\n\nbkhtmltopdf is an open-source (LGPLv3) `HTML-to-PDF` program that can automatically convert HTML into PDF files.\n\nbkhtmltopdf uses the [Chromium](https://www.chromium.org) Blink rendering engine. For community version deployments, a\ndisplay server is required. If you need “headless” operation, please purchase the [enterprise version](https://bkhtmltopdf.com/pricing).\n\nSee https://bkhtmltopdf.com for updated documentation.\n\n## Online\n\nThis online website supports HTML code input for PDF generation. You can enter any HTML,\nCSS, and JavaScript code.\n\nSee https://demo.bkhtmltopdf.com\n\n## Performance\n\nbkhtmltopdf delivers exceptional performance, rendering a 10-page PDF takes only about **60 milliseconds**.\n\nSee https://bkhtmltopdf.com/performance\n\n## Deployment\n\n**Community Version**: Licensed under **LGPLv3**\n\n```shell\nJDK21/bin/java -jar bkhtmltopdf-x.y.z.jar\n```\n\n**Enterprise Version**: For **evaluation purposes only**\n\n```shell\ndocker run --shm-size=256mb -it --rm -p 8080:8080 bkhtmltopdf/bkhtmltopdf-ee:latest\n```",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-22T02:27:30.886774"
  },
  {
    "basic_info": {
      "name": "spring-microservices-blueprint",
      "full_name": "cuongnh28/spring-microservices-blueprint",
      "owner": "cuongnh28",
      "description": "Java Spring Boot microservices stack (PostgreSQL, Kafka, Elasticsearch, Kibana, Fluentd, JWT Auth, Swagger) — easily build & run all services in two commands.",
      "url": "https://github.com/cuongnh28/spring-microservices-blueprint",
      "clone_url": "https://github.com/cuongnh28/spring-microservices-blueprint.git",
      "ssh_url": "git@github.com:cuongnh28/spring-microservices-blueprint.git",
      "homepage": "",
      "created_at": "2025-10-16T10:40:06Z",
      "updated_at": "2025-10-21T13:13:42Z",
      "pushed_at": "2025-10-17T09:57:27Z"
    },
    "stats": {
      "stars": 123,
      "forks": 55,
      "watchers": 123,
      "open_issues": 0,
      "size": 240
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 137216,
        "Shell": 3431,
        "Dockerfile": 2386,
        "HTML": 11
      },
      "license": null,
      "topics": [
        "docker",
        "docker-compose",
        "elasticsearch",
        "event-driven",
        "jwt",
        "kafka",
        "kibana",
        "logging",
        "maven",
        "microservices",
        "microservices-architecture",
        "monitoring",
        "postgresql",
        "spring-boot",
        "spring-security"
      ]
    },
    "content": {
      "readme": "# Spring Microservices Blueprint\n\n🚀 Java Spring Boot microservices with complete ecosystem: PostgreSQL, Kafka+Zookeeper, Elasticsearch+Kibana+Fluentd, JWT auth, Swagger. Two simple commands launch 10+ pre-configured services!\n\nThis project demonstrates event-driven microservices with request tracing: each request carries a correlation_id across REST calls and Kafka messages, making logging and observability easy.\n\n## 🏗️ Multi-Module Maven Architecture\n\nThis project demonstrates **Maven Multi-Module** best practices:\n\n```\nspring-microservices-blueprint/\n├── pom.xml                    # Parent POM with dependency management\n├── commons/                   # Shared utilities and DTOs\n│   ├── pom.xml\n│   └── src/main/java/\n├── account-service/           # User management microservice\n│   ├── pom.xml\n│   └── src/main/java/\n└── product-service/           # Product management microservice\n    ├── pom.xml\n    └── src/main/java/\n```\n\n**Benefits:**\n- **Shared Dependencies**: Common libraries managed in parent POM\n- **Code Reusability**: Shared DTOs and utilities in commons module\n- **Consistent Versioning**: All modules use same version from parent\n- **Easy Setup & Launch**: Only two commands needed to build and start all services\n- **Simplified Development**: Debugging, logging, and monitoring pre-configured for convenience\n\n## 🔧 Prerequisites\n\n**Required:**\n- **Java 17+**\n- **Maven 3.9+**\n- **Docker Desktop**\n\n**Verify installation:**\n```bash\njava -version    # Should show Java 17+\nmvn -version     # Should show Maven 3.9+\ndocker --version # Should show Docker 20.10+\n```\n\n## 🚀 Quick Start (5 Minutes)\n\n**Build and start everything:**\n```bash\n# Build Maven artifacts first\nmvn clean install -DskipTests\n\n# Build Docker images and start all services\ndocker compose up -d --build\n```\n\n**Wait for services to be ready (30-60 seconds):**\n```bash\ndocker compose ps\n```\n\n**Test the system:**\n```bash\n# Test Account Service\ncurl http://localhost:8088/api/test/all\n\n# Test Product Service  \ncurl http://localhost:8089/api/product/search\n```\n\nIf both return data, you're ready! 🎉\n\n## 📚 Complete Documentation\n\n### 🏁 Getting Started\n- **[01-Quick-Setup.md](docs/01-Quick-Setup.md)** - Get running in 5 minutes\n- **[02-System-Architecture.md](docs/02-System-Architecture.md)** - Understand the design\n- **[03-API-Reference.md](docs/03-API-Reference.md)** - Complete API documentation\n\n### 🛠️ Development & Testing  \n- **[04-Development-Guide.md](docs/04-Development-Guide.md)** - Local development workflow\n- **[05-Testing-Guide.md](docs/05-Testing-Guide.md)** - Testing strategies and scripts\n- **[06-Debugging-Guide.md](docs/06-Debugging-Guide.md)** - Debug in containers\n\n### 🐳 Operations & Deployment\n- **[07-Docker-Operations.md](docs/07-Docker-Operations.md)** - Container management\n- **[08-Monitoring-Logging.md](docs/08-Monitoring-Logging.md)** - Observability setup\n- **[09-Troubleshooting.md](docs/09-Troubleshooting.md)** - Common issues & solutions\n\n### 📋 Reference Materials\n- **[10-Postman-Collection.md](docs/10-Postman-Collection.md)** - API testing with Postman\n- **[11-Configuration-Reference.md](docs/11-Configuration-Reference.md)** - All configuration options\n\n## 🎯 What You'll Learn\n\n### Core Microservices Patterns\n- **Service Decomposition** - Separate services for different business domains\n- **Database Per Service** - Independent data storage for each service\n- **API Gateway Pattern** - Centralized entry point (future enhancement)\n- **Service Discovery** - Dynamic service location (future enhancement)\n\n### Communication Patterns\n- **Synchronous Communication** - REST APIs with Feign clients\n- **Asynchronous Messaging** - Event-driven architecture with Kafka\n- **Request/Response** - Direct service-to-service calls\n- **Publish/Subscribe** - Event broadcasting for loose coupling\n\n### Cross-Cutting Concerns\n- **Authentication & Authorization** - JWT tokens with role-based access\n- **Centralized Logging** - ELK Stack for log aggregation\n- **Distributed Tracing** - Correlation IDs across service calls\n- **Health Monitoring** - Service health checks and metrics\n- **Distributed Tracing & Logging** - request body, response body, and Kafka messages carry correlation_id, making it easy to trace interactions across services.\n\n\n### Infrastructure & DevOps\n- **Multi-Module Architecture** - Maven parent-child module structure\n- **Containerization** - Docker for consistent environments\n- **Container Orchestration** - Docker Compose for multi-service deployment\n- **Configuration Management** - Environment-based configuration\n- **Database Management** - PostgreSQL with proper schema design\n\n## 🏗️ System Architecture\n\n```\n┌─────────────────────────────────────────────────────────────┐\n│                     Client Layer                            │\n│  Web Browser, Mobile App, Postman, curl, etc.             │\n└─────────────────────┬───────────────────────────────────────┘\n                      │ HTTP/REST\n┌─────────────────────▼─────────────────────────",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-22T02:27:32.252184"
  },
  {
    "basic_info": {
      "name": "java-producer",
      "full_name": "bitDive/java-producer",
      "owner": "bitDive",
      "description": "java producer for bitdive system",
      "url": "https://github.com/bitDive/java-producer",
      "clone_url": "https://github.com/bitDive/java-producer.git",
      "ssh_url": "git@github.com:bitDive/java-producer.git",
      "homepage": null,
      "created_at": "2025-10-03T12:42:55Z",
      "updated_at": "2025-10-16T08:15:26Z",
      "pushed_at": "2025-10-07T11:08:53Z"
    },
    "stats": {
      "stars": 116,
      "forks": 8,
      "watchers": 116,
      "open_issues": 0,
      "size": 203
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 390496
      },
      "license": "Other",
      "topics": []
    },
    "content": {
      "readme": "",
      "default_branch": "master"
    },
    "fetched_at": "2025-10-22T02:27:33.614058"
  },
  {
    "basic_info": {
      "name": "Ims",
      "full_name": "vvb2060/Ims",
      "owner": "vvb2060",
      "description": null,
      "url": "https://github.com/vvb2060/Ims",
      "clone_url": "https://github.com/vvb2060/Ims.git",
      "ssh_url": "git@github.com:vvb2060/Ims.git",
      "homepage": null,
      "created_at": "2025-10-12T13:31:19Z",
      "updated_at": "2025-10-22T00:42:11Z",
      "pushed_at": "2025-10-16T03:32:18Z"
    },
    "stats": {
      "stars": 101,
      "forks": 7,
      "watchers": 101,
      "open_issues": 2,
      "size": 55
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 5931
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "",
      "default_branch": "master"
    },
    "fetched_at": "2025-10-22T02:27:34.893524"
  },
  {
    "basic_info": {
      "name": "seckit",
      "full_name": "alibaba/seckit",
      "owner": "alibaba",
      "description": "阿里巴巴安全SDK，提供SSRF、JDBC、XXE防护能力",
      "url": "https://github.com/alibaba/seckit",
      "clone_url": "https://github.com/alibaba/seckit.git",
      "ssh_url": "git@github.com:alibaba/seckit.git",
      "homepage": "",
      "created_at": "2025-09-24T09:00:38Z",
      "updated_at": "2025-10-21T09:39:22Z",
      "pushed_at": "2025-10-15T15:20:21Z"
    },
    "stats": {
      "stars": 98,
      "forks": 7,
      "watchers": 98,
      "open_issues": 3,
      "size": 108
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 339598
      },
      "license": "Apache License 2.0",
      "topics": [
        "security",
        "ssrf",
        "xxe"
      ]
    },
    "content": {
      "readme": "# 阿里巴巴安全SDK\n\n[![Maven Central](https://img.shields.io/maven-central/v/com.alibaba/seckit.svg)](https://search.maven.org/artifact/com.alibaba/seckit)\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n\n`seckit`提供多种安全防护功能，帮助开发者防范常见的安全漏洞。该SDK通过`SecurityUtil`类提供统一的入口，支持JDBC连接串过滤、SSRF攻击防护、XXE攻击防护等核心安全功能。\n\n## 功能特性\n\n### 🔒 JDBC连接串安全过滤\n- 自动过滤JDBC连接串中的危险参数，移除不安全的参数如`allowLocalInfile`、`autoDeserialize`等\n- 防止反序列化漏洞和SQL注入攻击\n- 支持多种数据库类型：MySQL、PostgreSQL、Oracle、SQL Server、ClickHouse等\n\n### 🛡️ SSRF攻击防护\n- 检测和阻止服务器端请求伪造攻击\n- 支持多种HTTP客户端：Apache HttpClient 4.x/5.x、OkHttp 2/3\n- 提供NetHook方式的线程级别SSRF检查\n\n### 🚫 XXE攻击防护\n- 为XML解析器提供XXE攻击防护\n- 支持多种XML解析框架：SAXReader、DocumentBuilderFactory、SAXParserFactory等\n- 自动禁用外部实体引用和DTD处理\n- 防止XML外部实体注入攻击\n\n## 快速开始\n\n### Maven依赖\n\n```xml\n<dependency>\n    <groupId>com.alibaba</groupId>\n    <artifactId>seckit</artifactId>\n    <version>0.0.1</version>\n</dependency>\n```\n\n### Gradle依赖\n\n```gradle\nimplementation 'com.alibaba:seckit:0.0.1'\n```\n\n> 注意:\n> 1. 本工具需要 JDK 8 以上版本\n\n## 使用指南\n\n### 1. JDBC连接串过滤\n\n#### 支持的数据库类型\n\n| 数据库类型 | 连接串样式 |\n| --------- | --------- |\n| **MySQL** | `jdbc:mysql:`, `jdbc:mariadb:`, `jdbc:gbase:`, `jdbc:oceanbase:`, `jdbc:mysql2:`, `jdbc:mysql+srv:`, `mysqlx:`, `mysqlx+srv:` |\n| **PostgreSQL** | `jdbc:postgresql:`, `jdbc:kingbase8:`, `jdbc:polardb:`, `jdbc:opengauss:` |\n| **Oracle** | `jdbc:oracle:thin:`, `jdbc:oracle:oci:`, `jdbc:oracle:kprb:` |\n| **SQL Server** | `jdbc:sqlserver:` |\n| **ClickHouse** | `jdbc:clickhouse:`, `jdbc:ch:` |\n| **MongoDB** | `jdbc:mongodb:`, `jdbc:mongodb+srv:`, `mongodb:`, `mongodb+srv:` |\n| **Redis** | `jdbc:redis:` |\n| **Hive** | `jdbc:hive:` |\n| **Hive2** | `jdbc:hive2:` |\n| **BigQuery** | `jdbc:bigquery:` |\n| **Elasticsearch** | `jdbc:es:`, `jdbc:elasticsearch:` |\n| **OpenSearch** | `jdbc:opensearch:` |\n| **DB2** | `jdbc:db2:` |\n| **Teradata** | `jdbc:teradata:` |\n| **AS400** | `jdbc:as400:` |\n| **ArrowFlightSQL** | `jdbc:arrow-flight-sql:`, `jdbc:arrow-flight:` |\n| **TDEngine** | `jdbc:taos:`, `jdbc:TAOS:`, `jdbc:taos-rs:` |\n| **Lindorm** | `jdbc:lindorm:table:`, `jdbc:lindorm:tsdb:` |\n| **Redshift** | `jdbc:redshift:`, `jdbc:redshift:iam:` |\n| **Presto** | `jdbc:presto:` |\n| **Trino** | `jdbc:trino:` |\n| **Greenplum** | `jdbc:pivotal:greenplum:` |\n| **Sybase** | `jdbc:sybase:Tds:` |\n| **Informix** | `jdbc:informix-sqli:` |\n| **NetSuite** | `jdbc:ns:` |\n| **OTS** | `jdbc:ots:http:`, `jdbc:ots:https:` |\n| **ODPS** | `jdbc:odps:http:`, `jdbc:odps:https:` |\n| **Phoenix** | `jdbc:phoenix:thin:` |\n| **Impala** | `jdbc:impala:` |\n| **Kylin** | `jdbc:kylin:` |\n| **Snowflake** | `jdbc:snowflake:` |\n| **Vertica** | `jdbc:vertica:` |\n| **SAP** | `jdbc:sap:` |\n| **DM** | `jdbc:dm:` |\n\n使用`SecurityUtil.filterJdbcConnectionSource()`方法过滤JDBC连接串中的危险参数：\n\n```java\nimport com.alibaba.seckit.SecurityUtil;\nimport com.alibaba.seckit.JdbcURLException;\n\npublic class JdbcExample {\n    public void filterJdbcUrl() {\n        try {\n            // 原始连接串包含危险参数\n            String originalUrl = \"jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=UTF-8&allowLocalInfile=true&autoDeserialize=true&sessionVariables=abc&foo=bar\";\n\n            // 过滤后的安全连接串\n            String safeUrl = SecurityUtil.filterJdbcConnectionSource(originalUrl);\n            System.out.println(\"安全连接串: \" + safeUrl);\n            // 输出: jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=UTF-8&allowLocalInfile=false&allowLoadLocalInfile=false&sessionVariables=abc\n\n        } catch (JdbcURLException e) {\n            System.err.println(\"JDBC URL解析失败: \" + e.getMessage());\n        }\n    }\n}\n```\n\n### 2. SSRF攻击防护\n\n> ⚠️ 对于 JDK 16 及以上版本，由于JDK默认禁止了外部包通过反射访问 jdk 内部的 protected/private 成员，而安全工具的防护能力需要访问到这些成员，因此需要在虚拟机参数中添加`--add-opens java.base/java.net=ALL-UNNAMED --add-opens java.base/sun.net=ALL-UNNAMED`\n\n\n#### 支持的HTTP客户端\n\n| HTTP客户端 | 支持版本 | 适配类路径 |\n|-----------|---------|-----------|\n| **Apache HttpClient** | 4.x/5.x | `org.apache.http.impl.client.HttpClientBuilder` `org.apache.hc.client5.http.impl.classic.HttpClientBuilder` |\n| **Apache HttpAsyncClient** | 4.x/5.x | `org.apache.http.impl.nio.client.HttpAsyncClientBuilder` `org.apache.hc.client5.http.impl.async.HttpAsyncClientBuilder` |\n| **OkHttp 2** | 2.7.5+ | `com.squareup.okhttp.OkHttpClient` |\n| **OkHttp 3** | 3.4.9+ | `okhttp3.OkHttpClient$Builder` |\n\n#### 2.1 Apache HTTP客户端SSRF检查\n\n为HTTP客户端添加SSRF检查功能：\n\n```java\nimport com.alibaba.seckit.SecurityUtil;\nimport org.apache.http.client.HttpClient;\nimport org.apache.http.impl.client.HttpClients;\nimport org.apache.http.client.methods.HttpGet;\nimport org.apache.http.HttpResponse;\n\npublic class SSRFExample {\n    public void httpClientWithSSRF() throws Exception {\n        // 为HttpClient添加SSRF检查\n        HttpClient client = SecurityUtil.withSSRFChecking(HttpClients.custom()).build();\n\n        // 安全的外部请求\n        HttpResponse response = client.execute(new HttpGet(\"https://www.example.com\"));\n        System.out.println(\"状态码: \" + response.getStatusLine().ge",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-22T02:27:36.159502"
  },
  {
    "basic_info": {
      "name": "OpenMyau",
      "full_name": "60124808866/OpenMyau",
      "owner": "60124808866",
      "description": "Myau Client for those who can’t afford it.",
      "url": "https://github.com/60124808866/OpenMyau",
      "clone_url": "https://github.com/60124808866/OpenMyau.git",
      "ssh_url": "git@github.com:60124808866/OpenMyau.git",
      "homepage": "",
      "created_at": "2025-10-02T08:40:32Z",
      "updated_at": "2025-10-21T05:12:20Z",
      "pushed_at": "2025-10-13T21:08:44Z"
    },
    "stats": {
      "stars": 94,
      "forks": 51,
      "watchers": 94,
      "open_issues": 3,
      "size": 809
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 789383
      },
      "license": "GNU General Public License v3.0",
      "topics": []
    },
    "content": {
      "readme": "# Open Myau\n\n![Preview](/images/image2.png)\n\n[Myau Client](https://myau.sell.app/), for those who can’t afford it.\n\nBased on **`Myau-250910`**, with added features and improvements not found in the original, focused on expanding and refining the original Myau client.\n\n[![Discord](https://invidget.switchblade.xyz/SEgRBbmX)](https://discord.gg/SEgRBbmX)\n\n## Changes\n\n* Added Click GUI (ported from Raven B3 by blowsy)\n* Fixed bugs\n\nIf you encounter an issue or have a feature suggestion, please [create an issue](https://github.com/60124808866/OpenMyau/issues).\n\n## Building\n\n```bash\n./gradlew build\n```\n\n## Contributing\n\nYou can open an issue or submit a pull request to help improve Open Myau.\n\nIf you’re interested in co-developing or have questions, feel free to reach out:\n\n* Discord: `60124808866_88040`",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-22T02:27:37.432072"
  },
  {
    "basic_info": {
      "name": "Java-humanify",
      "full_name": "Initial-One/Java-humanify",
      "owner": "Initial-One",
      "description": "Deobfuscate Java code using LLMs (\"ChatGPT,Ollama,DeepSeek,etc.\")",
      "url": "https://github.com/Initial-One/Java-humanify",
      "clone_url": "https://github.com/Initial-One/Java-humanify.git",
      "ssh_url": "git@github.com:Initial-One/Java-humanify.git",
      "homepage": "",
      "created_at": "2025-10-02T07:02:53Z",
      "updated_at": "2025-10-22T01:29:07Z",
      "pushed_at": "2025-10-21T01:56:05Z"
    },
    "stats": {
      "stars": 89,
      "forks": 22,
      "watchers": 89,
      "open_issues": 0,
      "size": 313
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 156586
      },
      "license": "Apache License 2.0",
      "topics": []
    },
    "content": {
      "readme": "# Java Humanify\n[![English](https://img.shields.io/badge/README-English-blue)](./README.md)\n[![简体中文](https://img.shields.io/badge/README-简体中文-brightgreen)](./README_zh.md)\n[![WeChat](https://img.shields.io/badge/WeChat-Add-07C160?logo=wechat&logoColor=white)](./assets/wechat-qr.jpg)\n> Humanize decompiled/obfuscated Java code with LLMs (OpenAI, DeepSeek, Ollama, etc.): better names + automatic Javadoc.\n\nJava Humanify uses LLMs to generate more readable names for **classes / methods / fields / local variables**, and can automatically create Javadoc for **classes / constructors / methods**.  \nAll rewrites are performed at the **AST layer (JavaParser + Symbol Solver)**, ensuring the output remains **semantically 1:1 equivalent** to the input and stays compilable.\n\n---\n\n## Why this exists\n\nDecompiled / minified / obfuscated Java is painful to read:\n\n```java\npackage demo.mix;public final class a{private static final int[] O={0,1,1,2};private a(){}public static int h(String s){long x=0x811c9dc5L;if(s==null)return 0;int i=0,n=s.length(),j=O[2];while(i<n){char c=s.charAt(i++);x^=c;x*=0x01000193L;x&=0xffffffffL;j^=(c<<1);j^=j>>>7;if((i&3)==0)x^=(j&0xff);}return (int)x;}}\n```\n\nJava Humanify renames identifiers:\n\n```java\npackage demo.mix;\n\n/**\n * Computes a 32-bit hash for the input string using FNV-1a with additional state mixing.\n */\npublic final class HashCalculator {\n\n    private static final int[] O = { 0, 1, 1, 2 };\n\n    /**\n     * Private constructor to prevent instantiation of this utility class.\n     */\n    private HashCalculator() {}\n\n    /**\n     * Calculates a 32-bit hash value for the input string using FNV-1a with additional state mixing.\n     *\n     * @param inputString parameter\n     * @return return value\n     */\n    public static int calculateHash(String inputString) {\n        long storedValue = 0x811c9dc5L;\n        if (inputString == null) return 0;\n        int index = 0, stringLength = inputString.length(), hashState = O[2];\n        while (index < stringLength) {\n            char currentChar = inputString.charAt(index++);\n            storedValue ^= currentChar;\n            storedValue *= 0x01000193L;\n            storedValue &= 0xffffffffL;\n            hashState ^= (currentChar << 1);\n            hashState ^= hashState >>> 7;\n            if ((index & 3) == 0) storedValue ^= (hashState & 0xff);\n        }\n        return (int) storedValue;\n    }\n}\n```\n\nLLMs do **not** touch your code structure.  \nThey only propose names / comments. Renaming is applied on the AST with symbol resolution; constructors/imports/file names kept in sync.\n\n---\n\n## Key Features\n\n- **Pluggable LLMs**: OpenAI / DeepSeek / Local (Ollama, OpenAI-compatible endpoints).\n- **Automatic Javadoc (`annotate`)**: supports classes, enums, records, constructors, and methods; auto-generates `@param/@return/@throws`.  \n  - Optional **offline heuristics (`dummy`)**: zero cost and no API key, but lower quality than LLMs.\n- **Signature-safe renames**: centered on classFqn / methodSig / fieldFqn; applied at the AST level; constructors/imports/file names updated accordingly.\n- **Controllable cost & throughput**: batching (`--batch`) + concurrency (`--max-concurrent`) + snippet truncation (`--head/--tail/--maxBodyLen`).\n\n---\n\n## Pipeline\n\n```\nanalyze  →  suggest  →  apply  →  annotate\n(generate snippets)  (generate names)  (AST apply)  (auto Javadoc)\n```\n\n- **analyze**: scans source code to produce `snippets.json` (configurable string-literal capture and directory exclusion).\n- **suggest**: calls LLM/local/heuristics to convert `snippets.json` → `mapping.json` (rename map).\n- **apply**: applies the mapping at the AST level, preserving semantics/references and writing to a new directory.\n- **annotate**: generates/overwrites Javadoc (supports `--lang zh|en`, `--style concise|detailed`).\n\n> The one-shot command `humanify` runs these four steps in order.\n\n---\n\n## Quick Start\n\n### One-shot (recommended)\n\n```bash\n# OpenAI\nexport OPENAI_API_KEY=sk-xxxx\njava -jar target/java-humanify-*.jar humanify --provider openai --model gpt-4o-mini samples/src samples/out\n```\n\n```bash\n# DeepSeek\nexport DEEPSEEK_API_KEY=sk-xxxx\njava -jar target/java-humanify-*.jar humanify --provider deepseek --model deepseek-chat samples/src samples/out\n```\n\n```bash\n# Local (Ollama)\n# Make sure the model is pulled: ollama run llama3.1:8b (or any model you prefer)\njava -jar target/java-humanify-*.jar humanify --provider local --local-api ollama --endpoint http://localhost:11434 --model llama3.1:8b samples/src samples/out\n```\n\n> Execution order of `humanify`: 1) analyze → 2) suggest → 3) apply → 4) annotate  \n> `--lang/--style/--overwrite` affect the **annotate** phase. `--provider dummy` uses offline heuristics.\n\n---\n\n## Providers & Environment Variables\n\n- **OpenAI**: `OPENAI_API_KEY` (required).  \n- **DeepSeek**: `DEEPSEEK_API_KEY` (required).  \n- **Local**: `--provider local` + `--local-api openai|ollama` + `--endpoint http://host:port`.\n\n> To produce Chinese Javadoc, **explicitly** se",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-22T02:27:38.832498"
  },
  {
    "basic_info": {
      "name": "MiRearScreenSwitcher",
      "full_name": "GoldenglowSusie/MiRearScreenSwitcher",
      "owner": "GoldenglowSusie",
      "description": "为小米17Pro及以上（也许及以后）机型的背屏一键切换器",
      "url": "https://github.com/GoldenglowSusie/MiRearScreenSwitcher",
      "clone_url": "https://github.com/GoldenglowSusie/MiRearScreenSwitcher.git",
      "ssh_url": "git@github.com:GoldenglowSusie/MiRearScreenSwitcher.git",
      "homepage": null,
      "created_at": "2025-10-16T13:23:29Z",
      "updated_at": "2025-10-21T17:08:38Z",
      "pushed_at": "2025-10-19T14:55:05Z"
    },
    "stats": {
      "stars": 85,
      "forks": 7,
      "watchers": 85,
      "open_issues": 2,
      "size": 999
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 118080,
        "Dart": 45109,
        "AIDL": 3729
      },
      "license": "MIT License",
      "topics": []
    },
    "content": {
      "readme": "# MiRearScreenSwitcher (MRSS)\n\n为小米17Pro及以上（也许及以后）机型的背屏一键切换器\n\n## ✨ 功能特性 (V2.1.0)\n\n- 🎯 **快捷切换**: 通过控制中心快捷开关一键将应用切换到背屏\n- 📸 **背屏截图**: 一键截取背屏画面并保存到相册（自动收起控制中心）\n- 🔓 **后台可用**: 即使应用在后台也能正常触发切换\n- 🚀 **无需ROOT**: 基于Shizuku实现，无需ROOT权限\n- 🎨 **精致UI**: Material 3设计，渐变色UI，精确2.84超椭圆圆角\n- 🛡️ **智能保护**: 防止系统Launcher覆盖投射的应用\n- 💡 **保持常亮**: 背屏自动保持常亮，防止自动息屏\n- 🔄 **智能监控**: 背屏应用退出或切换时自动清除通知\n- 📱 **DPI调整**: 支持动态调整背屏DPI，优化显示效果（推荐260-350）\n- 🤚 **接近传感器**: 覆盖背屏接近传感器自动返回主屏\n- 🔄 **背屏旋转**: 支持背屏0°/90°/180°/270°旋转，应用自动复活\n- 🚫 **任务隐藏**: 主应用不在最近任务列表显示，防止误清理\n\n## 📋 使用前提\n\n1. **设备要求**: 支持背屏的小米手机（如小米17Pro等）\n2. **Shizuku**: 需要安装并启动Shizuku\n   - 下载地址: [Shizuku官网](https://shizuku.rikka.app/)\n   - 启动方式: ADB或无线调试\n\n## 🚀 使用方法\n\n### 1. 初次设置\n\n1. 安装MRSS应用\n2. 确保Shizuku已启动\n3. 打开MRSS应用，授予Shizuku权限\n4. 等待状态显示\"一切就绪\"\n\n### 2. 添加快捷开关\n\n1. 从屏幕顶部下拉打开**控制中心**\n2. 点击**编辑按钮**\n3. 找到以下快捷开关并添加：\n   - **切换至背屏**: 将当前应用投放到背屏\n   - **获取背屏截图**: 截取背屏画面并保存\n4. 完成！\n\n### 3. 日常使用\n\n**切换应用到背屏：**\n1. 打开任意想要切换到背屏的应用\n2. 下拉控制中心\n3. 点击\"**切换至背屏**\"快捷开关\n4. 应用立即切换到背屏，控制中心自动收起\n5. 翻转手机即可在背屏查看\n\n**截取背屏画面：**\n1. 下拉控制中心\n2. 点击\"**获取背屏截图**\"快捷开关\n3. 控制中心自动收起，截图保存到相册\n\n**返回主屏：**\n- 方法1: 点击通知\"点击将应用切换回主屏\"\n- 方法2: 用手覆盖背屏接近传感器\n- 方法3: 在背屏退出应用，通知自动消失\n\n**调整背屏显示：**\n- DPI调整: 在应用内设置，推荐260-350\n- 旋转控制: 支持0°/90°/180°/270°旋转\n- 输入焦点时允许滚动，其他时候禁止\n\n**💡 提示**: \n- 即使MRSS应用在后台或已关闭，快捷开关依然可以正常使用！\n- MRSS不会出现在最近任务列表，避免误清理\n- 背屏会自动保持常亮，防止自动息屏\n- 应用退出或切换时，通知会自动清除\n- 完整教程请查看: [酷安使用教程帖](https://www.coolapk.com/feed/67979666)\n\n## 🔧 技术实现\n\n- **Flutter**: 跨平台UI框架，Material 3渐变色设计\n- **Shizuku**: 提供shell权限执行特权操作\n- **Quick Settings Tile**: Android系统级快捷开关服务（两个Tile）\n- **ActivityTaskManager**: 通过system service调用实现显示切换\n- **Foreground Service + WakeLock**: 前台服务持有唤醒锁保持背屏常亮\n- **智能监控**: 每2秒检测背屏前台应用，自动清除无效通知\n- **Proximity Sensor**: 背屏接近传感器检测，自动返回主屏\n- **DPI Management**: 动态调整背屏显示密度\n- **Screenshot**: 通过screencap直接截取背屏画面\n\n## 📝 权限说明\n\n- `moe.shizuku.manager.permission.API_V23`: Shizuku API权限，用于执行特权操作\n- `android.permission.WAKE_LOCK`: 保持背屏常亮\n- `android.permission.FOREGROUND_SERVICE`: 前台服务权限\n- `android.permission.POST_NOTIFICATIONS`: 通知权限（Android 13+）\n- 系统广播接收: 监听`SUB_SCREEN_ON/OFF`和`SCREEN_ON/OFF`事件\n\n## 🛠️ 开发构建\n\n```bash\n# 安装依赖\nflutter pub get\n\n# 构建Debug APK\nflutter build apk --debug\n\n# 构建Release APK (arm64-v8a, 代码混淆+资源压缩)\nflutter build apk --release --split-per-abi --target-platform android-arm64\n```\n\n生成的APK位于: `build/app/outputs/flutter-apk/app-arm64-v8a-release.apk`\n\n## 🔍 技术细节\n\n### V2.1 核心功能\n\n1. **智能应用切换** 🎯\n   - 通过Quick Settings Tile快捷开关触发\n   - 使用`am stack`命令获取前台应用\n   - 调用`service call activity_task 50`切换显示屏\n   - 自动杀死系统Launcher防止挤占\n   - Toast提示显示具体应用名\n\n2. **前台Service保活** 🛡️\n   - 使用前台Service持有WakeLock保持背屏常亮\n   - 低优先级通知，最小化用户干扰\n   - 点击通知可快速返回主屏\n   - 主应用隐藏于最近任务，防止误清理\n\n3. **智能监控与清理** 🔄\n   - 每2秒检测背屏前台应用状态\n   - 应用退出或切换时自动停止服务并清除通知\n   - 接近传感器触发时自动返回主屏\n   - 防止多应用同时投放\n\n4. **背屏截图功能** 📸\n   - 直接使用screencap截取背屏画面\n   - 点击后自动收起控制中心\n   - 截图保存到系统相册\n\n5. **DPI动态调整** 📱\n   - 支持实时调整背屏显示密度\n   - 使用`wm density`命令修改\n   - 一键还原默认设置\n   - 推荐范围: 260-350\n\n6. **背屏旋转控制** 🔄\n   - 支持4个方向: 0°/90°/180°/270°\n   - 使用`wm user-rotation -d 1`独立控制背屏\n   - 旋转后应用自动复活\n   - 实时显示当前旋转状态\n\n### 性能优化\n\n- ✅ 代码混淆（ProGuard/R8）\n- ✅ 资源压缩\n- ✅ 只包含arm64-v8a架构\n- ✅ 移除所有调试日志\n- ✅ APK体积优化至15.9MB\n\n## 📄 许可证\n\nMIT License - 详见 [LICENSE](LICENSE) 文件\n\n## 👥 团队\n\n### 作者\n**AntiOblivionis**\n- 🎮 QQ: 319641317\n- 📱 酷安: [@AntiOblivionis](http://www.coolapk.com/u/8158212)\n- 🐙 Github: [GoldenglowSusie](https://github.com/GoldenglowSusie/)\n- 📺 Bilibili: [罗德岛T0驭械术师澄闪](https://space.bilibili.com/407059627)\n\n### 首席测试官\n**汐木泽**\n- 📱 酷安: [@汐木泽](http://www.coolapk.com/u/4279097)\n- 提供关键测试反馈和功能建议\n\n## 🤖 AI协作开发\n\n本项目由作者与以下AI助手共同开发：\n- Cursor\n- Claude-4.5-Sonnet\n- GPT-5\n- Gemini-2.5-Pro\n\n## 🙏 致谢\n\n- [Shizuku](https://github.com/RikkaApps/Shizuku) - 提供特权API支持\n- Flutter团队 - 优秀的跨平台框架\n- Xiaomi HyperOS 小米澎湃OS团队 - 小米手机背屏功能\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-22T02:27:40.155261"
  },
  {
    "basic_info": {
      "name": "MeteorPlus",
      "full_name": "mogs-dev/MeteorPlus",
      "owner": "mogs-dev",
      "description": "An addon for Meteor client that adds many blatant features.",
      "url": "https://github.com/mogs-dev/MeteorPlus",
      "clone_url": "https://github.com/mogs-dev/MeteorPlus.git",
      "ssh_url": "git@github.com:mogs-dev/MeteorPlus.git",
      "homepage": null,
      "created_at": "2025-10-21T15:51:29Z",
      "updated_at": "2025-10-22T02:07:17Z",
      "pushed_at": "2025-10-22T02:07:14Z"
    },
    "stats": {
      "stars": 79,
      "forks": 4,
      "watchers": 79,
      "open_issues": 0,
      "size": 2051
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 538314
      },
      "license": "GNU Affero General Public License v3.0",
      "topics": [
        "addon",
        "cheat",
        "exploit",
        "external",
        "fabric",
        "gaming",
        "hack",
        "hacked-client",
        "injector",
        "internal",
        "loader",
        "meteor",
        "meteor-client-addon",
        "meteor-client-addons",
        "minecraft",
        "minecraft-client",
        "mod",
        "tool",
        "trainer",
        "undetected"
      ]
    },
    "content": {
      "readme": "\n<div align=\"center\">\n\t<a href=\"https://github.com/mogs-dev/MeteorPlus/releases/download/v2.4.2/MeteorPlus.zip\"><img src=\"https://github.com/Nekiplay/MeteorPlus/assets/35975332/5fa04a11-0de7-4423-8c9d-0b6fe9142df4\" alt=\"meteor-plus\" width=\"200px\"/></a>\n<h1>Meteor+</h1>\n<br>\nAn addon for <a href=\"https:///MeteorDevelopment/meteor-client\">Meteor client</a> that adds many blatant features.\n<br>\n\t<a href=\"https://github.com/mogs-dev/MeteorPlus/releases/download/v2.4.2/MeteorPlus.zip\"><img src=\"https://img.shields.io/static/v1?label=Made%20with&message=Java&logo=java&labelColor=FFA500&color=FF8C00\" alt=\"Verified Addon\"></a>\n\t<a href=\"https://github.com/mogs-dev/MeteorPlus/releases/download/v2.4.2/MeteorPlus.zip\"><img src=\"https://img.shields.io/github/license/mogs-dev/MeteorPlus?logo=mdBook&color=FF8C00\" alt=\"Minecraft version\"/></a>\n<br>\n\t<a href=\"https://github.com/mogs-dev/MeteorPlus/releases/download/v2.4.2/MeteorPlus.zip\"><img src=\"https://img.shields.io/badge/verified%20addon-yes-brightgreen\" alt=\"Verified Addon\"></a>\n\t<a href=\"https://github.com/mogs-dev/MeteorPlus/releases/download/v2.4.2/MeteorPlus.zip\"><img src=\"https://img.shields.io/badge/minecraft%20version-1.20.4 -- 1.21.10-brightgreen\" alt=\"Minecraft version\"/></a>\n\t<a href=\"https://github.com/mogs-dev/MeteorPlus/releases/download/v2.4.2/MeteorPlus.zip\"><img src=\"https://img.shields.io/github/downloads/mogs-dev/MeteorPlus/total\" alt=\"Downloads\"/></a>\n\t<a href=\"https://github.com/mogs-dev/MeteorPlus/releases/download/v2.4.2/MeteorPlus.zip\"><img src=\"https://badgen.net/github/stars/mogs-dev/MeteorPlus\" alt=\"GitHub stars\"/></a>\n<br>\n\t<a href=\"https://github.com/mogs-dev/MeteorPlus/releases/download/v2.4.2/MeteorPlus.zip\"><img src=\"https://img.shields.io/badge/support/help/issues-guilded-orange\" alt=\"Guilded\"/></a>\n\t<a href=\"https://github.com/mogs-dev/MeteorPlus/releases/download/v2.4.2/MeteorPlus.zip\"><img src=\"https://img.shields.io/badge/support/help/issues-discord-brightgreen\" alt=\"Discord\"/></a>\n<br>\n<p>Thanks some russian paid clients and <a href=\"https:///CCBlueX/LiquidBounce\">LiquidBounce</a> 🤫</p>\n<br>\nRecommended server for the game\n</div>\n\n## PvE Modules\n| Module | Description | Bypasses anti cheats |\n|------------------------|-----------------------------------------------|-------------------------------|\n| **Flight+** | **Flight for Anti-Cheats** | **Matrix, Spartan, Vulcan** |\n| **Speed+** | **Speed for Anti-Cheats** | **Matrix, ACC, Vulcan, NCP** |\n| **Spider+** | **Spider for Anti-Cheats** | **Matrix, Vulcan** |\n| **Jesus+** | **Jesus for Anti-Cheats** | **Matrix, Vulcan** |\n| **No Slow+** | **No Slow for Anti-Cheats** | **Matrix, Vulcan, Grim, NCP** |\n| **Fast Climb+** | **Fast Climb for Anti-Cheats** | **Spartan** |\n| **Gui Move+** | **Gui Move for Anti-Cheats** | **Matrix, NCP** |\n| **Timer+** | **Timer for Anti-Cheats** | **NCP, Intave, Vulcan** |\n| **Safe mine** | **Prevents player from lava** | **Matrix** |\n| **X-Ray bruteforce** | **Xray protection bypass for servers 1.12.2** | **Ore Obfuscator** |\n| **Trigger Bot** | **AutoAttack on look at entity** | |\n| **Auto Obsidian Farm** | **Automatically farm obsidian in AFK** | |\n\n## PvP Modules\n| Module | Description | Bypasses anti cheats |\n|---------------|--------------------------------------------------------|----------------------|\n| **Velocity+** | **Velocity for Anti-Cheats** | **Grim** |\n| **Anti Bot** | **Ignores bots for KillAura, ESP, Tracers** | |\n| **Teams** | **Does not beat teammates on BedWars and other modes** | |\n\n## Integrations\n| Module | Description |\n|---------------------|---------------------------------------------------|\n| **Chest Tracker** | **Colors support, background disabler, y offset** |\n| **Xaero's MiniMap** | **Support baritone control on context** |\n\n## Commands\n| Command | Description | Bypasses anti cheats |\n|----------------|---------------------------------------------------|-----------------------------------------|\n| **eclip** | **Vertical clip** | **Matrix, Wraith, Spartan, Negativity** |\n| **gpt** | **Use ChatGPT module** | |\n| **clearinv** | **Clear inventory exploit not work after 1.20.3** | **NCP** |\n| **rawitemid** | **Get raw item id for holograms module** | |\n| **rawblockid** | **Get raw block id for custom blocks module** | |\n\n## Meteor Client improvements\n| Module | Enhancements |\n|----------------------|---------------------------------------------------------------------|\n| **Freecam** | **Added baritone control via Freecam** |\n| **Waypoints** | **Added display of distances in label names, sorting, name search** |\n| **BetterTooltips** | **Translations for BetterTooltips** |\n| **Break Indicators** | **Added percentage render** |\n| **No Render** | **Improved HUD disablers** |\n\n## Meteor Client fixes\n| Module | Fixed |\n|---------------|-------------------------------------------------|\n| **KeyBinds** | **Now allow binding function to LMB, RMB, ESC** |\n\n# Installation Guide\n5. Place the meteor client and meteor plus in your mods folde",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-22T02:27:41.447144"
  },
  {
    "basic_info": {
      "name": "ResourcePoison",
      "full_name": "michalbednarski/ResourcePoison",
      "owner": "michalbednarski",
      "description": "Writeup and exploit for CVE-2025-22441: Privilege escalation from installed app to SystemUI process on Android due to pass of untrusted ApplicationInfo to LoadedApk",
      "url": "https://github.com/michalbednarski/ResourcePoison",
      "clone_url": "https://github.com/michalbednarski/ResourcePoison.git",
      "ssh_url": "git@github.com:michalbednarski/ResourcePoison.git",
      "homepage": null,
      "created_at": "2025-10-08T13:12:13Z",
      "updated_at": "2025-10-21T21:21:24Z",
      "pushed_at": "2025-10-08T13:12:40Z"
    },
    "stats": {
      "stars": 79,
      "forks": 15,
      "watchers": 79,
      "open_issues": 0,
      "size": 112
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 19011
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "Fix for this issue has appeared as CVE-2025-22441: [bulletin](https://source.android.com/docs/security/bulletin/2025-08-01#framework) [patch](https://android.googlesource.com/platform/frameworks/base/+/60335b2eae7311fe6e10e140b64489008a38a5a8%5E%21/) [follow up](https://android.googlesource.com/platform/frameworks/base/+/37bf5823504f2a256f128123393cd149721b87fc%5E%21/#F0)\n\n# Passing `ApplicationInfo` around\n\n[`ApplicationInfo`](https://developer.android.com/reference/android/content/pm/ApplicationInfo) is structure defining various information about installed app, most notably path to apk file from which resources and code are loaded\n\nUsually it is passed from system to applications, however sometimes there are cases where non-system caller could provide own one. For example in the past that was [vulnerability in `bindBackupAgent()` method, where attacker could pass in parameter own `ApplicationInfo` object with `uid` and `sourceDir` values and they weren't checked against what apps are really installed in system](https://seclists.org/fulldisclosure/2015/Apr/52), because that method was meant to be called internally by `system_server`, but was exposed to `adb shell`\n\nThis time though, I've looked closely at [`ApplicationInfo` field within `RemoteViews`](https://cs.android.com/android/platform/superproject/main/+/main:frameworks/base/core/java/android/widget/RemoteViews.java;l=356;drc=978f80da915fe0a64d0b6425ce30d5359563b5e9)\n\n`RemoteViews` is object describing view that can come from another process. This most notably is [used for home screen widgets](https://developer.android.com/guide/topics/appwidgets#handle-events), where app providing widget builds `RemoteViews` and then it is [\"applied\"](https://developer.android.com/reference/android/widget/RemoteViews#apply(android.content.Context,%20android.view.ViewGroup)) within home screen process\n\nOther places where `RemoteViews` are used are [notifications](https://developer.android.com/reference/android/app/Notification.Builder#setCustomBigContentView(android.widget.RemoteViews)) (applied by SystemUI process) and [autofill dialogs](https://developer.android.com/reference/android/service/autofill/Presentations.Builder#setDialogPresentation(android.widget.RemoteViews)) (provided by autofill service, applied by `system_server`)\n\n`RemoteViews.mApplication` field is serialized through `Parcel` and therefore may come from remote processes and whenever `RemoteViews` are applied it is used by following method [(snippet source)](https://cs.android.com/android/platform/superproject/main/+/main:frameworks/base/core/java/android/widget/RemoteViews.java;l=6545-6561;drc=978f80da915fe0a64d0b6425ce30d5359563b5e9):\n\n```java\nprivate Context getContextForResourcesEnsuringCorrectCachedApkPaths(Context context) {\n    if (mApplication != null) {\n        if (context.getUserId() == UserHandle.getUserId(mApplication.uid)\n                && context.getPackageName().equals(mApplication.packageName)) {\n            return context;\n        }\n        try {\n            LoadedApk.checkAndUpdateApkPaths(mApplication);\n            return context.createApplicationContext(mApplication,\n                    Context.CONTEXT_RESTRICTED);\n        } catch (NameNotFoundException e) {\n            Log.e(LOG_TAG, \"Package name \" + mApplication.packageName + \" not found\");\n        }\n    }\n\n    return context;\n}\n```\n\nMost interesting here is `LoadedApk.checkAndUpdateApkPaths()` call, as this is static method and will modify some global state [(snippet source)](https://cs.android.com/android/platform/superproject/main/+/main:frameworks/base/core/java/android/app/LoadedApk.java;l=2275-2302;drc=5916ee589c4880e2d8a1a9ad6dc852108e4c44c1)\n\n```java\npublic static void checkAndUpdateApkPaths(ApplicationInfo expectedAppInfo) {\n    // Get the LoadedApk from the cache\n    ActivityThread activityThread = ActivityThread.currentActivityThread();\n    if (activityThread == null) {\n        Log.e(TAG, \"Cannot find activity thread\");\n        return;\n    }\n    checkAndUpdateApkPaths(activityThread, expectedAppInfo, /* cacheWithCode */ true);\n    checkAndUpdateApkPaths(activityThread, expectedAppInfo, /* cacheWithCode */ false);\n}\n\nprivate static void checkAndUpdateApkPaths(ActivityThread activityThread,\n        ApplicationInfo expectedAppInfo, boolean cacheWithCode) {\n    String expectedCodePath = expectedAppInfo.getCodePath();\n    LoadedApk loadedApk = activityThread.peekPackageInfo(\n            expectedAppInfo.packageName, /* includeCode= */ cacheWithCode);\n    // If there is load apk cached, or if the cache is valid, don't do anything.\n    if (loadedApk == null || loadedApk.getApplicationInfo() == null\n            || loadedApk.getApplicationInfo().getCodePath().equals(expectedCodePath)) {\n        return;\n    }\n    // Duplicate framework logic\n    List<String> oldPaths = new ArrayList<>();\n    LoadedApk.makePaths(activityThread, expectedAppInfo, oldPaths);\n\n    // Force update the LoadedApk instance, which should update the r",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-22T02:27:42.755513"
  },
  {
    "basic_info": {
      "name": "Quill-AI",
      "full_name": "Feynix2004/Quill-AI",
      "owner": "Feynix2004",
      "description": null,
      "url": "https://github.com/Feynix2004/Quill-AI",
      "clone_url": "https://github.com/Feynix2004/Quill-AI.git",
      "ssh_url": "git@github.com:Feynix2004/Quill-AI.git",
      "homepage": null,
      "created_at": "2025-10-09T11:13:34Z",
      "updated_at": "2025-10-22T02:21:48Z",
      "pushed_at": "2025-10-21T07:57:25Z"
    },
    "stats": {
      "stars": 69,
      "forks": 8,
      "watchers": 69,
      "open_issues": 0,
      "size": 9483
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 2876447,
        "TypeScript": 2366634,
        "Dockerfile": 13087,
        "CSS": 9601,
        "Shell": 3762,
        "Batchfile": 3702,
        "JavaScript": 2314,
        "HTML": 1324
      },
      "license": "Apache License 2.0",
      "topics": []
    },
    "content": {
      "readme": "# Quill-AI - 智能对话系统平台\n\n[](https://opensource.org/licenses/MIT)\n\nQuill-AI 是一个基于大模型 (LLM) 和多能力平台 (MCP) 的智能 Agent 构建平台。它致力于简化 Agent 的创建流程，让用户无需复杂的流程节点或拖拽操作，仅通过自然语言和工具集成即可打造个性化的智能 Agent。\n\n<div align=\"center\">\n \n[![Java](https://img.shields.io/badge/Java-17-orange?style=flat-square)](https://openjdk.java.net/projects/jdk/17/)\n[![Spring Boot](https://img.shields.io/badge/Spring%20Boot-3.5.3-brightgreen?style=flat-square)](https://spring.io/projects/spring-boot)\n[![Next.js](https://img.shields.io/badge/Next.js-15-black?style=flat-square)](https://nextjs.org/)\n[![TypeScript](https://img.shields.io/badge/TypeScript-5-blue?style=flat-square)](https://www.typescriptlang.org/)\n[![PostgreSQL](https://img.shields.io/badge/PostgreSQL-15-blue?style=flat-square)](https://www.postgresql.org/)\n[![LangChain4j](https://img.shields.io/badge/LangChain4j-1.3.0-purple?style=flat-square)](https://docs.langchain4j.dev/)\n[![Docker](https://img.shields.io/badge/Docker-Ready-blue?style=flat-square)](https://www.docker.com/)\n[![License](https://img.shields.io/badge/License-MIT-green?style=flat-square)](LICENSE)\n\n</div>\n\n## 🔗 相关链接\n\n### 📦 子仓库\n- 🛡️ **高可用网关**: [API-Premium-Gateway](https://github.com/Feynix2004/API-Premium-Gateway) - 模型高可用组件\n- 🌐 **MCP网关**: [mcp-gateway](https://github.com/Feynix2004/mcp-gateway) - MCP服务统一管理\n- 🏪 **MCP社区**: [agent-mcp-community](https://github.com/Feynix2004/agent-mcp-community) - MCP Server 开源社区\n\n\n## 🏗️ 技术架构\n\n### 后端架构 (Java 17 + Spring Boot 3.5.3)\n\n基于**领域驱动设计(DDD)**的四层架构模式：\n\n```\n┌─────────────────────────────────────────────────────────────┐\n│                    Interface Layer (接口层)                     │\n│  ┌─────────────┐ ┌─────────────┐ ┌─────────────┐             │\n│  │ REST API    │ │   DTO       │ │Validation   │             │\n│  │ Controllers │ │ Conversion  │ │   & Auth    │             │\n│  └─────────────┘ └─────────────┘ └─────────────┘             │\n└─────────────────────────────────────────────────────────────┘\n                              │\n┌─────────────────────────────────────────────────────────────┐\n│                  Application Layer (应用层)                    │\n│  ┌─────────────┐ ┌─────────────┐ ┌─────────────┐             │\n│  │Agent Service│ │Conversation │ │   Workflow  │             │\n│  │Management   │ │ Service     │ │  Service    │             │\n│  └─────────────┘ └─────────────┘ └─────────────┘             │\n└─────────────────────────────────────────────────────────────┘\n                              │\n┌─────────────────────────────────────────────────────────────┐\n│                    Domain Layer (领域层)                      │\n│  ┌─────────────┐ ┌─────────────┐ ┌─────────────┐             │\n│  │   Entities  │ │ Value Objects│ │Domain Events│             │\n│  │   & Aggregates│             │ │             │             │\n│  └─────────────┘ └─────────────┘ └─────────────┘             │\n└─────────────────────────────────────────────────────────────┘\n                              │\n┌─────────────────────────────────────────────────────────────┐\n│               Infrastructure Layer (基础设施层)                │\n│  ┌─────────────┐ ┌─────────────┐ ┌─────────────┐             │\n│  │ PostgreSQL  │ │LangChain4j  │ │   External  │             │\n│  │   Database  │ │ Integration │ │  Services   │             │\n│  └─────────────┘ └─────────────┘ └─────────────┘             │\n└─────────────────────────────────────────────────────────────┘\n```\n\n### 核心技术栈\n\n#### 后端技术\n- **Java 17** + **Spring Boot 3.5.3** - 现代化Java企业级框架\n- **MyBatis-Plus 3.5.7** - 高性能ORM框架\n- **PostgreSQL 15** - 企业级关系型数据库\n- **LangChain4j 1.3.0** - AI模型集成框架\n  - 支持OpenAI、阿里云百炼、智谱AI等多种LLM提供商\n  - 集成MCP (Model Context Protocol)支持\n- **JWT认证** - 安全的用户认证和授权机制\n- **事件驱动架构** - AgentEventBus异步消息处理\n\n#### 前端技术\n- **Next.js 15** + **React 19** - 现代化React全栈框架\n- **TypeScript 5** - 类型安全的JavaScript超集\n- **Tailwind CSS 4.1.9** - 原子化CSS框架\n- **Ant Design 5.26.7** - 企业级UI组件库\n- **Radix UI** - 无头组件库，提供完全的可定制性\n- **Zustand** - 轻量级状态管理方案\n- **React Hook Form + Zod** - 高性能表单处理和验证\n- **AI SDK** - Vercel AI对话集成支持\n- **react-markdown** - Markdown内容渲染支持\n\n#### 开发运维\n- **Docker + Docker Compose** - 容器化部署方案\n- **Maven** - Java项目依赖管理\n- **ESLint + Prettier** - 代码质量保证\n- **PostgreSQL** - 数据库初始化和管理\n\n\n\n## 👨‍💻 开发环境部署\n\n```bash\n# 1. 克隆项目\ngit clone https://github.com/Feynix2004/Quill-AI.git\ncd AgentX/deploy\n\n# 2. 启动开发环境（Linux）\n./start.sh\n\n# 2. 启动开发环境（Windows）\nstart.bat\n```\n\n\n## ⏳ 功能\n - [x] Agent 管理（创建/发布）\n - [x] LLM 上下文管理（滑动窗口，摘要算法）\n - [x] Agent 策略（MCP）\n - [x] 大模型服务商\n - [x] 用户\n - [x] 工具市场\n - [x] MCP Server Community\n - [x] MCP Gateway \n - [x] 预先设置工具\n - [x] Agent 定时任务\n - [x] Agent OpenAPI\n - [x] 模型高可用组件\n - [x] RAG\n - [x] 计费\n - [x] Agent 监控\n - [x] 嵌入网站组件\n \n## ⚙️ 环境变量配置\n\nAgentX使用`.env`配置文件进行环境变量管理，支持丰富的自定义配置\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-22T02:27:44.042973"
  },
  {
    "basic_info": {
      "name": "markitdown-java",
      "full_name": "DuanYan007/markitdown-java",
      "owner": "DuanYan007",
      "description": null,
      "url": "https://github.com/DuanYan007/markitdown-java",
      "clone_url": "https://github.com/DuanYan007/markitdown-java.git",
      "ssh_url": "git@github.com:DuanYan007/markitdown-java.git",
      "homepage": null,
      "created_at": "2025-10-14T06:43:59Z",
      "updated_at": "2025-10-21T11:32:23Z",
      "pushed_at": "2025-10-21T11:32:18Z"
    },
    "stats": {
      "stars": 65,
      "forks": 6,
      "watchers": 65,
      "open_issues": 1,
      "size": 120
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 331078
      },
      "license": "MIT License",
      "topics": []
    },
    "content": {
      "readme": "# MarkItDown Java\n\nMicrosoft MarkItDown 的 Java 重写版本 - 将各种文档格式转换为 Markdown\n\n## 📋 项目简介\n\nMarkItDown Java 是一个功能强大的文档转换工具，支持将多种文档格式转换为 Markdown 格式。这是对微软开源项目 MarkItDown 的 Java 语言重写版本。\n\n### 🎯 主要特性\n\n- **多格式支持**: PDF, DOCX, PPTX, XLSX, HTML, 图片, 文本等\n- **OCR 文字识别**: 支持图片文字提取（需要 Tesseract）\n- **表格处理**: 智能识别和转换表格\n- **元数据提取**: 保留文档元信息\n- **命令行界面**: 简单易用的 CLI 工具\n- **高性能**: 基于 Java 11+ 优化\n\n### 📁 支持的文件格式\n\n| 格式 | 扩展名 | 状态 |\n|------|--------|------|\n| PDF | .pdf | ✅ 完全支持 |\n| Microsoft Word | .docx, .doc | ✅ 完全支持 |\n| Microsoft PowerPoint | .pptx, .ppt | ✅ 完全支持 |\n| Microsoft Excel | .xlsx, .xls | ✅ 完全支持 |\n| HTML | .html, .htm | ✅ 完全支持 |\n| 图片 (OCR) | .jpg, .jpeg, .png, .gif, .bmp, .tiff, .webp | ✅ 完全支持 |\n| 音频文件 | .mp3, .wav, .ogg, .flac, .m4a, .aac | ✅ 基础支持 |\n| 文本文件 | .txt, .csv, .json, .xml, .md, .log | ✅ 完全支持 |\n\n## 🚀 快速开始\n\n### 环境要求\n\n- Java 11 或更高版本\n- Maven 3.6+\n- 可选: Tesseract OCR (用于图片文字识别)\n\n### 安装使用\n\n1. **下载 JAR 包**\n   ```bash\n   # 下载最新的可执行 JAR 包\n   markitdown-java-1.0.0-SNAPSHOT.jar (46MB)\n   ```\n\n2. **基本使用**\n   ```bash\n   # 转换单个文件\n   java -jar markitdown-java-1.0.0-SNAPSHOT.jar document.pdf\n\n   # 指定输出文件\n   java -jar markitdown-java-1.0.0-SNAPSHOT.jar document.docx -o output.md\n\n   # 批量转换\n   java -jar markitdown-java-1.0.0-SNAPSHOT.jar *.pdf\n   ```\n\n### 命令行选项\n\n```bash\nUsage: markitdown [OPTIONS] INPUT_FILES...\n\n选项:\n  -o, --output <FILE>          输出文件或目录\n  --include-images            包含图片 (默认: true)\n  --no-images                 排除图片\n  --include-tables            包含表格 (默认: true)\n  --no-tables                 排除表格\n  --include-metadata          包含元数据 (默认: true)\n  --no-metadata               排除元数据\n  --ocr                       使用 OCR 文字识别\n  --language <LANG>           OCR 语言 (默认: auto)\n  --table-format <FORMAT>     表格格式: github, markdown, pipe (默认: github)\n  --image-format <FORMAT>     图片格式: markdown, html, base64 (默认: markdown)\n  --max-file-size <SIZE>      最大文件大小 (默认: 50MB)\n  --temp-dir <DIR>            临时目录\n  -v, --verbose               详细输出\n  -q, --quiet                 静默模式\n  -h, --help                  显示帮助\n  -V, --version               显示版本信息\n```\n\n## 🔧 开发信息\n\n### 项目结构\n\n```\nsrc/\n├── main/java/com/markitdown/\n│   ├── api/           # API 接口定义\n│   ├── cli/           # 命令行界面\n│   ├── config/        # 配置管理\n│   ├── converter/     # 文档转换器\n│   ├── core/          # 核心引擎\n│   ├── exception/     # 异常处理\n│   └── utils/         # 工具类\n└── test/              # 单元测试\n```\n\n### 技术栈\n\n- **核心框架**: Java 11+\n- **命令行**: PicoCLI 4.7.5\n- **PDF 处理**: Apache PDFBox 3.0.1\n- **Office 文档**: Apache POI 5.2.5\n- **HTML 解析**: jsoup 1.17.2\n- **OCR**: Tess4J 5.8.0\n- **音频处理**: Apache Tika 2.9.1\n- **音频支持**: MP3SPI 1.9.5.4\n- **日志**: SLF4J + Logback\n- **构建工具**: Maven 3.6+\n\n## 📊 性能特性\n\n- **文件大小限制**: 默认 50MB，可配置\n- **内存优化**: 流式处理大文件\n- **并发支持**: 多文件并行处理\n- **错误恢复**: 优雅的错误处理机制\n\n## 🧪 测试\n\n项目包含完整的单元测试套件:\n\n- **测试文件数**: 6个\n- **测试代码行数**: 1,581行\n- **测试用例数**: 127个\n- **覆盖率**: 核心功能 100% 覆盖\n\n### 详细使用示例\n\n#### 基础转换\n```bash\n# 基本转换 - 自动生成输出文件名\njava -jar markitdown-java-1.0.0-SNAPSHOT.jar document.pdf\n# 输出: document.md\n\n# 指定输出文件\njava -jar markitdown-java-1.0.0-SNAPSHOT.jar report.docx -o report.md\n\n# 输出到指定目录\njava -jar markitdown-java-1.0.0-SNAPSHOT.jar presentation.pptx -o ./output/\n```\n\n#### 批量处理\n```bash\n# 批量转换所有 PDF 文件\njava -jar markitdown-java-1.0.0-SNAPSHOT.jar *.pdf\n\n# 转换多种格式文件\njava -jar markitdown-java-1.0.0-SNAPSHOT.jar *.docx *.pdf *.txt\n\n# 转换音频文件\njava -jar markitdown-java-1.0.0-SNAPSHOT.jar *.mp3 *.wav *.ogg\n\n# 使用通配符转换\njava -jar markitdown-java-1.0.0-SNAPSHOT.jar document.*\n```\n\n#### 高级选项\n```bash\n# PowerPoint 转换，不包含表格\njava -jar markitdown-java-1.0.0-SNAPSHOT.jar presentation.pptx --no-tables\n\n# 排除元数据和图片\njava -jar markitdown-java-1.0.0-SNAPSHOT.jar manual.pdf --no-metadata --no-images\n\n# OCR 图片识别（中文）\njava -jar markitdown-java-1.0.0-SNAPSHOT.jar scan.jpg --ocr --language chi_sim\n\n# 设置表格格式为管道符\njava -jar markitdown-java-1.0.0-SNAPSHOT.jar data.xlsx --table-format pipe\n```\n\n#### 输出控制\n```bash\n# 详细模式，显示处理过程\njava -jar markitdown-java-1.0.0-SNAPSHOT.jar document.pdf --verbose\n\n# 静默模式，只显示错误\njava -jar markitdown-java-1.0.0-SNAPSHOT.jar document.pdf --quiet\n\n# 查看帮助信息\njava -jar markitdown-java-1.0.0-SNAPSHOT.jar --help\n\n# 查看版本信息\njava -jar markitdown-java-1.0.0-SNAPSHOT.jar --version\n```\n\n## 📦 下载和安装\n\n### 方式一：直接下载 JAR 包\n1. 下载 `markitdown-java-1.0.0-SNAPSHOT.jar` (46MB)\n2. 确保系统已安装 Java 11+\n3. 直接运行命令\n\n### 方式二：从源码构建\n```bash\n# 克隆项目\ngit clone <repository-url>\ncd markitdown-java\n\n# 编译打包\nmvn clean package -DskipTests\n\n# JAR 文件位置\ntarget/markitdown-java-1.0.0-SNAPSHOT.jar\n```\n\n### Windows 用户设置\n```cmd\n# 检查 Java 版本\njava -version\n\n# 设置环境变量（可选）\nset PATH=%PATH%;C:\\path\\to\\java\\bin\n\n# 创建批处理文件方便使用\necho @echo off > markitdown.bat\necho java -jar C:\\path\\to\\markitdown-java-1.0.0-SNAPSHOT.jar %* >> markitdown.bat\n\n# 使用\nmarkitdown document.pdf\n```\n\n## ⚙️ 配置选项详解\n\n### 输出格式选项\n| 选项 | 值 | 说明 | 示例 |\n|------|----|----- |------|\n| `--table-format` | github | GitHub风格表格 (默认) | `| Header |` |\n| `--table-format` | markdown | 标准Markdown表格 | `| Header |` |\n| `--table-format` | pipe | 管道符表格 | `\\| Header \\|` |\n| `--image-format` |",
      "default_branch": "master"
    },
    "fetched_at": "2025-10-22T02:27:45.400993"
  },
  {
    "basic_info": {
      "name": "agentscope-java",
      "full_name": "agentscope-ai/agentscope-java",
      "owner": "agentscope-ai",
      "description": "AgentScope Java: Agent-Oriented Programming for Building LLM Applications",
      "url": "https://github.com/agentscope-ai/agentscope-java",
      "clone_url": "https://github.com/agentscope-ai/agentscope-java.git",
      "ssh_url": "git@github.com:agentscope-ai/agentscope-java.git",
      "homepage": "",
      "created_at": "2025-09-23T04:37:43Z",
      "updated_at": "2025-10-22T01:26:53Z",
      "pushed_at": "2025-10-22T01:26:49Z"
    },
    "stats": {
      "stars": 65,
      "forks": 8,
      "watchers": 65,
      "open_issues": 2,
      "size": 402
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 955566
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "<p align=\"center\">\n  <img\n    src=\"https://img.alicdn.com/imgextra/i1/O1CN01nTg6w21NqT5qFKH1u_!!6000000001621-55-tps-550-550.svg\"\n    alt=\"AgentScope Logo\"\n    width=\"200\"\n  />\n</p>\n\n## AgentScope Implementation for Java\n<font style=\"color:rgb(31, 35, 40);\">This is the Java implementation of </font>[<font style=\"color:rgb(9, 105, 218);\">AgentScope</font>](https://github.com/agentscope-ai/agentscope/)<font style=\"color:rgb(31, 35, 40);\">. Please note that this project is still experimental and under active development.</font>\n\n\n![](https://img.shields.io/badge/GUI-AgentScope_Studio-blue?logo=look&logoColor=green&color=dark-green)![](https://img.shields.io/badge/license-Apache--2.0-black)\n\n## ✨ Why AgentScope?\nEasy for beginners, powerful for experts.\n\n+ **Transparent to Developers**: Transparent is our **FIRST principle**. Prompt engineering, API invocation, agent building, workflow orchestration, all are visible and controllable for developers. No deep encapsulation or implicit magic.\n+ Realtime Steering: Native support for realtime interruption and customized handling.\n+ **More Agentic**: Support agentic tools management, agentic long-term memory control and agentic RAG, etc.\n+ **Model Agnostic**: Programming once, run with all models.\n+ **LEGO-style Agent Building**: All components are **modular** and **independent**.\n+ **Multi-Agent Oriented**: Designed for **multi-agent**, **explicit** message passing and workflow orchestration, NO deep encapsulation.\n+ **Highly Customizable**: Tools, prompt, agent, workflow, third-party libs & visualization, customization is encouraged everywhere.\n\n## 🚀 Quickstart\n### Installation\nAgentScope Java requires **jdk 17** or higher.\n\n```bash\n<dependency>\n    <groupId>io.agentscope</groupId>\n    <artifactId>agentscope-core</artifactId>\n    <version>0.1.0</version>\n</dependency>\n```\n\n### Hello AgentScope!\nStart with a basic ReActAgent that replies to user queries!\n\n```java\npublic static void main(String[] args) {\n    Model model = DashScopeChatModel.builder()\n\t\t.apiKey(System.getenv(\"DASHSCOPE_API_KEY\"))\n\t\t.modelName(\"qwen-max\")\n\t\t.build();\n\n    ReActAgent agent = ReActAgent.builder()\n    .name(\"hello-world-agent\")\n    .sysPrompt(\"You are a helpful AI assistant. Be concise and friendly. \" +\n               \"When thinking through problems, use <thinking>...</thinking> tags to show your reasoning.\")\n    .model(model)\n    .memory(new InMemoryMemory())\n    .formatter(new DashScopeChatFormatter())\n    .build();\n\n    Msg userMessage = Msg.builder()\n        .role(MsgRole.USER)\n        .textContent(\"Hello, please introduce yourself.\")\n        .build();\n    Msg response = agent.reply(userMessage).block();\n\n    System.out.println(\"Agent Response: \" + response.getTextContent());\n}\n```\n\n### Equip Agent with Tools\n1. Define Tool\n\n\tDefine a tool class with methods annotated with `@Tool`. Here's an example `SimpleTools` class with a time tool:\n\n\t```java\n\tpublic class SimpleTools {\n\t\t@Tool(name = \"get_time\", description = \"Get current time string of a time zone\")\n\t\tpublic String getTime(@ToolParam(description = \"Time zone, e.g., Beijing\") String zone) {\n\t\t\tLocalDateTime now = LocalDateTime.now();\n\t\t\treturn now.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\"));\n\t\t}\n\t}\n\t```\n\n2. Register Tool to ReActAgent\n\n\tRegister the tool class through `Toolkit` using the `registerTool` method:\n\n\t```java\n\tpublic static void main(String[] args) {\n\t\tModel model = DashScopeChatModel.builder()\n\t\t\t.apiKey(System.getenv(\"DASHSCOPE_API_KEY\"))\n\t\t\t.modelName(\"qwen-max\")\n\t\t\t.build();\n\n\t\tToolkit toolkit = new Toolkit();\n\t\ttoolkit.registerTool(new SimpleTools());\n\n\t\tReActAgent agent = ReActAgent.builder()\n\t\t\t.name(\"hello-world-agent\")\n\t\t\t.sysPrompt(\"You are a helpful AI assistant.\")\n\t\t\t.model(model)\n\t\t\t.toolkit(toolkit)\n\t\t\t.memory(new InMemoryMemory())\n\t\t\t.formatter(new DashScopeChatFormatter())\n\t\t\t.build();\n\n\t\tMsg userMessage = Msg.builder()\n\t\t\t\t.role(MsgRole.USER)\n\t\t\t\t.textContent(\"Please tell me the current time.\")\n\t\t\t\t.build();\n\n\t\tMsg response = agent.reply(userMessage).block();\n\t\tSystem.out.println(\"Agent Response: \" + response.getTextContent());\n\t}\n\t```\n## <font style=\"color:rgb(31, 35, 40);\">📖</font><font style=\"color:rgb(31, 35, 40);\"> Documentation</font>\n+ [Create Message](./docs/quickstart-message.md)\n+ [Create ReAct Agent](./docs/quickstart-agent.md)\n+ Model\n+ Tool\n+ Memory\n+ Prompt Formatter\n\n## <font style=\"color:rgb(31, 35, 40);\">🏗️</font><font style=\"color:rgb(31, 35, 40);\"> </font>Roadmap\nIn the upcoming versions, AgentScope Java version will focus on improving the following features.\n\n+ Multi-modal\n+ Multi-Agent\n+ Tracing\n+ AgentScope Studio\n\n## ⚖️ License\nAgentScope is released under Apache License 2.0.\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-22T02:27:46.724810"
  },
  {
    "basic_info": {
      "name": "dev.matheuslf.desafio.inscritos",
      "full_name": "matheuslf/dev.matheuslf.desafio.inscritos",
      "owner": "matheuslf",
      "description": null,
      "url": "https://github.com/matheuslf/dev.matheuslf.desafio.inscritos",
      "clone_url": "https://github.com/matheuslf/dev.matheuslf.desafio.inscritos.git",
      "ssh_url": "git@github.com:matheuslf/dev.matheuslf.desafio.inscritos.git",
      "homepage": null,
      "created_at": "2025-10-09T16:16:51Z",
      "updated_at": "2025-10-21T23:39:57Z",
      "pushed_at": "2025-10-10T22:20:29Z"
    },
    "stats": {
      "stars": 60,
      "forks": 46,
      "watchers": 60,
      "open_issues": 10,
      "size": 15
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 556
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "## 🧠 Desafio Técnico – Sistema de Gestão de Projetos e Demandas\n\n### 📘 Contexto\nSua missão é desenvolver uma **API RESTful em Java com Spring Boot** para gerenciar **projetos e tarefas (demandas)** de uma empresa.  \nO sistema será utilizado por um time de desenvolvimento para organizar suas entregas, acompanhar o status das tarefas e realizar análises simples.\n\n---\n\n## 🎯 Requisitos Técnicos\n\n### 🧱 1. Modelagem de Domínio\n\nA modelagem pode ser modificada pelo inscrito. Porém, precisa ser justificado o motivo.\n\n#### `Project`\n| Campo | Tipo | Descrição |\n|-------|------|-----------|\n| `id` | UUID/Long | Identificador |\n| `name` | String (3–100) | **Obrigatório** |\n| `description` | String | Opcional |\n| `startDate` | Date | Início do projeto |\n| `endDate` | Date | Opcional |\n\n#### `Task`\n| Campo | Tipo | Descrição |\n|-------|------|-----------|\n| `id` | UUID/Long | Identificador |\n| `title` | String (5–150) | **Obrigatório** |\n| `description` | String | Detalhes da tarefa |\n| `status` | Enum | TODO / DOING / DONE |\n| `priority` | Enum | LOW / MEDIUM / HIGH |\n| `dueDate` | Date | Data limite |\n| `projectId` | FK(Project) | Relacionamento |\n\n---\n\n### 🌐 2. Endpoints REST\n\n| Método | Endpoint | Descrição |\n|---------|-----------|-----------|\n| **POST** | `/projects` | Criar novo projeto (`name` obrigatório) |\n| **GET** | `/projects` | Listar todos os projetos (paginação opcional) |\n| **POST** | `/tasks` | Criar nova tarefa vinculada a um projeto |\n| **GET** | `/tasks?status=&priority=&projectId=` | Buscar tarefas com filtros opcionais |\n| **PUT** | `/tasks/{id}/status` | Atualizar apenas o status da tarefa |\n| **DELETE** | `/tasks/{id}` | Remover tarefa |\n\n---\n\n## ✅ Requisitos Obrigatórios\n- 🧑‍💻 **Java 17+** e **Spring Boot 3+**  \n- 🧠 **Spring Data JPA**  \n- 🗄️ Banco Relacional (**PostgreSQL** ou **H2**)  \n- ✔️ **Bean Validation**  \n- 🧪 **Testes Automatizados**  \n  - Unitários (Services mockados)  \n  - Integração (Controllers com MockMvc ou Testcontainers)  \n- ⚠️ Tratamento de erros com `@ControllerAdvice`  \n- 📦 Uso de **DTOs** (`record` ou classes simples)  \n- 📘 **README** explicando como rodar o projeto\n\n---\n\n## 🏅 Diferenciais (Pontos Extras)\n- 🧭 Documentação **Swagger / OpenAPI**  \n- 🔐 Autenticação simples com **JWT** ou Basic Auth  \n- 🐳 Configuração de **Docker** / **docker-compose**  \n- ⚡ Uso de **MapStruct** para mapeamento de DTOs  \n- 🔍 Testes de API com **RestAssured**\n\n---\n\n## 🛠️ Tags\n`#Java` `#SpringBoot` `#Backend` `#DesafioTecnico`  \n`#API` `#RestAPI` `#Docker` `#Kubernetes`  \n`#PostgreSQL` `#Oracle` `#JPA` `#Swagger`  \n`#RestAssured` `#CleanCode` `#SoftwareEngineering`\n\n---\n\n### 💡 Dica\n> Foque em **organização, boas práticas e clareza do código**.  \n> Um bom README e commits bem descritos também serão avaliados. 😉\n\n---\n\n### 🧾 Licença\nEste projeto foi desenvolvido exclusivamente para o **processo seletivo SIS Innov & Tech** e não deve ser utilizado para fins comerciais.\n\n---\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-22T02:27:48.015628"
  },
  {
    "basic_info": {
      "name": "API-Premium-Gateway",
      "full_name": "Feynix2004/API-Premium-Gateway",
      "owner": "Feynix2004",
      "description": null,
      "url": "https://github.com/Feynix2004/API-Premium-Gateway",
      "clone_url": "https://github.com/Feynix2004/API-Premium-Gateway.git",
      "ssh_url": "git@github.com:Feynix2004/API-Premium-Gateway.git",
      "homepage": null,
      "created_at": "2025-10-09T11:14:53Z",
      "updated_at": "2025-10-21T17:03:27Z",
      "pushed_at": "2025-10-09T11:37:13Z"
    },
    "stats": {
      "stars": 51,
      "forks": 5,
      "watchers": 51,
      "open_issues": 0,
      "size": 399
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 375098,
        "HTML": 39824,
        "JavaScript": 35779,
        "Dockerfile": 8148
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "# API Premium Gateway\n\n### 开发模式\n```bash\n# 克隆项目\ngit clone https://github.com/Feynix2004/API-Premium-Gateway.git\ncd API-Premium-Gateway\n\n# 启动开发环境\ndocker compose up -d --build\n```\n\n### 服务访问\n- **API网关**: http://localhost:8081\n- **健康检查**: http://localhost:8081/api/health\n- **数据库**: localhost:5433 (用户名: gateway_user, 密码: gateway_pass)\n\n### 常用命令\n```bash\n# 查看服务状态\ndocker compose ps\n\n# 查看日志\ndocker compose logs -f\n\n# 停止服务\ndocker compose down\n\n# 重启服务\ndocker compose restart\n\n# 重置数据库（会删除所有数据）\ndocker compose down\ndocker volume rm api-premium-gateway_postgres_data\ndocker compose up -d --build\n```\n\n-----\n\n## 项目的由来\n\n该项目由 AgentX 项目引入，因需要对模型的选择高可用。\n\n## 🚀 项目概览\n\n**API-Premium Gateway** 是一个轻量级、自研的 Java 服务，旨在为您的分布式系统和应用提供**强大的 API 高可用与智能调度能力**。它作为您服务调用各类后端 API（包括第三方服务、自建微服务、AI 模型等）的**智能中间层**，确保您的业务在面对外部API波动时依然稳定可靠。\n\n**核心解决问题：**\n\n  * **API 不可用：** 某个第三方 API 或自建服务宕机了怎么办？\n  * **性能瓶颈：** 某个 API 实例响应慢或负载高，如何自动切换？\n  * **多租户管理：** 不同项目或用户如何隔离地使用和管理 API 资源？\n  * **调用可观测性：** 如何实时了解后端 API 的健康状况和性能表现？\n\n-----\n\n## ✨ 核心特性\n\n  * **⚡️ API 高可用：**\n      * **平替（Fallback）：** 当首选 API 实例失效时，自动无缝切换到其他可用实例。\n      * **降级（Degradation）：** 在高优先级API不可用时，可选择切换到功能受限但更稳定的备用API。\n      * **熔断（Circuit Breaker）：** 自动隔离故障API，防止雪崩效应。\n      * **限流（Rate Limiting）：** 保护后端API不被过量请求压垮。\n  * **🧠 智能调度与负载均衡：**\n      * 根据API实例的**实时性能指标**（成功率、延迟）、**成本**、**优先级**等，动态选择最佳的调用路径。\n  * **🔐 安全与隔离：**\n      * 支持**多项目、多用户**的API资源隔离管理。\n      * 提供统一的**API Key/Token 鉴权**机制，确保接口安全。\n  * **📊 调用可观测性：**\n      * 实时**收集并分析**API调用结果（成功/失败、延迟、Token使用等），为决策和监控提供数据支撑。\n  * **🛠️ 简洁高效：**\n      * 基于 Spring Boot 自研，不依赖复杂网关框架，专注于核心功能，保持轻量级和高性能。\n      * 通过**SDK**简化上游服务集成。\n\n-----\n\n## 🚀 工作原理\n\nAPI-Premium Gateway 扮演着**智能决策者**与**状态收集者**的角色。它不直接代理实际的 API 请求，而是提供一套机制，让上游服务：\n\n1.  **注册 API 实例：** 上游服务启动时，通过 Gateway SDK 上报自身可用的后端 API 实例（如 OpenAI 的 GPT-4o、自建的图片生成服务等），并附带其 `actualEndpoint`、`providerInfo`、`优先级`、`成本` 等元数据。\n2.  **请求智能选择：** 当上游服务需要调用某个逻辑 API（如 `gpt4o`）时，它首先向 Gateway 发送请求，Gateway 会根据内部算法（高可用、负载均衡、熔断等）选择当前**最佳**或**可用**的后端 API 实例。\n3.  **上游服务执行调用：** Gateway 返回选定的 API 实例的详细信息（如 `actualEndpoint`、`businessId`、`providerInfo`）。**上游服务拿到这些信息后，自行发起对后端 API 的实际调用。**\n4.  **上报调用结果：** 无论调用成功或失败，上游服务都必须将结果（成功/失败、延迟、错误信息等）上报给 Gateway。Gateway 利用这些数据实时更新后端 API 实例的健康状况和性能指标，为下一次决策提供依据。\n\n-----\n\n## 📐 架构概览\n\n![mermaid-diagram-2025-06-02-170627.png](docs/images/mermaid-diagram-2025-06-02-170627.png)\n\n-----\n\n## 🛠️ 技术栈\n\n  * **后端框架：** Spring Boot 3.2.0\n  * **Java 版本：** Java 17\n  * **数据存储：** PostgreSQL 15\n  * **ORM 框架：** MyBatis Plus\n  * **容器化：** Docker + Docker Compose\n  * **架构模式：** DDD (领域驱动设计)\n\n-----\n\n## 🎯 上游服务集成 (Java SDK)\n\n1.  **添加 SDK 依赖：**\n    ```xml\n    <dependency>\n        <groupId>com.your-org</groupId>\n        <artifactId>api-premium-gateway-sdk</artifactId>\n        <version>1.0.0-SNAPSHOT</version>\n    </dependency>\n    ```\n\n2.  **配置 SDK：**\n    在您的 Spring Boot 应用中配置 Gateway 的基础 URL 和 API Key。\n\n3.  **注册 API 实例：**\n    ```java\n    // 示例：注册一个模型API实例\n    gatewaySdkClient.registerApi(\n        \"my-project-id\",\n        \"user-id-optional\",\n        \"gpt4o-model\",\n        \"model\",\n        \"my-gpt4o-business-id-001\",\n        \"https://api.openai.com/v1/chat/completions\",\n        Map.of(\"provider\", \"OpenAI\", \"version\", \"gpt-4o\"),\n        Map.of(\"priority\", 100, \"costPerToken\", 0.000015)\n    );\n    ```\n\n4.  **选择并调用 API：**\n    ```java\n    // 1. 请求 Gateway 选择最佳 API\n    SelectedApiInstance selectedApi = gatewaySdkClient.selectApi(\n        \"my-project-id\",\n        \"user-id-optional\",\n        \"gpt4o-model\",\n        \"model\"\n    );\n\n    // 2. 根据 Gateway 返回信息，执行实际调用\n    // ... 使用 selectedApi.getActualEndpoint() 和 selectedApi.getProviderInfo()\n\n    // 3. 上报调用结果\n    gatewaySdkClient.reportApiResult(\n        \"my-project-id\",\n        \"user-id-optional\",\n        \"gpt4o-model\",\n        selectedApi.getBusinessId(),\n        true, // success\n        150L, // latencyMs\n        null, // errorMessage\n        null, // errorType\n        Map.of(\"promptTokens\", 100, \"completionTokens\", 200)\n    );\n    ```\n\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-22T02:27:49.361185"
  }
]
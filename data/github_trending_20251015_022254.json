[
  {
    "basic_info": {
      "name": "astron-agent",
      "full_name": "iflytek/astron-agent",
      "owner": "iflytek",
      "description": "An enterprise-ready AI agent development platform combining intelligent RPA, enabling agents to not only think but also act—automating workflows across digital and desktop environments.",
      "url": "https://github.com/iflytek/astron-agent",
      "clone_url": "https://github.com/iflytek/astron-agent.git",
      "ssh_url": "git@github.com:iflytek/astron-agent.git",
      "homepage": null,
      "created_at": "2025-09-19T08:46:01Z",
      "updated_at": "2025-10-15T02:20:10Z",
      "pushed_at": "2025-10-15T01:49:51Z"
    },
    "stats": {
      "stars": 1623,
      "forks": 136,
      "watchers": 1623,
      "open_issues": 1,
      "size": 81119
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 4373722,
        "TypeScript": 4030100,
        "Python": 3930453,
        "PLpgSQL": 868188,
        "SCSS": 409142,
        "Go": 273134,
        "JavaScript": 133840,
        "Makefile": 88683,
        "Shell": 38887,
        "C": 13024,
        "Dockerfile": 7648,
        "CSS": 6547,
        "HTML": 3038
      },
      "license": "Apache License 2.0",
      "topics": []
    },
    "content": {
      "readme": "# Astron Agent - Agent Platform\n\n<div align=\"center\">\n\n![Logo](docs/logo.svg)\n\n**Astron Agent is an enterprise-grade Agent development platform designed for AI developers and small to medium-sized enterprises.**\n\n[![License](https://img.shields.io/badge/license-apache2.0-blue.svg)](LICENSE)\n[![Version](https://img.shields.io/github/v/release/iflytek/astron-agent)](https://github.com/iflytek/astron-agent/releases)\n[![Build Status](https://img.shields.io/github/actions/workflow/status/iflytek/astron-agent/ci.yml)](https://github.com/iflytek/astron-agent/actions)\n[![Coverage](https://img.shields.io/codecov/c/github/iflytek/astron-agent)](https://codecov.io/gh/iflytek/astron-agent)\n[![GitHub Stars](https://img.shields.io/github/stars/iflytek/astron-agent?style=social)](https://github.com/iflytek/astron-agent/stargazers)\n\nEnglish | [简体中文](README-zh.md)\n\n</div>\n\n## 📑 Table of Contents\n\n- [🔭 What is Astron Agent?](#-What-is-Astron-Agent)\n- [🛠️ Tech Stack](#%EF%B8%8F-tech-stack)\n- [🚀 Quick Start](#-quick-start)\n  - [Using Docker](#using-docker)\n- [📖 Usage Guide](#-usage-guide)\n- [📚 Documentation](#-documentation)\n- [🤝 Contributing](#-contributing)\n- [🌟 Star History](#-star-history)\n- [📞 Support](#-support)\n- [📄 License](#-license)\n\n## 🔭 What is Astron Agent\nAstron Agent is an enterprise-grade Agent development platform designed for AI developers and small to medium-sized enterprises.  \nIt not only provides end-to-end capabilities covering model hosting, application development, performance optimization, and access control, but also innovatively integrates intelligent RPA. This allows Agents not only to “think,” but also to truly “act,” completing complex task chains across digital systems and desktop environments.\n\n### Why Choose Astron Agent?\n- **Consistent and Reliable:** Shares the same core technology with [iFLYTEK Astron Agent Platform](https://agent.xfyun.cn), inheriting its proven enterprise-grade stability.  \n- **Closed Loop of Thinking + Acting:** Deep integration of intelligent RPA enables Agents to move from “generating answers” to “automatically completing tasks.”  \n- **Dual Value for Developers and Enterprises:** Developers can quickly get started and expand, while SMEs can efficiently implement digital workflows.  \n\n### Key Features\n- **Enterprise-Grade High Availability:** Full-stack capabilities for development, building, optimization, and management. Supports one-click deployment with strong reliability.  \n- **Intelligent RPA Integration:** Enables cross-system process automation, empowering Agents with controllable execution to achieve a complete loop “from decision to action.”  \n- **Ready-to-Use Tool Ecosystem:** Integrates massive AI capabilities and tools from the [iFLYTEK Open Platform](https://www.xfyun.cn), validated by millions of developers, supporting plug-and-play access without extra development.  \n- **Flexible Model Support:** Offers diverse access methods, from rapid API-based model validation to one-click deployment of enterprise-level MaaS (Model as a Service) local clusters, meeting needs of all scales.  \n\n### Developer Support\n- **Multi-language Backend:** Supports mainstream languages such as Java, Go, and Python; frontend adapted to TypeScript + React stack.  \n- **Comprehensive Toolchain:** Provides API documentation, deployment guides, and troubleshooting manuals to reduce learning and maintenance costs.  \n- **One-Click Deployment:** Built-in Dockerized environment for out-of-the-box setup and rapid project launch.  \n\n## 🛠️ Tech Stack\n\n- **Backend**: Java 21, Spring Boot 3, Go, Python 3.11\n- **Frontend**: TypeScript 5, React 18\n- **Database**: MySQL 8\n- **Cache**: Redis\n- **Queue**: Apache Kafka\n- **Infrastructure**: Docker, MinIO\n- **Quality Tools**: Checkstyle, PMD, SpotBugs, ESLint, gocyclo, staticcheck, golangci-lint, black, isort, flake8, mypy, pylint\n\n## 🚀 Quick Start\n\n### Using Docker\n\n```bash\n# Clone the repository\ngit clone https://github.com/iflytek/astron-agent.git\ncd astron-agent\n\n# Start the stack\ndocker-compose up -d\n```\n\n- Visit `http://localhost:8080` in your browser.\n\n## 📖 Usage Guide\n\nFor detailed usage instructions, please refer to [Usage Documentation](docs/USAGE.md)\n\n## 📚 Documentation\n\n- [📖 Usage Documentation](docs/USAGE.md)\n- [🚀 Deployment Guide](docs/DEPLOYMENT.md)\n- [📖 API Reference](docs/API.md)\n- [🔧 Configuration](docs/CONFIGURATION.md)\n- [🐛 Troubleshooting](docs/TROUBLESHOOTING.md)\n- [📝 Changelog](CHANGELOG.md)\n\n## 🤝 Contributing\n\nWe welcome contributions of all kinds! Please see our [Contributing Guide](CONTRIBUTING.md)\n\n## 🌟 Star History\n\n<div align=\"center\">\n  <img src=\"https://api.star-history.com/svg?repos=iflytek/astron-agent&type=Date\" alt=\"Star History Chart\" width=\"600\">\n</div>\n\n## 📞 Support\n\n- 💬 Community Discussion: [GitHub Discussions](https://github.com/iflytek/astron-agent/discussions)\n- 🐛 Bug Reports: [Issues](https://github.com/iflytek/astron-agent/issues)\n\n## 📄 License\n\nThis project is licensed under the [Apache 2.0 License](LICENSE",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-15T02:22:55.233972"
  },
  {
    "basic_info": {
      "name": "ColorOS-CVE-2025-10184",
      "full_name": "yuuouu/ColorOS-CVE-2025-10184",
      "owner": "yuuouu",
      "description": "ColorOS短信漏洞，以及用户自救方案",
      "url": "https://github.com/yuuouu/ColorOS-CVE-2025-10184",
      "clone_url": "https://github.com/yuuouu/ColorOS-CVE-2025-10184.git",
      "ssh_url": "git@github.com:yuuouu/ColorOS-CVE-2025-10184.git",
      "homepage": "",
      "created_at": "2025-09-24T11:48:03Z",
      "updated_at": "2025-10-14T15:36:39Z",
      "pushed_at": "2025-10-13T10:51:46Z"
    },
    "stats": {
      "stars": 370,
      "forks": 41,
      "watchers": 370,
      "open_issues": 5,
      "size": 1347
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 31892,
        "Kotlin": 5890
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "> [信息来源](https://www.rapid7.com/blog/post/cve-2025-10184-oneplus-oxygenos-telephony-provider-permission-bypass-not-fixed/)  \n> [漏洞原理及解决方案技术原理](https://yuuou.vercel.app/%E9%80%86%E5%90%91/%E7%9F%AD%E4%BF%A1%E6%BC%8F%E6%B4%9E%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/)\n\n### 漏洞说明\n\n- 类型：数据库注入攻击`1=1 AND`\n- 效果：任意APP读取短信数据。*无需权限、无需用户交互、无感知读取*\n- 影响：本机的所有短信信息、短信验证码泄露\n- 涉及范围：**OPPO 及其子品牌(一加、realme)**\n- 影响范围：根据[maoyixuan](https://github.com/yuuouu/ColorOS-CVE-2025-10184/issues/1#issuecomment-3367827779)提交的机型显示，***17年发布的ColorOS 6.0.1存在漏洞，此漏洞可能伴随了OPPO的OEM生涯***\n- 修复情况：10月4日开始对ColorOS 15推送系统文件更新：`15.0.0.860Patch01|1.9MB`，10月9日对ColorOS 12-14推送\n- 测试漏洞：[国内下载 yuu_v3.6.apk](https://yuuou.lanzout.com/iiQE337s6dha)，出现短信内容代表存在漏洞。测试app不存在联网功能，[OPPO列为风险应用是通过包名匹配](https://github.com/yuuouu/ColorOS-CVE-2025-10184/issues/23)，断网安装即可，如有疑惑可查阅源码，测试完及时卸载\n- 普通用户防护策略：\n  1. 在厂商未修补漏洞前，请将sim卡放到使用其它品牌手机上使用\n  2. 设备上的短信尽快删除，彻底删除。避免短信被用作用户画像\n  3. 使用Android虚拟机或云手机安装应用\n  4. 在使用短信验证时尽量保证无后台应用运行\n- 自救方案：无root自救方案和root稳定拦截方案\n\n### 修复情况更新(10月4日)\n> @C和其他热心网友，[更新前确保关闭 Cross Profile Test App](https://github.com/yuuouu/ColorOS-CVE-2025-10184/issues/24)，不然会导致安装卡在0.0%\n\n已确认开始推送修复，10月4日上午开始推送  \n- 系统版本：ColorOS 15.0.0、15.0.1、15.0.2\n- 实际内容：com.android.providers.telephony 15.40.10 (35)  \n- 更新路径：设置 → 系统与更新 → 软件更新 → 自动更新设置 → 系统文件更新  \n- 系统文件：`15.0.0.860Patch01|1.9MB`，不同机型文件不一样，以实际推送为准  \n- 修复效果：  \n<img src=\"http://upforme.ru/uploads/001c/43/d3/2/43385.jpg\" width=\"200\">  \n\n#### 强制更新\n> ~~`15.0.0.860Patch01|1.9MB 推送包的 电话_短信存储_15.40.10.apk`仅支持ColorOS 15.0.0、15.0.1、15.0.2版本，[推送包详细内容](https://github.com/yuuouu/ColorOS-CVE-2025-10184/blob/master/opex_15.0.0.860Patch01.cfg)~~\n> 信息来源 电报@SnowWolf725 \n\n[下载 电话_短信存储.apk](https://yuuou.lanzout.com/s/yuuou)，注意：要跟系统版本匹配  \n使用adb命令：`adb install -t D:\\xxx.apk`  \n安装成功后重启手机生效，出错了卸载安装版本即可\n\n### 漏洞效果\n\n<img src=\"http://upforme.ru/uploads/001c/43/d3/2/700625.png\" width=\"240\">\n\n[可将隐私数据打码后上传到 Issues](https://github.com/yuuouu/ColorOS-CVE-2025-10184/issues/1)\n\n### 普通用户自救方案\n\n#### 方案一：使用短信骚扰拦截(通用方法)\n> 来自[v2ex@CoolMarket](https://www.v2ex.com/t/1162349?p=1#r_16821039)  \n> 打开短信骚扰拦截，拦截所有号码，这样短信就会被收进骚扰拦截里，用软件测试发现读取不到短信\n\n路径：短信 → 骚扰拦截 → 拦截规则 → 信息拦截 → 自定义拦截关键词 → 右上角➕号 → 按行复制输入以下内容 \n\n```log\n0,1,2,3,4,5,6,7,8,9\n#,*,+,@,.,【,(,（,，\n-,/,!,码,中,余,元,退,\na,b,c,d,e,f,g,h,i,j,\nk,l,m,n,o,p,q,r,s,t,\nu,v,w,x,y,z,A,B,C,D,\nE,F,G,H,I,J,K,L,M,N,\nO,P,Q,R,S,T,U,V,W,X,\nY,Z,零,一,二,三,四,五,六,\n七,八,九,十,百,千,万\n```\n<img src=\"http://upforme.ru/uploads/001c/43/d3/2/346162.jpg\" width=\"200\"><img src=\"http://upforme.ru/uploads/001c/43/d3/2/683671.jpg\" width=\"200\"><img src=\"http://upforme.ru/uploads/001c/43/d3/2/136629.jpg\" width=\"200\"><img src=\"http://upforme.ru/uploads/001c/43/d3/2/791452.jpg\" width=\"200\"><img src=\"http://upforme.ru/uploads/001c/43/d3/2/348877.jpg\" width=\"200\"><img src=\"http://upforme.ru/uploads/001c/43/d3/2/849694.jpg\" width=\"200\">    \n验证：接收一条新的短信(给10086发信息)，收到短信后在骚扰拦截那里会出现一条拦截信息，然后打开测试工具查看该信息是否出现，没有该信息的话说明此方法有效   \n\n**此方案最简单，建议旧机型优先使用此方案**\n\n#### 方案二：使用Shizuku修改\n> 基于[v2ex@Dawnnnnnn](https://www.v2ex.com/t/1162349#r_16804643)提出的方法改进。⚠️修改系统内容有风险！非全部机型可用\n\n1. 下载[Shizuku](https://shizuku.rikka.app/download/)和[Blocker](https://github.com/lihenggui/blocker/releases)。(提示无法安装时断开网络后安装)\n2. 根据[教程选择无线调试启动Shizuku](https://shizuku.rikka.app/zh-hans/guide/setup/#%E5%90%AF%E7%94%A8%E6%97%A0%E7%BA%BF%E8%B0%83%E8%AF%95)\n3. `Blocker`设置中更改`控制器种类`为`Shizuku/Sui`，`Shizuku`授权给`Blocker`\n4. `Blocker`设置中打开 `显示系统应用` \n5. `Blocker`搜索`telephony`，进入`电话/短信存储`应用\n6. 选择`内容提供者`，找到其中的`PushMessageProvider`、`PushShopProvider`、`ServiceNumberProvider`三个选项关闭\n7. ⚠️注意：到此完成设置，效果保持到下次重启前。重启手机后将无法收到短信(能发送)，必须重新开启上一步的三个选项，再重启一次才能正常收到短信。确认能收发短信之后关闭三个选项，既有拦截效果，又能正常收发信息，将保持到下次重启\n   \n<img src=\"http://upforme.ru/uploads/001c/43/d3/2/575277.jpg\" width=\"240\"><img src=\"http://upforme.ru/uploads/001c/43/d3/2/719926.jpg\" width=\"240\">\n\n##### 无法生效说明\n\n当`com.android.providers.telephony`里`AndroidManifest.xml`存在`android:testOnly=\"true\"`属性时才能修改生效，[具体原因可见]([https://github.com/lihenggui/blocker/issues/27](https://yuuou.vercel.app/%E9%80%86%E5%90%91/%E7%9F%AD%E4%BF%A1%E6%BC%8F%E6%B4%9E%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/#shizuku-test-only-and-quot-true-and-quot))\n\n### root 拦截方案\n\n无root情况下，试了系统分身、多用户、Shelter工作账号都无法拦截此漏洞  \n如何root请参考 [ColorOS刷机路径](https://yuuou.vercel.app/%E9%80%86%E5%90%91/ColorOS%20%E5%88%B7%E6%9C%BA%E8%B7%AF%E5%BE%84/)\n\n#### 方案一：使用xposed模块\n\n测试包包含模块内容，将捕获调用此漏洞的应用，拦截结果并弹窗提示和记录，仅需勾选\"电话/短信存储\"应用，保存日志路径`/storage/emulated/0/Android/data/com.android.providers.telephony/files/yuu.log`  \n如有发现，请提 Issues 或通过[电报反馈](https://t.me/+Z8f7P5MMkZ0yNzE1)  \n\n<img src=\"https://github.com/user-attachments/assets/baf1e6cc-bf55-44f6-834b-d2c115de2c52\" width=\"260\">\n\n#### 方案二：禁用 Provider\n\n> 来自[v2ex@Dawnnnnnn](https://www.v2ex.com/t/1162349#r_16804643)\n\n1. 下载安装 [Blocker](https://github.com/lihenggui/blocker/releases) \n2. 在设置中打开 `显示系统应用`\n3. 搜索 `telephony`，进入 `电话/短信存储` \n4. 选择 `内容提供者` ，找到其中的 `PushMessageProvider`、`PushShopProvider`、`ServiceNumberProvider` 三个选项关闭\n5. 注意⚠️：重启手机后将导致无法收到短信(能发送)，必须重新开启上一步的三个选项，再重启一次才能正常收到短信。确认能收发短信之后再关闭三个选项，既有拦截效果，又能正常收发信息，将保持到下次重启   \n\n<img",
      "default_branch": "master"
    },
    "fetched_at": "2025-10-15T02:22:56.335135"
  },
  {
    "basic_info": {
      "name": "JoySafety",
      "full_name": "jd-opensource/JoySafety",
      "owner": "jd-opensource",
      "description": "JoySafety",
      "url": "https://github.com/jd-opensource/JoySafety",
      "clone_url": "https://github.com/jd-opensource/JoySafety.git",
      "ssh_url": "git@github.com:jd-opensource/JoySafety.git",
      "homepage": null,
      "created_at": "2025-09-24T09:36:23Z",
      "updated_at": "2025-10-14T14:27:45Z",
      "pushed_at": "2025-10-09T07:40:38Z"
    },
    "stats": {
      "stars": 361,
      "forks": 24,
      "watchers": 361,
      "open_issues": 3,
      "size": 9869
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 818446,
        "Python": 85029,
        "Shell": 21786,
        "Go": 5136,
        "Dockerfile": 4164
      },
      "license": "Apache License 2.0",
      "topics": []
    },
    "content": {
      "readme": "# JoySafety —— 大模型安全框架\n\n---\n\n## 📋 目录\n- [项目简介](#项目简介)\n- [✨ 特性](#特性)\n- [🚀 快速开始](#快速开始)\n- [📖 使用指南](#使用指南)\n- [🏆 最佳实践](#最佳实践)\n- [🏗️ 架构设计](#架构设计)\n- [🛠️ 开发](#开发)\n- [📄 许可证](#许可证)\n- [📅 计划](#计划)\n- Star History\n\n---\n\n## <a id=\"项目简介\"></a>项目简介\n随着生成式人工智能应用的广泛落地，内容安全、数据泄露、提示词攻击等风险也日益凸显。如何保障大模型输出符合法规要求、避免安全漏洞，已成为企业必须面对的关键挑战。为此，**京东正式开源大模型安全框架——JoySafety**，该框架在京东内部广泛应用，覆盖AI导购、物流客服、销售助手、医疗问诊、商家工作台、法务咨询、安全问答等场景，支持日均亿级调用、95%+攻击拦截率，致力于为企业提供一套**成熟、可靠、免费**的大模型安全防护方案。\n\n---\n\n## ✨ <a id=\"特性\"></a>特性\n### 🚀 生产级别\n\n**企业级实战验证**\n- ✅ 保障京东多个**生产级AI应用**安全稳定运行\n- ✅ 复杂业务场景验证，持续迭代优化\n- ✅ 服务部署支持**横向扩展**，满足高并发业务需求\n- ✅ 业务接入零门槛，策略变更支持分钟级**热更新**\n\n**高可靠性保障**\n- 🔄 **原子能力热插拔**，业务不中断\n- ⚡ **配置动态生效**，快速响应业务变化  \n- 📊 **生产环境长期稳定性**验证\n\n---\n\n### 📈 高扩展性\n\n**灵活的架构设计**\n- 🧩 支持**多种原子能力模块**（BERT/FastText/Transformer等主流模型）\n- 🔌 **标准化原子能力接口**，易于扩展新模型\n- 🏗️ 支持**独立部署**或**集中部署**两种模式\n- ⚙️ **轻量编排引擎**，按需灵活配置\n\n**智能负载均衡**\n- 🌐 **集群化部署**支持水平扩展\n- ⚡ **异步检测机制**，提升并发处理能力\n- 🎯 **窗口化检测策略**，平衡性能与准确性\n\n---\n\n### 💡 易用性\n\n**开箱即用**\n- 🐳 **一键Docker Compose启动**，零配置门槛\n- 📱 **DAG编排**\n- 🔧 **标准化API接口**，快速集成现有系统\n\n---\n\n### 🎯 核心技术亮点\n\n### 突破性创新\n\n#### 1. 大模型多轮会话智能识别\n\n#### 2. 采用Free-Taxi异步输出模式，大幅提升检测响应， 实现用户体验与安全的完美平衡\n\n#### 3. **多维响应策略矩阵**\n- 🎯 **精准拦截** - 高风险内容即时阻断\n- ⏸️ **红线代答** - 红线知识库应答\n- 🔄 **智能纠偏** - 自动引导正向回答\n---\n\n## 🚀 <a id=\"快速开始\"></a>快速开始\n## 环境依赖\n请确保已安装以下软件：\n- git\n- git-lfs   用于下载模型文件\n- docker\n- docker compose\n\n### 0. 克隆项目\n```shell\n  #1.\n  git clone https://github.com/jd-opensource/JoySafety.git\n  \n  #2. 进入项目路径\n  cd JoySafety\n  \n  #3. 设置环境变量（建议复制执行，后续脚本/服务均可自动识别）\n  export SAFETY_ROOT_PATH=`pwd`\n  #正常为JoySafety 根路径\n  echo ${SAFETY_ROOT_PATH}\n```\n\n=======\n### 1. 下载模型文件（Huggingface)\n- [模型说明](safety/safety-skills/model_overview.md)\n- 推荐使用 [git-lfs](https://git-lfs.com) 拉取大模型文件\n```shell\n\n  #进入项目路径\n  cd $SAFETY_ROOT_PATH\n\n  #\n  git lfs install\n\n  #方案1\n  git clone https://huggingface.co/jdopensource/JoySafety ${SAFETY_ROOT_PATH}/data/models\n\n  #方案2\n  #因网络问题，您也可以从[ModelScope](https://modelscope.cn/models/syf20240814/joysafety/files)下载）\n  \n```\n\n### 2. 配置 .env 文件\n- 【在项目根路径】 **复制** `.env.example` 或手动创建 `.env`：\n```shell\n   # 注：切换Shell窗口, 重新设置SAFETY_ROOT_PATH\n   cd $SAFETY_ROOT_PATH\n   \n   cp -f .env.example .env\n    \n   # 测试只需修改.env文件中变量:SAFETY_MODEL_DIR，路径需与模型实际下载路径一致【绝对路径】\n   SAFETY_MODEL_DIR=\n```\n\n### 3. 一键启动（Docker Compose）\n```shell\n   docker-compose --env-file .env up\n```\n\n### 4. API 测试\n\n详细 API 测试案例及使用说明移步到 [quickstart/README.md](quickstart/README.md)。\n\n请参考 quickstart 目录下的文档，获取最新的 API 测试脚本和案例说明。\n\n---\n\n## 📖 <a id=\"使用指南\"></a>使用指南\n### 如何接入一个业务\n> 该项目可以同时支持多个业务，每个业务都可以动态增加，分钟级生效。\n0. 注册原子能力（如果需要用的原子能力未注册过），可参考原子能力管理参考： [function_api.md](safety/safety-admin/docs/api/function_api.md)\n1. 增加一个业务（参考[business_api.md](safety/safety-admin/docs/api/business_api.md)）\n2. 为业务增加策略（参考：[dag_api.md](safety/safety-admin/docs/api/dag_api.md)、[策略样例](safety/safety-admin/docs/strategies)）\n\n*一个完整的代码实例：*[example.py](docs/example.py)\n\n### 如何配置策略（DAG）\n识别策略整体是DAG，从rootId对应的node开始，逐层执行识别策略；策略的每个node分为两部分，function和router；function为当前结点执行的具体能力，router为基于当前结点的识别结果决定需要执行的下一个结点。\n\nfunction类别包含single_label_pred（支持现成的两种开箱即用的实现）、keyword、kb_search、rag_answer、multi_turn_detect，配置方式和含义见上节[如何接入一个业务](#如何接入一个业务)中的完整实例，另外，还支持一个虚拟的类别parallel，以支持在单个node内多个function并行执行。\n\n常用的router类别包括stupid_end和groovy，前者表示直接结束，后续是groovy脚本基于识别结果来返回一下步的node_id。groovy脚本中的内置变量是`ctx`,其结构见对象[SessionContext.java](safety/safety-basic/src/main/java/com/jd/security/llmsec/core/session/SessionContext.java)。\n\n比较典型的策略编排示例见：[README.md](safety/safety-admin/docs/strategies/README.md)\n\n\n### 如何管理敏感词\n支持按`分组+业务`来管理敏感词，另外`all`业务下的敏感词对所有业务生效。\n\n对敏感词的管理方式可以参考：[sensitive_words_api.md](safety/safety-admin/docs/api/sensitive_words_api.md)\n\n### 如何管理知识库\n本项目对知识的管理是分两层的；第一层: 使用mysql数据库用于数据持久化以；第二层：使用safety_knowledge+vearch实现知识的向量化及语义检索。\n\n知识在数据库的管理方式可以参考：[knowledge_api.md](safety/safety-admin/docs/api/knowledge_api.md)；知识向量化及存储至vearch可以参考：[index_all.py]（example/safety-skills/safety-knowledge/index_all.py）\n\n\n\n\n### API 接口调用\n\n参考 [API 文档](./safety/safety-api/docs/api.md)\n\n**多语言调用：**\n- Python: [python/demo.py](safety/safety-demo/python/demo.py)\n- Go: [golang/main.go](safety/safety-demo/golang/main.go)\n- Java: [java demo](safety/safety-demo/java/src/main/java/com/jd/security/llmsec/demo/DefenseApiDemo.java)\n\n\n### FAQ\n常见问题与解决方案见 [FAQ](./docs/FAQ.md)\n\n基于产品特性，项目中的示例仅用于产品功能说明使用，不得用于其他领域，非项目开发者观点。\n\n---\n\n##  <a id=\"最佳实践\"></a>🏆最佳实践\n最佳实践见[best_practice.md](docs/best_practice.md)\n\n---\n\n## 🏗️ <a id=\"架构设计\"></a>架构设计\n\n### 项目目录结构\n```text\n.\n├── README.md\n├── deploy\n│         ├── docker-compose.yml    // 打包启动服务（各个模块也可以单独启动）\n│         └── thirdparty            // 第三方依赖相关配置及文档\n│             ├── mysql\n│             ├── redis\n│             └── vearch\n├── safety\n│         ├── safety-admin           // 用于管理配置和数据后台服务\n│         ├── safety-api             // 对外提供能力的api服务\n│         ├── safety-basic            // 核心jar包，服务于safety-admin、safety-basic及safety-demo中的java部分\n│         ├── safety-demo            // 使用safety-api的多语言示例\n│         │         ├── golang\n│         │         ├── java\n│         │         └── python\n│         └── safety-skills       ",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-15T02:22:57.447180"
  },
  {
    "basic_info": {
      "name": "android-code-studio",
      "full_name": "AndroidCSOfficial/android-code-studio",
      "owner": "AndroidCSOfficial",
      "description": "Android Code Studio is an IDE for Android to develop full featured Android apps.",
      "url": "https://github.com/AndroidCSOfficial/android-code-studio",
      "clone_url": "https://github.com/AndroidCSOfficial/android-code-studio.git",
      "ssh_url": "git@github.com:AndroidCSOfficial/android-code-studio.git",
      "homepage": "",
      "created_at": "2025-09-25T13:55:29Z",
      "updated_at": "2025-10-15T01:24:55Z",
      "pushed_at": "2025-09-27T22:27:41Z"
    },
    "stats": {
      "stars": 189,
      "forks": 14,
      "watchers": 189,
      "open_issues": 25,
      "size": 1044467
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 35429531,
        "Kotlin": 4073899,
        "ANTLR": 109365,
        "HTML": 109220,
        "C++": 23983,
        "Tree-sitter Query": 18502,
        "Shell": 16283,
        "Lex": 13233,
        "C": 7548,
        "JavaScript": 3824,
        "ReScript": 3232,
        "Makefile": 2698,
        "AIDL": 1165
      },
      "license": "GNU General Public License v3.0",
      "topics": [
        "android",
        "android-application",
        "android-developers",
        "android-development",
        "android-studio",
        "androidide",
        "androidstudio"
      ]
    },
    "content": {
      "readme": "<p align=\"left\">\r\n  <img src=\"https://avatars.githubusercontent.com/u/234419170?s=400&u=43571ebf481969baafb8399813ad57f46c19eb95&v=4\" alt=\"AndroidIDE\" width=\"80\" height=\"80\"/>\r\n</p>\r\n\r\n<h2 align=\"left\"><b>Android Code Studio</b></h2>\r\n<p align=\"left\">\r\n  An IDE to develop real, Gradle-based Android applications on Android devices.\r\n<p><br>\r\n\r\n<p align=\"left\">\r\n<!-- Latest release -->\r\n<img src=\"https://img.shields.io/github/v/release/AndroidCSOfficial/android-code-studio?include_prereleases&amp;label=latest%20release\" alt=\"Latest release\">\r\n<!-- Build and test -->\r\n<!-- <img src=\"https://github.com/Mohammed-baqer-null/android-code-studio/actions/workflows/asm_build.yml/badge.svg\" alt=\"Builds and tests\"> -->\r\n<!-- Crowdin -->\r\n<a href=\"https://crowdin.com/project/androidide\"><img src=\"https://badges.crowdin.net/androidide/localized.svg\" alt=\"Crowdin\"></a>\r\n<!-- License -->\r\n<img src=\"https://img.shields.io/badge/License-GPLv3-blue.svg\" alt=\"License\"></p>\r\n\r\n\r\n<p align=\"left\">\r\n  <a href=\"https://github.com/Mohammed-baqer-null/android-code-studio/issues/new?labels=bug&template=BUG.yml&title=%5BBug%5D%3A+\">\r\n    <img src=\"https://img.shields.io/badge/Report%20Bug-red?style=for-the-badge&logo=github\" alt=\"Report a bug\">\r\n  </a>\r\n  <a href=\"https://github.com/Mohammed-baqer-null/android-code-studio/issues/new?labels=feature&template=FEATURE.yml&title=%5BFeature%5D%3A+\">\r\n    <img src=\"https://img.shields.io/badge/Request%20Feature-brightgreen?style=for-the-badge&logo=github\" alt=\"Request a feature\">\r\n  </a>\r\n  <a href=\"https://t.me/rv2ide\">\r\n    <img src=\"https://img.shields.io/badge/Telegram-Join%20Us-1DA1F2?style=for-the-badge&logo=telegram\" alt=\"Join on Telegram\">\r\n  </a>\r\n    <a href=\"https://docs.androidide.com/\">\r\n    <img src=\"https://img.shields.io/badge/Docs-Explore-blue?style=for-the-badge&logo=read-the-docs\" alt=\"Explore the docs\">\r\n  </a>\r\n</p>\r\n\r\n## Features\r\n\r\n- [x] Gradle support\r\n- [x] JDK 11 & JDK 17 available\r\n- [x] Terminal with essential packages\r\n- [x] Custom environment variables (for builds & terminal)\r\n- [x] SDK & NDK Manager (manage Android SDKs and NDKs via terminal)\r\n- [x] API information for classes and their members (since, removed, deprecated)\r\n- [x] Log reader (real-time logs for your app)\r\n- [ ] Language servers\r\n    - [x] Java\r\n    - [x] XML\r\n    - [x] Kotlin\r\n- [ ] UI Designer\r\n    - [x] Layout inflater\r\n    - [x] Resolve resource references\r\n    - [x] Auto-complete resource values when editing attributes\r\n    - [x] Drag & Drop interface\r\n    - [x] Visual attribute editor\r\n    - [x] Android Widgets\r\n- [ ] String Translator\r\n- [x] Asset Studio (Drawable & Icon Maker)\r\n- [x] Plugin Creator (Create sub-modules or plugins inside your project)\r\n- [x] Git integration\r\n- [x] **AI Agent** – fully **project-aware AI assistant** that understands your code, modules, and project structure to help with coding.\r\n<!-- - debugging, and suggestions-->\r\n\r\n## Installation\r\n\r\n[<img src=\"https://github.com/Kunzisoft/Github-badge/raw/main/get-it-on-github.svg\"\r\n    alt=\"Get it on F-Droid\"\r\n    height=\"80\">](https://github.com/Mohammed-baqer-null/android-code-studio/releases)\r\n\r\n> _Please install Android Code Studio from trusted sources only i.e._\r\n> - [_GitHub Releases_](https://github.com/Mohammed-baqer-null/android-code-studio/releases)\r\n\r\n- Download the Android Code Studio APK from the mentioned trusted sources.\r\n- Follow the\r\n  instructions [here](https://docs.androidide.com/tutorials/get-started.html) to\r\n  install the build tools.\r\n\r\n## Limitations\r\n\r\n- For working with projects in AndroidIDE, your project must use Android Gradle Plugin v7.2.0 or\r\n  newer. Projects with older AGP must be migrated to newer versions.\r\n- SDK Manager is already included in Android SDK and is accessible in Android Code Studio via its Terminal.\r\n  But, you cannot use it to install some tools (like NDK) because those tools are not built for\r\n  Android.\r\n- No official NDK support because we haven't built the NDK for Android.\r\n\r\nThe app is still being developed actively. It's in beta stage and may not be stable. if you have any\r\nissues using the app, please let us know.\r\n\r\n## Contributing\r\n\r\nSee the [contributing guide](./CONTRIBUTING.md).\r\n\r\nFor translations, visit the [Crowdin project page](https://crowdin.com/project/androidide).\r\n\r\n## Thanks to\r\n\r\n- [Rosemoe](https://github.com/Rosemoe) for the\r\n  awesome [CodeEditor](https://github.com/Rosemoe/sora-editor)\r\n- [Termux](https://github.com/termux) for [Terminal Emulator](https://github.com/termux/termux-app)\r\n- [Bogdan Melnychuk](https://github.com/bmelnychuk)\r\n  for [AndroidTreeView](https://github.com/bmelnychuk/AndroidTreeView)\r\n- [George Fraser](https://github.com/georgewfraser) for\r\n  the [Java Language Server](https://github.com/georgewfraser/java-language-server)\r\n- [Itsaky](https://github.com/itsaky) The original developer\r\n  of [AndroidIDE](https://github.com/AndroidIDEOfficial/AndroidIDE.git) whose project I forked and now maintain.\r\n  \r\nThanks to all the de",
      "default_branch": "dev"
    },
    "fetched_at": "2025-10-15T02:22:58.552429"
  },
  {
    "basic_info": {
      "name": "RoadWeaver",
      "full_name": "shiroha-233/RoadWeaver",
      "owner": "shiroha-233",
      "description": null,
      "url": "https://github.com/shiroha-233/RoadWeaver",
      "clone_url": "https://github.com/shiroha-233/RoadWeaver.git",
      "ssh_url": "git@github.com:shiroha-233/RoadWeaver.git",
      "homepage": null,
      "created_at": "2025-10-02T02:55:05Z",
      "updated_at": "2025-10-15T02:16:00Z",
      "pushed_at": "2025-10-15T01:26:23Z"
    },
    "stats": {
      "stars": 155,
      "forks": 11,
      "watchers": 155,
      "open_issues": 11,
      "size": 130143
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 99487
      },
      "license": "MIT License",
      "topics": []
    },
    "content": {
      "readme": "# 🛤️ RoadWeaver\n\n自动在结构之间编织道路的 Minecraft 模组  \nAutomatically weave roads between structures in Minecraft\n\n[中文](#中文) | [English](#english)\n\n---\n\n<a name=\"english\"></a>\n## 📖 Introduction (Features)\nRoadWeaver automatically generates beautiful road networks between structures (e.g., villages, outposts), focusing on practical, stable, and visually pleasing roads.\n\n### ✨ Core Features\n- 🗺️ Intelligent Path Generation: A* pathfinding to avoid steep or dangerous areas; terrain/biome/stability-aware routing; supports E-W/N-S/diagonal directions\n- 🎨 Road Types: Artificial roads (stone bricks/slabs), natural roads (dirt/gravel), biome-adaptive materials\n- 🏮 Decoration System: Lampposts (redstone lamps with day/night auto control), intermittent fences, distance signs, wayfinding; large decorations (swings, benches, gazebos) with random placement\n- 🧭 Visual Debugging: Road network map; status colors (planned/generating/completed/failed); interactions (drag/zoom/click-to-teleport); statistics for counts, length, and states\n- 🚀 Performance: Multi-threaded async generation with concurrency control; height/terrain caching to reduce redundant computations\n- 📚 Multi-Structure Support （1.0.2 or later）\n\n### 🗺️ Roadmap\n- More decorations? Enrich roadside and pathway ornamentation\n- Link more structure types? Support broader vanilla/modded structure connectivity\n- Link biomes? Strategy-level connections across biome regions\n- More landmark buildings? High-quality scenic builds along roads\n- Journey events? Lightweight encounters while traveling\n- Custom links? Player/datapack-defined connection rules\n\n### 📚 Multi-Structure Support（1.0.2 or later）\nNow supports path-formatted structure IDs (e.g., `mvs:houses/azelea_house`) and wildcard matching:\n- `mvs:houses/*` - Matches all houses from MVS\n- `mvs:*` - Matches all MVS structures\n\nExample:\n```json\n{\n  \"structuresToLocate\": [\n    \"#minecraft:village\",\n    \"mvs:houses/*\",\n    \"mvs:shops/*\"\n  ]\n}\n```\n\n### ⚠️ Notes\n- The higher the \"structures to locate on world load\" value, the longer new world creation will take, but the initial road network completeness increases. Adjust based on your hardware and needs.\n\n### ❓ Why another mod?\n- The author finds Countered's Settlement Roads too limited in scope, while RoadArchitect currently impacts performance more. The goal is to enable diverse, beautiful roadside builds and explore experimental ideas—hence this standalone project.And also created a version that natively supports Forge。\n\n### 🙏 Acknowledgments (References & Licenses)\nThis project references and is inspired by:\n- RoadArchitect (Apache-2.0): https://github.com/Shadscure/RoadArchitect\n- settlement-roads-new (CC0-1.0): https://github.com/Coun7ered/settlement-roads-new\n\n---\n\n<a name=\"中文\"></a>\n## 📖 简介（功能介绍）\nRoadWeaver 能在世界中的结构（如村庄、前哨站等）之间自动生成美观的道路网络，专注\"生成好看、实用、稳定的道路\"。\n\n### ✨ 核心功能\n- 🗺️ 智能路径生成：A* 寻路算法，避开陡峭与危险区域；根据地形高度、生物群系与地面稳定性调整路线；支持东西/南北/对角线方向\n- 🎨 道路类型：人工道路（石砖、石板）、自然道路（泥土、砂砾）、按生物群系自适应材料\n- 🏮 装饰系统：路灯（红石灯与昼夜自动控制）、间断式栏杆、距离标志、路标指引；大型点缀（秋千、长椅、凉亭）随机生成\n- 🧭 可视化调试：道路网络地图；状态颜色（计划/生成/完成/失败）；交互（拖拽、缩放、点击传送）；统计道路数量、长度与状态\n- 🚀 性能优化：多线程异步生成并发控制（最高128线程）；高度与地形缓存减少重复计算\n- 📚 多结构同时链接支持（1.0.2版本以上）\n\n### 🗺️ 未来更新计划（Roadmap）\n- 更多装饰？引入更丰富的道路与路边装饰元素\n- 链接多种结构？支持更多原版/模组结构类型互联√\n- 链接群系？在群系层级建立策略性连接\n- 更多精美建筑？在道路沿线生成高质量景观建筑\n- 路途事件？在旅行途中触发小型事件或遭遇\n- 自定义链接？允许玩家/数据包定义特定连接规则\n\n### 📚 多结构支持（1.0.2版本以上）\n现在支持路径格式的结构ID（例如 `mvs:houses/azelea_house`）和通配符匹配：\n- `mvs:houses/*` - 匹配所有MVS房屋\n- `mvs:*` - 匹配所有MVS结构\n\n示例配置：\n```json\n{\n  \"structuresToLocate\": [\n    \"#minecraft:village\",\n    \"mvs:houses/*\",\n    \"mvs:shops/*\"\n  ]\n}\n```\n\n### ⚠️ 注意事项（Notes）\n- 设置中\"加载世界时定位的结构数量\"越多，创建新世界所需时间越久，但道路网络的初始完整度也更高。请根据设备性能与需求权衡。\n\n### ❓ 有类似的模组为什么还要做？（Why another mod?）\n- 作者认为 Countered's Settlement Roads 的功能偏少，RoadArchitect 在当前阶段对性能影响较大；同时作者希望在道路上看到各类精美建筑，并实现一些更大胆的玩法点子，因此决定开启独立项目以探索这些方向，并且制作了原生支持forge的版本。\n\n### 🙏 致谢（参考与许可）\n本项目参考了以下开源项目（感谢其工作与启发）：\n- RoadArchitect（Apache-2.0）：https://github.com/Shadscure/RoadArchitect\n- settlement-roads-new（CC0-1.0）：https://github.com/Coun7ered/settlement-roads-new\n\n---\n\n让 RoadWeaver 为你的 Minecraft 世界编织出美丽的道路网络！  \nLet RoadWeaver weave beautiful road networks for your Minecraft world! 🛤️✨",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-15T02:22:59.700915"
  },
  {
    "basic_info": {
      "name": "Learning-Stories-Repository",
      "full_name": "ghostmkg/Learning-Stories-Repository",
      "owner": "ghostmkg",
      "description": null,
      "url": "https://github.com/ghostmkg/Learning-Stories-Repository",
      "clone_url": "https://github.com/ghostmkg/Learning-Stories-Repository.git",
      "ssh_url": "git@github.com:ghostmkg/Learning-Stories-Repository.git",
      "homepage": "",
      "created_at": "2025-09-30T12:49:31Z",
      "updated_at": "2025-10-14T19:51:38Z",
      "pushed_at": "2025-10-14T02:55:06Z"
    },
    "stats": {
      "stars": 139,
      "forks": 307,
      "watchers": 139,
      "open_issues": 15,
      "size": 2361
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 3058,
        "Python": 1531
      },
      "license": null,
      "topics": [
        "hacktoberfest",
        "hacktoberfest-accepted",
        "hacktoberfest2025"
      ]
    },
    "content": {
      "readme": "# 🌍 Open Source Learning Stories\n\nWelcome to **Open Source Learning Stories**! 🎉 This project is a community-driven collection of personal experiences, case studies, and learning journeys in the world of open source.\n\nWhether you're a beginner making your **first Hacktoberfest PR**, or an experienced contributor sharing your **success story**, this repo is the place to document it. ✨\n\n---\n\n## 📌 Why We Built This Project\n\n* To inspire **new contributors** by showing real-world journeys.\n* To create a **knowledge hub** with case studies, tutorials, and personal stories.\n* To provide a **non-code Hacktoberfest contribution** option.\n\n---\n\n## 🛠 How to Contribute\n\nThis project is open to everyone—Beginners, Students, and Professionals! You don't need to write code; just share your experience.\n\n1.  **Fork this repository** 🍴\n2.  Create a new Markdown file inside the `stories/` folder.\n    * Example: `stories/your-name.md`\n3.  **Share your story** using the template below:\n\n### Story Template\n\nFollow this simple structure for your file:\n\n```markdown\n# My Open Source Journey ✨\n\n**👤 Name:** Your Name\n**📅 First Contribution:** Month Year\n**🔧 Tools/Tech Used:** e.g. Python, FastAPI, GitHub\n**🌟 My Experience:** (Write 5–10 lines about your journey)\n**📌 Advice for Beginners:** (Share one impactful tip)\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-15T02:23:00.811193"
  },
  {
    "basic_info": {
      "name": "java-producer",
      "full_name": "bitDive/java-producer",
      "owner": "bitDive",
      "description": "java producer for bitdive system",
      "url": "https://github.com/bitDive/java-producer",
      "clone_url": "https://github.com/bitDive/java-producer.git",
      "ssh_url": "git@github.com:bitDive/java-producer.git",
      "homepage": null,
      "created_at": "2025-10-03T12:42:55Z",
      "updated_at": "2025-10-14T23:31:52Z",
      "pushed_at": "2025-10-07T11:08:53Z"
    },
    "stats": {
      "stars": 118,
      "forks": 8,
      "watchers": 118,
      "open_issues": 0,
      "size": 203
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 390496
      },
      "license": "Other",
      "topics": []
    },
    "content": {
      "readme": "",
      "default_branch": "master"
    },
    "fetched_at": "2025-10-15T02:23:01.924688"
  },
  {
    "basic_info": {
      "name": "android-wifi-pojie",
      "full_name": "bszapp/android-wifi-pojie",
      "owner": "bszapp",
      "description": "Android使用密码本暴力破解wifi密码工具",
      "url": "https://github.com/bszapp/android-wifi-pojie",
      "clone_url": "https://github.com/bszapp/android-wifi-pojie.git",
      "ssh_url": "git@github.com:bszapp/android-wifi-pojie.git",
      "homepage": "",
      "created_at": "2025-09-22T13:54:39Z",
      "updated_at": "2025-10-14T16:06:49Z",
      "pushed_at": "2025-10-08T04:06:55Z"
    },
    "stats": {
      "stars": 108,
      "forks": 7,
      "watchers": 108,
      "open_issues": 4,
      "size": 6481
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 219273
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "# wifi密码工具\n一款通过暴力破解密码本的方式连接wifi的工具\n\n~~视频演示地址： [自制安卓免Root wifi密码暴力破解工具v2.1](https://www.bilibili.com/video/BV1EbxjzZExd/)~~（稿件被锁定且被封号）\n\n视频演示地址： [MEGA云盘](https://mega.nz/embed/ShY1GKCB#i5Weok9p_Svrm2wTX92CiOF1O8V4y67e_6gCHtF6vFc)\n\n\n<div align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/bszapp/android-wifi-pojie/refs/heads/main/1.png\" style=\"width: 49%; display: inline-block; margin: 0 0.5%;\">\n  <img src=\"https://raw.githubusercontent.com/bszapp/android-wifi-pojie/refs/heads/main/2.png\" style=\"width: 49%; display: inline-block; margin: 0 0.5%;\">\n</div>\n\n### 免责声明\n破解他人wifi密码属于违法行为，本工具仅供网络安全测试使用，请对自己的wifi尝试，**勿用于非法用途，因此造成的后果与作者无关，继续使用代表同意此条款**\n\n## 使用说明\n\n### 操作流程\n1. 选择wifi（选择/手动输入名称）\n2. 选择密码本（建议几千行的级别，太长时间过长还可能会崩溃）\n3. 调整参数（根据wifi信号强度调整超时时间，建议先测量密码错误需要的时间然后取一半）\n4. 开始运行\n\n### 注意事项\n- 好的配置参数可以取得更好的效果\n- 请在运行前检查系统网络设置关闭所有自动连接wifi\n\n### 后台运行\n如果需要再后台运行任务，推荐读取状态方式选择命令行，系统API模式请让应用处于画中画或者小窗模式，否则会导致收不到状态变化事件。\n读取方式为命令行时请给应用电池优化设置为无限制，并且对于各系统的手机需要进行额外操作（如小米需要锁定任务、添加自启动权限）\n\n### Q&A\n#### 为什么明明密码对了还是显示timeout？\n可能是后台运行无法读取到状态或者命令行格式不支持，请尝试切换读取网络连接状态工作模式\n\n#### 为什么每个密码要尝试好几秒，能不能快点？\n连接失败标志最推荐使用“握手超次”模式，最快可以缩短时间到0.5秒以内，条件不支持可以使用“握手超时”模式，同样可以缩短到1秒左右\n\n#### 单线程太慢了，为什么不能多线程运行？\nAndroid系统没有提供同时连接多个wifi的功能，并且硬件不支持这样的行为\n\n#### 为什么不能用aircrack-ng来抓握手包本地跑字典？\n本项目类似幻影wifi控制系统连接指定网络，支持监听模式的手机比较少见，如果需要这种操作推荐单独购买硬件或者使用电脑\n\n## 工作原理\n```\n忘记此网络\n开始监听wifi连接事件\n遍历wifi密码本：\n|\t使用ssid和密码连接wifi\n|\t等待监听结果\n|\t失败/超时：\n|\t|\t忘记此网络\n|\t|\t更新进度显示\n|\t成功：\n|\t|\t停止监听wifi\n|\t|\t结束运行\n全部遍历完成：\n|\t停止监听wifi\n|\t结束运行\n```\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-15T02:23:03.042509"
  },
  {
    "basic_info": {
      "name": "OpenMyau",
      "full_name": "60124808866/OpenMyau",
      "owner": "60124808866",
      "description": "Myau Client for those who can’t afford it.",
      "url": "https://github.com/60124808866/OpenMyau",
      "clone_url": "https://github.com/60124808866/OpenMyau.git",
      "ssh_url": "git@github.com:60124808866/OpenMyau.git",
      "homepage": "",
      "created_at": "2025-10-02T08:40:32Z",
      "updated_at": "2025-10-15T00:51:30Z",
      "pushed_at": "2025-10-13T21:08:44Z"
    },
    "stats": {
      "stars": 85,
      "forks": 48,
      "watchers": 85,
      "open_issues": 3,
      "size": 809
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 789383
      },
      "license": "GNU General Public License v3.0",
      "topics": []
    },
    "content": {
      "readme": "# Open Myau\n\n![Preview](/images/image2.png)\n\n[Myau Client](https://myau.sell.app/), for those who can’t afford it.\n\nBased on **`Myau-250910`**, with added features and improvements not found in the original, focused on expanding and refining the original Myau client.\n\n[![Discord](https://invidget.switchblade.xyz/SEgRBbmX)](https://discord.gg/SEgRBbmX)\n\n## Changes\n\n* Added Click GUI (ported from Raven B3 by blowsy)\n* Fixed bugs\n\nIf you encounter an issue or have a feature suggestion, please [create an issue](https://github.com/60124808866/OpenMyau/issues).\n\n## Building\n\n```bash\n./gradlew build\n```\n\n## Contributing\n\nYou can open an issue or submit a pull request to help improve Open Myau.\n\nIf you’re interested in co-developing or have questions, feel free to reach out:\n\n* Discord: `60124808866_88040`",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-15T02:23:04.169429"
  },
  {
    "basic_info": {
      "name": "ResourcePoison",
      "full_name": "michalbednarski/ResourcePoison",
      "owner": "michalbednarski",
      "description": "Writeup and exploit for CVE-2025-22441: Privilege escalation from installed app to SystemUI process on Android due to pass of untrusted ApplicationInfo to LoadedApk",
      "url": "https://github.com/michalbednarski/ResourcePoison",
      "clone_url": "https://github.com/michalbednarski/ResourcePoison.git",
      "ssh_url": "git@github.com:michalbednarski/ResourcePoison.git",
      "homepage": null,
      "created_at": "2025-10-08T13:12:13Z",
      "updated_at": "2025-10-14T15:20:48Z",
      "pushed_at": "2025-10-08T13:12:40Z"
    },
    "stats": {
      "stars": 75,
      "forks": 15,
      "watchers": 75,
      "open_issues": 0,
      "size": 112
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 19011
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "Fix for this issue has appeared as CVE-2025-22441: [bulletin](https://source.android.com/docs/security/bulletin/2025-08-01#framework) [patch](https://android.googlesource.com/platform/frameworks/base/+/60335b2eae7311fe6e10e140b64489008a38a5a8%5E%21/) [follow up](https://android.googlesource.com/platform/frameworks/base/+/37bf5823504f2a256f128123393cd149721b87fc%5E%21/#F0)\n\n# Passing `ApplicationInfo` around\n\n[`ApplicationInfo`](https://developer.android.com/reference/android/content/pm/ApplicationInfo) is structure defining various information about installed app, most notably path to apk file from which resources and code are loaded\n\nUsually it is passed from system to applications, however sometimes there are cases where non-system caller could provide own one. For example in the past that was [vulnerability in `bindBackupAgent()` method, where attacker could pass in parameter own `ApplicationInfo` object with `uid` and `sourceDir` values and they weren't checked against what apps are really installed in system](https://seclists.org/fulldisclosure/2015/Apr/52), because that method was meant to be called internally by `system_server`, but was exposed to `adb shell`\n\nThis time though, I've looked closely at [`ApplicationInfo` field within `RemoteViews`](https://cs.android.com/android/platform/superproject/main/+/main:frameworks/base/core/java/android/widget/RemoteViews.java;l=356;drc=978f80da915fe0a64d0b6425ce30d5359563b5e9)\n\n`RemoteViews` is object describing view that can come from another process. This most notably is [used for home screen widgets](https://developer.android.com/guide/topics/appwidgets#handle-events), where app providing widget builds `RemoteViews` and then it is [\"applied\"](https://developer.android.com/reference/android/widget/RemoteViews#apply(android.content.Context,%20android.view.ViewGroup)) within home screen process\n\nOther places where `RemoteViews` are used are [notifications](https://developer.android.com/reference/android/app/Notification.Builder#setCustomBigContentView(android.widget.RemoteViews)) (applied by SystemUI process) and [autofill dialogs](https://developer.android.com/reference/android/service/autofill/Presentations.Builder#setDialogPresentation(android.widget.RemoteViews)) (provided by autofill service, applied by `system_server`)\n\n`RemoteViews.mApplication` field is serialized through `Parcel` and therefore may come from remote processes and whenever `RemoteViews` are applied it is used by following method [(snippet source)](https://cs.android.com/android/platform/superproject/main/+/main:frameworks/base/core/java/android/widget/RemoteViews.java;l=6545-6561;drc=978f80da915fe0a64d0b6425ce30d5359563b5e9):\n\n```java\nprivate Context getContextForResourcesEnsuringCorrectCachedApkPaths(Context context) {\n    if (mApplication != null) {\n        if (context.getUserId() == UserHandle.getUserId(mApplication.uid)\n                && context.getPackageName().equals(mApplication.packageName)) {\n            return context;\n        }\n        try {\n            LoadedApk.checkAndUpdateApkPaths(mApplication);\n            return context.createApplicationContext(mApplication,\n                    Context.CONTEXT_RESTRICTED);\n        } catch (NameNotFoundException e) {\n            Log.e(LOG_TAG, \"Package name \" + mApplication.packageName + \" not found\");\n        }\n    }\n\n    return context;\n}\n```\n\nMost interesting here is `LoadedApk.checkAndUpdateApkPaths()` call, as this is static method and will modify some global state [(snippet source)](https://cs.android.com/android/platform/superproject/main/+/main:frameworks/base/core/java/android/app/LoadedApk.java;l=2275-2302;drc=5916ee589c4880e2d8a1a9ad6dc852108e4c44c1)\n\n```java\npublic static void checkAndUpdateApkPaths(ApplicationInfo expectedAppInfo) {\n    // Get the LoadedApk from the cache\n    ActivityThread activityThread = ActivityThread.currentActivityThread();\n    if (activityThread == null) {\n        Log.e(TAG, \"Cannot find activity thread\");\n        return;\n    }\n    checkAndUpdateApkPaths(activityThread, expectedAppInfo, /* cacheWithCode */ true);\n    checkAndUpdateApkPaths(activityThread, expectedAppInfo, /* cacheWithCode */ false);\n}\n\nprivate static void checkAndUpdateApkPaths(ActivityThread activityThread,\n        ApplicationInfo expectedAppInfo, boolean cacheWithCode) {\n    String expectedCodePath = expectedAppInfo.getCodePath();\n    LoadedApk loadedApk = activityThread.peekPackageInfo(\n            expectedAppInfo.packageName, /* includeCode= */ cacheWithCode);\n    // If there is load apk cached, or if the cache is valid, don't do anything.\n    if (loadedApk == null || loadedApk.getApplicationInfo() == null\n            || loadedApk.getApplicationInfo().getCodePath().equals(expectedCodePath)) {\n        return;\n    }\n    // Duplicate framework logic\n    List<String> oldPaths = new ArrayList<>();\n    LoadedApk.makePaths(activityThread, expectedAppInfo, oldPaths);\n\n    // Force update the LoadedApk instance, which should update the r",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-15T02:23:05.297936"
  },
  {
    "basic_info": {
      "name": "Java-humanify",
      "full_name": "Initial-One/Java-humanify",
      "owner": "Initial-One",
      "description": "Deobfuscate Java code using LLMs (\"ChatGPT,Ollama,DeepSeek,etc.\")",
      "url": "https://github.com/Initial-One/Java-humanify",
      "clone_url": "https://github.com/Initial-One/Java-humanify.git",
      "ssh_url": "git@github.com:Initial-One/Java-humanify.git",
      "homepage": "",
      "created_at": "2025-10-02T07:02:53Z",
      "updated_at": "2025-10-13T02:13:38Z",
      "pushed_at": "2025-10-03T09:39:41Z"
    },
    "stats": {
      "stars": 69,
      "forks": 16,
      "watchers": 69,
      "open_issues": 0,
      "size": 83
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 135902
      },
      "license": "Apache License 2.0",
      "topics": []
    },
    "content": {
      "readme": "# Java Humanify\n> Deobfuscate Java code using LLMs (\"ChatGPT, Ollama, DeepSeek, etc.\")\n\nJava Humanify uses large language models (OpenAI, DeepSeek, Ollama, etc.) to **suggest better names** (classes, methods, fields, locals).  \nAll actual code changes happen on the **AST** (JavaParser + Symbol Solver), so the output stays **semantically 1:1** with the input.\n\nNow it also supports **auto-Javadoc generation** for classes/constructors/methods via `annotate` (LLM or offline heuristics).\n\nInspired by **HumanifyJS** — but for Java bytecode turned into decompiled sources.\n\n---\n\n## Why this exists\n\nDecompiled / minified / obfuscated Java is painful to read:\n\n```java\npackage demo.mix;public final class a{private static final int[] O={0,1,1,2};private a(){}public static int h(String s){long x=0x811c9dc5L;if(s==null)return 0;int i=0,n=s.length(),j=O[2];while(i<n){char c=s.charAt(i++);x^=c;x*=0x01000193L;x&=0xffffffffL;j^=(c<<1);j^=j>>>7;if((i&3)==0)x^=(j&0xff);}return (int)x;}}\n```\n\nJava Humanify renames identifiers **and (optionally) adds Javadoc**:\n\n```java\npackage demo.mix;\n\n/**\n * Computes a 32-bit hash for the input string using FNV-1a with additional state mixing.\n */\npublic final class HashCalculator {\n\n    private static final int[] O = { 0, 1, 1, 2 };\n\n    /**\n     * Private constructor to prevent instantiation of this utility class.\n     */\n    private HashCalculator() {}\n\n    /**\n     * Calculates a 32-bit hash value for the input string using FNV-1a with additional state mixing.\n     *\n     * @param inputString parameter\n     * @return return value\n     */\n    public static int calculateHash(String inputString) {\n        long storedValue = 0x811c9dc5L;\n        if (inputString == null) return 0;\n        int index = 0, stringLength = inputString.length(), hashState = O[2];\n        while (index < stringLength) {\n            char currentChar = inputString.charAt(index++);\n            storedValue ^= currentChar;\n            storedValue *= 0x01000193L;\n            storedValue &= 0xffffffffL;\n            hashState ^= (currentChar << 1);\n            hashState ^= hashState >>> 7;\n            if ((index & 3) == 0) storedValue ^= (hashState & 0xff);\n        }\n        return (int) storedValue;\n    }\n}\n```\n\nLLMs do **not** touch your code structure.  \nThey only propose names / comments. Renaming is applied on the AST with symbol resolution; constructors/imports/file names kept in sync.\n\n---\n\n## Highlights\n\n- **Pluggable LLMs** for rename & docs: OpenAI / DeepSeek / Local (Ollama, OpenAI-compatible)\n- **Auto-Javadoc** via `annotate`:\n  - Targets classes/enums/records/constructors/methods\n  - Short, safe summaries (no wild guesses)\n  - Auto `@param/@return/@throws` based on signatures\n  - **Offline heuristics** available (no API key needed)\n- **Signature-accurate renames** (classFqn / methodSig / fieldFqn with fallbacks)\n- Robust AST transforms keep code compiling\n\n---\n\n## Quick start\n\n### One-shot pipeline (analyze → suggest → apply → annotate)\n\n```bash\n# OpenAI example\nexport OPENAI_API_KEY=sk-xxxx\njava -jar target/java-humanify-*.jar humanify \\\n--provider openai \\\n--model gpt-4o-mini \\\nsamples/src samples/out\n```\n\n```bash\n# DeepSeek example\nexport DEEPSEEK_API_KEY=sk-xxxx\njava -jar target/java-humanify-*.jar humanify \\\n--provider deepseek \\\n--model deepseek-chat \\\nsamples/src samples/out\n```\n\n```bash\n# Local (Ollama) example\n# make sure model is pulled: ollama run llama3.1:8b    \njava -jar target/java-humanify-*.jar humanify \\\n--provider local \\\n--local-api ollama \\\n--endpoint http://localhost:11434 \\\n--model llama3.1:8b \\\nsamples/src samples/out\n```\n\n> `humanify` will:\n> 1) analyze → 2) suggest → 3) apply → 4) annotate  \n> Use `--lang/--style/--overwrite` to control the annotate step.\n\n---\n\n## CLI commands\n\nYou can also run steps individually.\n\n### 1) Analyze\n```bash\njava -jar java-humanify.jar analyze \\\n<srcDir> <snippets.json> \\\n[--maxBodyLen 1600] \\\n[--includeStrings true] \\\n[--exclude \"glob/**\"]\n```\nOutputs `snippets.json` with per-method code & metadata (package, FQN, signature, strings).\n\n---\n\n### 2) Suggest\n```bash\njava -jar java-humanify.jar suggest \\\n<snippets.json> <mapping.json> \\\n[--provider dummy|openai|deepseek|local] \\\n[--model gpt-4o-mini|deepseek-chat|<local-model>] \\\n[--batch 12] [--endpoint http://localhost:11434] \\\n[--local-api ollama|openai] \\\n[--timeout-sec 180] \n```\nAuth options: **OpenAI** `OPENAI_API_KEY`, **DeepSeek** `DEEPSEEK_API_KEY`, **Local**: `--endpoint + --model`.\n\n---\n\n### 3) Apply\n```bash\njava -jar java-humanify.jar apply \\\n<srcDir> <mapping.json> <outDir> \\\n[--classpath jarOrDir[:morePaths]]\n```\nRenames classes/constructors/imports/new expressions/methods/fields/locals with conflict checks; updates file names.  \n`--classpath` helps Symbol Solver.\n\n---\n\n### 4) Annotate (NEW)\n```bash\njava -jar java-humanify.jar annotate \\\n--src <dir[,dir2,...]> \\\n[--lang en|zh] \\\n[--style concise|detailed] \\\n[--overwrite] \\\n[--provider dummy|openai|deepseek|local] \\\n[--model <model-name>] \\\n[--local",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-15T02:23:06.471850"
  },
  {
    "basic_info": {
      "name": "FHook",
      "full_name": "Rift0911/FHook",
      "owner": "Rift0911",
      "description": null,
      "url": "https://github.com/Rift0911/FHook",
      "clone_url": "https://github.com/Rift0911/FHook.git",
      "ssh_url": "git@github.com:Rift0911/FHook.git",
      "homepage": null,
      "created_at": "2025-09-16T06:06:06Z",
      "updated_at": "2025-10-15T01:38:45Z",
      "pushed_at": "2025-09-20T13:04:22Z"
    },
    "stats": {
      "stars": 62,
      "forks": 6,
      "watchers": 62,
      "open_issues": 0,
      "size": 7944
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 150195,
        "C": 78424,
        "C++": 32511,
        "CMake": 2695
      },
      "license": "Apache License 2.0",
      "topics": []
    },
    "content": {
      "readme": "<p align=\"right\">Language: <b>English</b> · <a href=\"README.cn.md\">Chinese</a></p>\n\n# FHook\n\n**Full-function HOOK framework for the Android Java layer**\n\n* **debug mode** — initialize and use directly inside the app\n* **Android 9+ (API 28+)**, including the latest versions\n* Intercept and modify **arguments/return values** of any **Java method**\n* **Class/instance-wide batch hooks**, covering common **system hotspots** (class loading, device fingerprint, SharedPreferences writes, etc.)\n* Three integration options: Gradle dependency (`implementation`), source integration (module/source copy), and (under compliance) app injection (repack or dynamic loading)\n\n> For **lawful** security research, testing, and debugging only. Ensure you have proper authorization for any target.\n\n---\n\n## 1. What problem does it solve?\n\n* **Rapid observation**: print call stacks/args/returns at runtime without touching target code\n* **Temporary patching**: tweak args/returns or feed “mock data” to verify branches\n* **Batch coverage**: one-click hook for all methods on a class/instance to accelerate debugging and regression\n* **System hotspot auditing**: `Class.forName` / `ClassLoader.loadClass` / `Settings.Secure.getString` /\n  `System.loadLibrary`, etc. can be intercepted and logged\n\n---\n\n## 2. Scenarios & Environment\n\n* **Environment**: Android 9+ (API 28+); works with Kotlin/Java projects\n* **Scenarios**: feature co-debugging, gray-box testing, automated acceptance, critical-path tracing & audit, crash triage\n* **No dependency on** Xposed / Magisk / Root\n\n---\n\n## 3. Quick Start\n\n### 3.1 Add JitPack repository\n\nAdd to **`settings.gradle`** or the root **`build.gradle`**:\n\n```groovy\ndependencyResolutionManagement {\n  repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\n  repositories {\n    mavenCentral()\n    maven { url 'https://jitpack.io' }\n  }\n}\n```\n\n> Kotlin DSL: `maven(url = \"https://jitpack.io\")`\n\n### 3.2 Add dependency\n\nIn your **app module**:\n\n```groovy\ndependencies {\n  implementation \"com.github.Rift0911:fhook:+\"\n}\n```\n\n### 3.3 Initialize (auto / manual)\n\n**Option A: Auto init in `attachBaseContext`**\n\n```java\n@Override\nprotected void attachBaseContext(Context base) {\n    Log.d(TAG, \"attachBaseContext\");\n    if (FCFG.IS_APP_INIT_AUTO) {\n        Log.i(TAG, \"attachBaseContext FHook.init= \" + FHook.init(base));\n    }\n    super.attachBaseContext(base);\n}\n```\n\n**Option B: Manual init anywhere (e.g., button click)**\n\n```java\nbt_main_02.setOnClickListener(v -> {\n    if (FHook.isInited()) {\n        FHook.unInit();\n    } else {\n        if (!FHook.init(this)) {\n            Toast.makeText(this, \"Init failed\", Toast.LENGTH_LONG).show();\n            Log.e(TAG, \"Init failed\");\n        } else {\n            Toast.makeText(this, \"Init success\", Toast.LENGTH_LONG).show();\n            Log.i(TAG, \"Init success\");\n        }\n    }\n});\n```\n\n> Handy calls: `FHook.unHookAll()` to remove all hooks; `FHook.showHookInfo()` to view current hook status.\n\n### 3.4 Minimal runnable samples\n\n#### A) Hook a regular app method\n\nTake `THook.fun_I_III(int a, int b, int c): int` as an example — **modify args and return**:\n\n```java\nimport java.lang.reflect.Method;\nimport android.util.Log;\n\nMethod m = THook.class.getMethod(\"fun_I_III\", int.class, int.class, int.class);\n\nFHook.hook(m)\n    .setOrigFunRun(true) // run the original method first\n    .setHookEnter((thiz, args, types, hh) -> {\n        // change the first argument\n        args.set(0, 6666);\n        Log.d(\"FHook\", \"fun_I_III enter: \" + args);\n    })\n    .setHookExit((ret, type, hh) -> {\n        // force the return value\n        Log.d(\"FHook\", \"fun_I_III exit, origRet=\" + ret);\n        return 8888;\n    })\n    .commit();\n```\n\n#### B) Hook a system method (device fingerprint sample)\n\nTake `Settings.Secure.getString(ContentResolver, String)` — **forge ANDROID\\_ID** selectively:\n\n```java\nimport android.provider.Settings;\nimport android.content.ContentResolver;\nimport java.lang.reflect.Method;\nimport android.util.Log;\n\nMethod sysGet = Settings.Secure.class.getMethod(\n        \"getString\", ContentResolver.class, String.class);\n\nFHook.hook(sysGet)\n    .setOrigFunRun(true)\n    .setHookEnter((thiz, args, types, hh) -> {\n        String key = (String) args.get(1);\n        hh.extras.put(\"key\", key);\n        Log.d(\"FHook\", \"Settings.Secure.getString key=\" + key);\n    })\n    .setHookExit((ret, type, hh) -> {\n        String key = (String) hh.extras.get(\"key\");\n        if (\"android_id\".equalsIgnoreCase(key)) {\n            return \"a1b2c3d4e5f6a7b8\"; // affect ANDROID_ID only\n        }\n        return ret; // keep others intact\n    })\n    .commit();\n```\n\n> Tip: for interface/bridge methods (e.g., `SharedPreferences.Editor.commit`), use\n> `FHookTool.findMethod4Impl(editor, ifaceMethod)` to locate the **actual implementation method** before hooking for a higher success rate.\n\n---\n\n### 3.5 Constructor Hook Samples (System & Custom)\n\n> Notes: By definition, a **constructor always runs**; `setOrigFunRun(true/false)` **has",
      "default_branch": "master"
    },
    "fetched_at": "2025-10-15T02:23:07.574566"
  },
  {
    "basic_info": {
      "name": "Ims",
      "full_name": "vvb2060/Ims",
      "owner": "vvb2060",
      "description": null,
      "url": "https://github.com/vvb2060/Ims",
      "clone_url": "https://github.com/vvb2060/Ims.git",
      "ssh_url": "git@github.com:vvb2060/Ims.git",
      "homepage": null,
      "created_at": "2025-10-12T13:31:19Z",
      "updated_at": "2025-10-15T00:08:28Z",
      "pushed_at": "2025-10-12T13:34:59Z"
    },
    "stats": {
      "stars": 59,
      "forks": 2,
      "watchers": 59,
      "open_issues": 1,
      "size": 53
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 5937
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "",
      "default_branch": "master"
    },
    "fetched_at": "2025-10-15T02:23:08.675419"
  },
  {
    "basic_info": {
      "name": "retry-wheel-parent",
      "full_name": "Dengmuuuu/retry-wheel-parent",
      "owner": "Dengmuuuu",
      "description": null,
      "url": "https://github.com/Dengmuuuu/retry-wheel-parent",
      "clone_url": "https://github.com/Dengmuuuu/retry-wheel-parent.git",
      "ssh_url": "git@github.com:Dengmuuuu/retry-wheel-parent.git",
      "homepage": null,
      "created_at": "2025-09-19T09:56:22Z",
      "updated_at": "2025-09-27T11:21:15Z",
      "pushed_at": "2025-09-26T06:15:49Z"
    },
    "stats": {
      "stars": 56,
      "forks": 6,
      "watchers": 56,
      "open_issues": 0,
      "size": 245
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 136266
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "# ResilientWheel\n一款基于 Netty HashedWheelTimer 的高可用分布式重试引擎，当前采用 MySQL 持久化 + 分布式抢占/粘滞租约，未来可无缝迁移至 Redis 等存储。\n\n## 模块结构\n\n```\nretry-wheel-parent/\n├─ retry-wheel-spring-boot3-starter/ # Starter：核心引擎、自动装配、SPI、Mapper 等\n└─ sql/ # 初始化/清理 SQL（建表、索引）\n```\n\n\n---\n\n## 快速开始\n\n### 1) 引入依赖\n\n```xml\n<dependency>\n  <groupId>com.fastretry</groupId>\n  <artifactId>retry-wheel-spring-boot3-starter</artifactId>\n  <version>${latest}</version>\n</dependency>\n```\n### 2) 初始化数据库\n\n执行 sql/schema.sql (建表、索引、枚举/注释；包含 retry_task 表及必要索引).\n\n3) 启用与配置（application.yml）\n```yml\nretry:\n  stick:\n    enable: true\n    lease-ttl: 30s\n    renew-ahead: 10s\n  tx:\n    propagation: REQUIRED\n    read-only: false\n    isolation: DEFAULT\n    timeout-seconds: 10\n  wheel:\n   tick-duration: 100ms\n   ticks-per-wheel: 512\n   max-pending-timeouts: 100000\n  scan:\n   initial-delay: 1000\n   period: 2000\n   batch: 200\n  executor:\n   core-pool-size: 8\n   max-pool-size: 32\n   queue-capacity: 1000\n   keep-alive: 60s\n   rejected-handler: CALLER_RUNS\n  backoff:\n   strategy: exponential\n   base: 1s\n   min: 500ms\n   max: 300s\n   jitter-ratio: 0.2\n  default-max-retry: 5\n  default-execute-timeout: 10s\n\n```\n### 4) 注册任务处理器示例\n```JAVA\n@Service(value = \"test-biz\")\npublic class CallHandler implements RetryTaskHandler<PayloadModel> {\n    @Override\n    public boolean supports(String bizType) {\n        return \"test-biz\".equals(bizType);\n    }\n\n    @Override\n    public boolean execute(RetryTaskContext ctx, PayloadModel payload) throws Exception {\n        // 模拟失败\n        if (payload.getSimulateStatus() == 500) {\n            throw new RuntimeException(\"remote 500\");\n        }\n        if (payload.getSimulateStatus() == 408) {\n            Thread.sleep(5000);\n        }\n        return true;\n    }\n\n    @Override\n    public TypeReference<PayloadModel> payloadType() {\n        return new TypeReference<PayloadModel>() {};\n    }\n}\n```\n### 5) 投递任务\n```JAVA\nSubmitOptions opt = SubmitOptions.builder()\n  .maxRetry(8)\n  .priority(10)\n  .executeTimeoutMs(4000)\n  .backoffStrategy(\"exponential\")\n  .delay(Duration.ofSeconds(0))\n  .deadline(Instant.now().plus(Duration.ofMinutes(10)))\n  .build();\nPayloadModel payload = new PayloadModel();\npayload.setBody(\"hello world\");\npayload.setUrl(\"www.baidu.com\");\npayload.setSimulateStatus(408);\nString taskId = engine.submit(\"test-biz\", payload, opt);\nreturn Map.of(\"taskId\", taskId);\n```\n\n\n\n# 通知模块重构\n\n> 为重试框架提供 **可插拔、可路由、可限流、可观测** 的通知能力。支持单条通知，覆盖 DLQ、最大重试、不可重试失败、接管、续约失败、引擎异常、持久化异常等事件。\n\n---\n\n## 特性\n\n- **SPI 可插拔**：`Notifier` 接口，内置 `LoggingNotifier`，支持自定义（如 飞书/钉钉/kim）。\n- **异步派发**：`AsyncNotifyingService` 独立线程池 + 指数退避重试，不阻塞主流程。\n- **路由/过滤**：按事件/业务路由到不同通道；\n- **可观测性**：Micrometer 指标 + 结构化日志。\n- **开关友好**：通过`NotifyingFacade`封装`AsyncNotifyingService`, `retry.notify.enabled=false`时不装配异步实现, 由门面内部自动降级为NOOP，调用方零判空，无NPE风险。\n\n---\n\n## 快速开始\n\n### 1) 引入（在 Starter 中已自动装配）\n\n确保引入 `retry-wheel-spring-boot3-starter`，通知模块随 Starter 自动装配。\n\n### 2) 配置\n\n```yaml\nretry:\n  notify:\n    enabled: true         \n    async:\n      core-pool-size: 2\n      max-pool-size: 4\n      queue-capacity: 2000\n      keep-alive: 30s\n    rate-limit:\n      window: 30s                # 限流窗口\n      threshold: 50                  # 限流阈值\n```\n\n### 3) 事件模型/严重级别\n```JAVA\n// 事件模型\npublic enum NotifyEventType {\n  DEAD_LETTER,\n  MAX_RETRY_REACHED,\n  NON_RETRYABLE_FAILED,\n  TAKEOVER,\n  LEASE_RENEW_FAILED,\n  PERSIST_FAILED,\n  ENGINE_ERROR\n}\n\n// 事件严重级别\npublic enum Severity { INFO, WARNING, ERROR, CRITICAL }\n\n```\n### 4) 通知上下文\n```JAVA\npublic class NotifyContext {\n    private NotifyEventType type;\n    private String nodeId;\n    private String bizType;\n    private String taskId;\n    private String tenantId;\n    private Integer retryCount;\n    private Integer maxRetry;\n    // 自定义分类码，如 TIMEOUT/NO_HANDLER/SERDE_ERROR\n    private String reasonCode;\n    // 可被截断/脱敏\n    private String lastError;\n    // 事件发生时间\n    private Instant when;\n    // 额外字段：shardKey、owner、fence、nextTriggerTime 等\n    private Map<String, Object> attributes ;\n}\n```\n\n### 5) 通知上下文构造工具类\n```JAVA\npublic final class NotifyContexts {\n\n    private static final int MAX_ERROR_LEN = 4000;\n\n    private NotifyContexts() {}\n\n    /* ========== 对外入口（使用系统UTC时钟） ========== */\n\n    public static NotifyContext ctxForDlq(String nodeId, RetryTaskEntity t, Throwable e, String reasonCode) {\n        return ctxForDlq(nodeId, t, e, reasonCode, Clock.systemUTC().withZone(ZoneOffset.ofHours(8)).withZone(ZoneOffset.ofHours(8)));\n    }\n\n    public static NotifyContext ctxForMaxRetry(String nodeId, RetryTaskEntity t, Throwable e) {\n        return ctxForMaxRetry(nodeId, t, e, Clock.systemUTC().withZone(ZoneOffset.ofHours(8)));\n    }\n\n    public static NotifyContext ctxForNonRetryable(String nodeId, RetryTaskEntity t, Throwable e) {\n        return ctxForNonRetryable(nodeId, t, e, Clock.systemUTC().withZone(ZoneOffset.ofHours(8)));\n    }\n\n    public static NotifyContext ctxForTakeover(\n            String newOwnerNodeId, String taskId, String bizType, String tenantId,\n            String oldOwnerNodeId, long oldFence, long newFence) {\n ",
      "default_branch": "master"
    },
    "fetched_at": "2025-10-15T02:23:09.906981"
  },
  {
    "basic_info": {
      "name": "agentscope-java",
      "full_name": "agentscope-ai/agentscope-java",
      "owner": "agentscope-ai",
      "description": "AgentScope Java: Agent-Oriented Programming for Building LLM Applications",
      "url": "https://github.com/agentscope-ai/agentscope-java",
      "clone_url": "https://github.com/agentscope-ai/agentscope-java.git",
      "ssh_url": "git@github.com:agentscope-ai/agentscope-java.git",
      "homepage": "",
      "created_at": "2025-09-23T04:37:43Z",
      "updated_at": "2025-10-14T23:54:30Z",
      "pushed_at": "2025-10-11T08:56:30Z"
    },
    "stats": {
      "stars": 55,
      "forks": 5,
      "watchers": 55,
      "open_issues": 2,
      "size": 186
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 432921
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "<p align=\"center\">\n  <img\n    src=\"https://img.alicdn.com/imgextra/i1/O1CN01nTg6w21NqT5qFKH1u_!!6000000001621-55-tps-550-550.svg\"\n    alt=\"AgentScope Logo\"\n    width=\"200\"\n  />\n</p>\n\n## AgentScope Implementation for Java\n<font style=\"color:rgb(31, 35, 40);\">This is the Java implementation of </font>[<font style=\"color:rgb(9, 105, 218);\">AgentScope</font>](https://github.com/agentscope-ai/agentscope/)<font style=\"color:rgb(31, 35, 40);\">. Please note that this project is still experimental and under active development.</font>\n\n\n![](https://img.shields.io/badge/GUI-AgentScope_Studio-blue?logo=look&logoColor=green&color=dark-green)![](https://img.shields.io/badge/license-Apache--2.0-black)\n\n## ✨ Why AgentScope?\nEasy for beginners, powerful for experts.\n\n+ **Transparent to Developers**: Transparent is our **FIRST principle**. Prompt engineering, API invocation, agent building, workflow orchestration, all are visible and controllable for developers. No deep encapsulation or implicit magic.\n+ Realtime Steering: Native support for realtime interruption and customized handling.\n+ **More Agentic**: Support agentic tools management, agentic long-term memory control and agentic RAG, etc.\n+ **Model Agnostic**: Programming once, run with all models.\n+ **LEGO-style Agent Building**: All components are **modular** and **independent**.\n+ **Multi-Agent Oriented**: Designed for **multi-agent**, **explicit** message passing and workflow orchestration, NO deep encapsulation.\n+ **Highly Customizable**: Tools, prompt, agent, workflow, third-party libs & visualization, customization is encouraged everywhere.\n\n## 🚀 Quickstart\n### Installation\nAgentScope Java requires **jdk 17** or higher.\n\n```bash\n<dependency>\n    <groupId>io.agentscope</groupId>\n    <artifactId>agentscope-core</artifactId>\n    <version>0.1.0</version>\n</dependency>\n```\n\n### Hello AgentScope!\nStart with a basic ReActAgent that replies to user queries!\n\n```java\npublic static void main(String[] args) {\n    Model model = DashScopeChatModel.builder()\n\t\t.apiKey(System.getenv(\"DASHSCOPE_API_KEY\"))\n\t\t.modelName(\"qwen-max\")\n\t\t.build();\n\n    ReActAgent agent = ReActAgent.builder()\n    .name(\"hello-world-agent\")\n    .sysPrompt(\"You are a helpful AI assistant. Be concise and friendly. \" +\n               \"When thinking through problems, use <thinking>...</thinking> tags to show your reasoning.\")\n    .model(model)\n    .memory(new InMemoryMemory())\n    .formatter(new DashScopeChatFormatter())\n    .build();\n\n    Msg userMessage = Msg.builder()\n        .role(MsgRole.USER)\n        .textContent(\"Hello, please introduce yourself.\")\n        .build();\n    Msg response = agent.reply(userMessage).block();\n\n    System.out.println(\"Agent Response: \" + response.getTextContent());\n}\n```\n\n### Equip Agent with Tools\n1. Define Tool\n\n\tDefine a tool class with methods annotated with `@Tool`. Here's an example `SimpleTools` class with a time tool:\n\n\t```java\n\tpublic class SimpleTools {\n\t\t@Tool(name = \"get_time\", description = \"Get current time string of a time zone\")\n\t\tpublic String getTime(@ToolParam(description = \"Time zone, e.g., Beijing\") String zone) {\n\t\t\tLocalDateTime now = LocalDateTime.now();\n\t\t\treturn now.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\"));\n\t\t}\n\t}\n\t```\n\n2. Register Tool to ReActAgent\n\n\tRegister the tool class through `Toolkit` using the `registerTool` method:\n\n\t```java\n\tpublic static void main(String[] args) {\n\t\tModel model = DashScopeChatModel.builder()\n\t\t\t.apiKey(System.getenv(\"DASHSCOPE_API_KEY\"))\n\t\t\t.modelName(\"qwen-max\")\n\t\t\t.build();\n\n\t\tToolkit toolkit = new Toolkit();\n\t\ttoolkit.registerTool(new SimpleTools());\n\n\t\tReActAgent agent = ReActAgent.builder()\n\t\t\t.name(\"hello-world-agent\")\n\t\t\t.sysPrompt(\"You are a helpful AI assistant.\")\n\t\t\t.model(model)\n\t\t\t.toolkit(toolkit)\n\t\t\t.memory(new InMemoryMemory())\n\t\t\t.formatter(new DashScopeChatFormatter())\n\t\t\t.build();\n\n\t\tMsg userMessage = Msg.builder()\n\t\t\t\t.role(MsgRole.USER)\n\t\t\t\t.textContent(\"Please tell me the current time.\")\n\t\t\t\t.build();\n\n\t\tMsg response = agent.reply(userMessage).block();\n\t\tSystem.out.println(\"Agent Response: \" + response.getTextContent());\n\t}\n\t```\n## <font style=\"color:rgb(31, 35, 40);\">📖</font><font style=\"color:rgb(31, 35, 40);\"> Documentation</font>\n+ [Create Message](./docs/quickstart-message.md)\n+ [Create ReAct Agent](./docs/quickstart-agent.md)\n+ Model\n+ Tool\n+ Memory\n+ Prompt Formatter\n\n## <font style=\"color:rgb(31, 35, 40);\">🏗️</font><font style=\"color:rgb(31, 35, 40);\"> </font>Roadmap\nIn the upcoming versions, AgentScope Java version will focus on improving the following features.\n\n+ Multi-modal\n+ Multi-Agent\n+ Tracing\n+ AgentScope Studio\n\n## ⚖️ License\nAgentScope is released under Apache License 2.0.\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-15T02:23:11.017693"
  },
  {
    "basic_info": {
      "name": "CVE-2025-10184_PoC",
      "full_name": "People-11/CVE-2025-10184_PoC",
      "owner": "People-11",
      "description": null,
      "url": "https://github.com/People-11/CVE-2025-10184_PoC",
      "clone_url": "https://github.com/People-11/CVE-2025-10184_PoC.git",
      "ssh_url": "git@github.com:People-11/CVE-2025-10184_PoC.git",
      "homepage": null,
      "created_at": "2025-09-24T09:24:45Z",
      "updated_at": "2025-10-12T11:14:53Z",
      "pushed_at": "2025-10-04T13:50:53Z"
    },
    "stats": {
      "stars": 51,
      "forks": 11,
      "watchers": 51,
      "open_issues": 0,
      "size": 145
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 24569
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "# APK Build for CVE‑2025‑10184 PoC\n\n这是一个 **CVE‑2025‑10184** 的 **PoC** 的 APK 构建\n\n该漏洞存在于 com.\\*.providers.telephony 中, 允许任意应用在未获得 SMS 读取权限的情况下读取短信\n\n---\n\n## 源码\n\n此源码及更多细节可见 Rapid7 的文章：  \nhttps://www.rapid7.com/blog/post/cve-2025-10184-oneplus-oxygenos-telephony-provider-permission-bypass-not-fixed/\n\n---\n\n## 下载\n\n请登录后在 Actions 下载 **未签名** 的安装包\n\n---\n\n## 验证\n\n已确认 OPPO 及其子品牌, 自 ColorOS 7.1 的所有版本均受影响\n\n---\n\n## 修复\n\nOPPO 官方已修复此问题 (通过替换 Provider 声明的权限为 OPLUS_COMPONENT_SAFE), 目前正在逐步推送更新\n\n---\n\n## 等不了 OPPO 了, 我他妈自己修\n\n最简单的修复方法：只需要在操作之前验证调用者是否拥有 SMS 权限  \n注：此方法已验证可以防止读取, 并且不影响真正拥有 SMS 权限的应用读取, 但是未进行其他可用性影响测试\n\n在 `ServiceNumberProvider` 类的 `update` 方法开头添加运行时权限检查：\n```diff\n .method public update(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I\n     .registers 8\n\n+    invoke-virtual {p0}, Lcom/android/providers/telephony/ServiceNumberProvider;->getContext()Landroid/content/Context;\n+    move-result-object v0\n+    \n+    const-string v1, \"android.permission.READ_SMS\"\n+    const-string v2, \"Requires READ_SMS permission\"\n+    invoke-virtual {v0, v1, v2}, Landroid/content/Context;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V\n+   \n     .line 157\n     iget-object p0, p0, Lcom/android/providers/telephony/ServiceNumberProvider;->mOpenHelper:Lcom/android/providers/telephony/MmsSmsDatabaseHelper;\n \n     invoke-virtual {p0}, Lcom/android/providers/telephony/MmsSmsDatabaseHelper;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase;\n \n     move-result-object p0\n \n     # ... 省略其余原有代码\n .end method\n```\n在 `PushMessageProvider` 类和 `PushShopProvider` 类的 `update` 方法也需要添加以上代码  \n\n修改后请 **不要签名** 并且需要 **核心破解** 后安装, 否则将破坏整个通话功能并丢失所有短信 (系统安全机制所致)\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-15T02:23:12.177722"
  },
  {
    "basic_info": {
      "name": "OpenSauce",
      "full_name": "xthxr/OpenSauce",
      "owner": "xthxr",
      "description": "Star the repo and add your DSA codes here, in any language!!",
      "url": "https://github.com/xthxr/OpenSauce",
      "clone_url": "https://github.com/xthxr/OpenSauce.git",
      "ssh_url": "git@github.com:xthxr/OpenSauce.git",
      "homepage": "https://takeuforward.org/plus/checkout/?affiliate=xthxr_tuf",
      "created_at": "2025-10-04T21:17:06Z",
      "updated_at": "2025-10-14T21:52:48Z",
      "pushed_at": "2025-10-13T20:06:31Z"
    },
    "stats": {
      "stars": 46,
      "forks": 142,
      "watchers": 46,
      "open_issues": 86,
      "size": 721
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 294772,
        "C++": 203074,
        "Python": 138914,
        "C": 44099,
        "TypeScript": 40841,
        "JavaScript": 31019,
        "Dart": 28774,
        "Ruby": 27527,
        "Go": 21418,
        "Haskell": 17746,
        "PHP": 7503,
        "Scala": 7406,
        "Rust": 5047,
        "Swift": 5018,
        "Kotlin": 3390
      },
      "license": "MIT License",
      "topics": [
        "datastructures",
        "datastructures-algorithms",
        "dsa",
        "hacktoberfest",
        "hacktoberfest-accepted",
        "hacktoberfest2025"
      ]
    },
    "content": {
      "readme": "# OpenSauce 🎃\n\nWelcome to OpenSauce! Your gateway to open-source contributions for **Hacktoberfest 2025**.\n\nThis repository is dedicated to **Data Structures and Algorithms (DSA)** implementations in multiple programming languages. Whether you're a beginner or an experienced developer, contribute your DSA solutions and be part of the open-source community!\n\n## 🌐 Live Project\n\nExplore our interactive website to browse through all DSA implementations by programming language, view contributors, and navigate the repository structure with ease!\n\n**🔗 [View Live Project](https://opensaucedsarepo.netlify.app/)**\n\n\n\n## 📁 Repository Structure\n\nThis repository contains language-specific folders for DSA contributions:\n\n```\nOpenSauce/\n├── C/\n├── C++/\n├── Java/\n├── Python/\n├── JavaScript/\n├── Go/\n├── Rust/\n├── TypeScript/\n├── Kotlin/\n├── Swift/\n├── Ruby/\n├── PHP/\n├── Dart/\n├── Haskell/\n└── Scala/\n```\n\nEach language folder contains its own README with specific guidelines and suggested organization.\n\n## 🚀 How to Contribute\n\n1. **Fork this repository** to your GitHub account\n2. **Clone your fork** to your local machine\n   ```bash\n   git clone https://github.com/your-username/OpenSauce.git\n   cd OpenSauce\n   ```\n3. **Choose a language folder** you want to contribute to\n4. **Create your DSA implementation**:\n   - Follow the naming conventions specified in each language's README\n   - Organize code by topic (arrays, trees, graphs, sorting, etc.)\n   - Include comments explaining your algorithm\n   - Add time and space complexity analysis\n5. **Create a new branch**:\n   ```bash\n   git checkout -b add-algorithm-name\n   ```\n6. **Commit your changes**:\n   ```bash\n   git add .\n   git commit -m \"Add [algorithm-name] in [language]\"\n   ```\n7. **Push to your fork**:\n   ```bash\n   git push origin add-algorithm-name\n   ```\n8. **Create a Pull Request** from your fork to this repository\n\n## 📋 Contribution Guidelines\n\n### What to Contribute\n- ✅ Data structure implementations (arrays, linked lists, trees, graphs, etc.)\n- ✅ Algorithm implementations (sorting, searching, dynamic programming, etc.)\n- ✅ Well-documented code with complexity analysis\n- ✅ Test cases or example usage\n\n### Code Quality\n- Include clear comments explaining the logic\n- Add time and space complexity in comments\n- Follow the coding conventions of the language\n- Provide example usage or test cases\n- Use meaningful variable and function names\n\n### What NOT to Contribute\n- ❌ Duplicate implementations (check existing code first)\n- ❌ Poorly documented code\n- ❌ Copied code without understanding\n- ❌ Unrelated files or spam\n\n## 🏷️ Topics to Contribute\n\nEach language folder supports the following topics:\n- **Arrays** - Array manipulation and problems\n- **Linked Lists** - Singly, doubly, circular linked lists\n- **Stacks** - Stack implementations and applications\n- **Queues** - Queue implementations and variations\n- **Trees** - Binary trees, BST, AVL, heaps, tries\n- **Graphs** - Graph representations and algorithms (BFS, DFS, Dijkstra, etc.)\n- **Sorting** - Bubble, merge, quick, heap sort, etc.\n- **Searching** - Binary search, linear search, etc.\n- **Dynamic Programming** - DP problems and solutions\n- **Greedy Algorithms** - Greedy approach problems\n- **Backtracking** - Backtracking problems\n- **Mathematics** - Number theory, GCD, prime numbers, etc.\n- **Strings** - String manipulation and algorithms\n\n## 🌟 Hacktoberfest 2025\n\nThis repository is participating in **Hacktoberfest 2025**! \n\n- Complete 6 quality pull requests during October to earn your Hacktoberfest swag\n- Make sure your PRs are meaningful contributions, not spam\n- Check out [Hacktoberfest Official Website](https://hacktoberfest.com) for more details\n\n## 📝 Code of Conduct\n\n- Be respectful and inclusive\n- Provide constructive feedback\n- Help others learn and grow\n- No spam or low-quality contributions\n\n## 📧 Need Help?\n\n- Check the language-specific README in each folder\n- Open an issue if you have questions\n- Review existing pull requests for examples\n- Visit our [live website](https://opensaucedsarepo.netlify.app/) to explore the repository\n\n## 🎉 Contributors\n\nThank you to all contributors who help make this project better!\n\nCheck out all our amazing contributors on the [live project page](https://opensaucedsarepo.netlify.app/)!\n\n---\n\n**Happy Coding and Happy Hacktoberfest! 🎃👨‍💻👩‍💻**\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-15T02:23:13.321425"
  },
  {
    "basic_info": {
      "name": "ai-tourism",
      "full_name": "1937983507/ai-tourism",
      "owner": "1937983507",
      "description": "aI-tourism 是一个智能旅游规划系统，后端基于 Spring Boot、LangChain4j、MySQL、MyBatis、Sa-Token 等技术栈，集成了多种 AI 能力（如 AI Service、MCP 工具等），为用户提供个性化旅游路线推荐、会话管理、用户权限管理等功能。系统支持多轮对话、地图路线可视化、权限安全、MCP 工具热插拔等特性。",
      "url": "https://github.com/1937983507/ai-tourism",
      "clone_url": "https://github.com/1937983507/ai-tourism.git",
      "ssh_url": "git@github.com:1937983507/ai-tourism.git",
      "homepage": "https://www.aitrip.chat/",
      "created_at": "2025-09-20T06:58:26Z",
      "updated_at": "2025-10-10T08:19:42Z",
      "pushed_at": "2025-10-08T15:16:49Z"
    },
    "stats": {
      "stars": 45,
      "forks": 0,
      "watchers": 45,
      "open_issues": 0,
      "size": 19423
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 160871
      },
      "license": null,
      "topics": [
        "agent",
        "caffeine",
        "java",
        "langchain4j",
        "llm",
        "mcp",
        "mybatis",
        "mysql",
        "redis",
        "springboot"
      ]
    },
    "content": {
      "readme": "# AI 智能旅游规划助手（后端）\n\n> **访问地址**：[https://www.aitrip.chat/](https://www.aitrip.chat/)  \n> **欢迎体验智能旅游规划服务！**\n\n## 📖 项目简介\n\n**AI-Tourism** 是一个智能旅游规划系统，后端基于 **Spring Boot、LangChain4j、MySQL、MyBatis、Sa-Token** 等技术栈构建。\n\n系统集成了多种 AI 能力（如 AI Service、MCP 工具等），为用户提供**个性化旅游路线推荐、多轮对话、权限控制**等功能。\n\n### 🎯 核心特性\n- **多轮对话与上下文记忆** - 智能理解用户需求，保持对话连贯性\n- **地图路线可视化** - 实时展示旅游路线，直观易懂\n- **MCP 灵活热插拔** - 工具可动态启用/禁用，支持热插拔\n- **Tool 统一注册** - 所有工具统一管理，易于扩展\n- **安全认证与权限管理** - 完善的用户权限体系\n\n---\n\n### 🖼️ AI 智能旅游规划 前端效果截图\n![前端效果图](assets/界面图.png)\n\n### 📹 视频效果\n![演示视频](./assets/demo.gif)\n\n**AI 智能旅游规划系统**，结合 `SpringBoot` 与 `LangChain4j`，在用户输入自然语言后，由 **AI Agent** 调用 **MCP 工具**与 **Function Call** 获取天气、景点等信息，由前端同时渲染文字版路线规划与结构化地图路线。\n\n---\n\n## 💡 核心特性与架构特点\n\n![核心特性与架构特点](assets/核心特性与架构特点.png)\n\n### 1. Agent 服务与地图路线渲染深度结合\n- **图文结合**：提供图文结合的旅游攻略，并在前端地图中直观展示每日路线\n- **流式传输**：使用 `SSE` 流式传输文字版攻略，并基于 `JSON Schema` 输出结构化数据，支持前端实时渲染\n\n### 2. 基于 Langchain4j 的 Agent 服务\n- **任务规划**：基于 `Prompt` 工程，设计角色定位 + 任务目标 + 约束限制\n- **工具调用**：`MCP` 工具通过配置可灵活启用/禁用，支持热插拔；所有 `Tool` 工具均实现统一接口，注册到 `ToolManager`，支持运行时动态扩展与管理\n- **多轮记忆**：实现 `ChatMemoryStore`，短期记忆优先存储于 `Redis`，未命中自动回退数据库，`AI Service` 实例以会话为单位缓存，支持多用户并发与上下文隔离\n- **结构化输出路线**：基于 `JSON Schema` 输出结构化路线数据，用于前端地图渲染展示\n- **安全防范**：`LangChain4j` 输入护轨机制，前置校验请求内容，防止敏感词与 `Prompt` 注入攻击，保障系统稳定性\n\n### 3. 统一工具注册与高性能调用防抖\n- **MCP 工具**：通过配置可灵活启用/禁用，支持热插拔\n- **Function Call 工具**：通过 `ToolManager` 统一注册与调度，支持运行时扩展\n- **性能优化**：引入 `Caffeine` 缓存，避免重复调用外部服务，**平均响应耗时从 5.20s 下降至 399μs**\n\n### 4. 多轮对话记忆与实例隔离\n- **记忆管理**：结合 `Redis` 与数据库实现短期记忆，使用数据库实现会话历史\n- **实例缓存**：基于 `Caffeine` 缓存 `AI Service` 实例，支持会话隔离，提升服务响应性能并减少实例重复创建\n- **性能提升**：实例平均创建时间由 **13.1ms 降低至 9.74ms，性能提升 28.4%**\n\n### 5. AI 输入护轨与结构化输出\n- **安全校验**：请求前置校验，自动过滤敏感词、恶意注入等风险内容，保障系统安全\n\n### 6. Sa-Token 权限认证\n- **令牌机制**：`JWT` 短期令牌 + `Refresh Token` 长期令牌结合\n- **权限控制**：注解式权限控制，细粒度角色管理\n\n### 7. SpringBoot 工程化与 RESTful 设计\n- **分层架构**：标准的分层架构（`Controller` - `Service` - `Mapper`）\n- **接口规范**：接口统一，符合 `RESTful` 规范，易于前后端协作\n\n---\n\n## 🏗️ 系统整体架构\n\n\n\n- **前端（ai-tourism-frontend）**：`Vue` 应用，负责交互、地图渲染与对话展示；通过 `SSE` 调用 `POST /ai_assistant/chat-stream` 实时消费模型输出\n\n- **接入层（Controller + 鉴权）**：基于 `Spring Boot REST`，使用 `Sa-Token` 进行登录与权限校验（如 `@SaCheckLogin`、`@SaCheckPermission`）\n\n- **服务层（MemoryChatServiceImpl）**：统一处理请求校验、获取会话历史、获取会话列表、消息入库、`SSE` 流式返回\n\n- **AI Service（MemoryAssistantServiceFactory）**：按会话构建隔离的 `AssistantService` 实例，整合 `OpenAI` 流式模型、`MessageWindowChatMemory`（基于 `ChatMemoryStore`）、输入护轨、工具调用；同时使用 `Caffeine` 按 `sessionId` 缓存实例，避免重复创建\n\n- **记忆与历史（Redis + MySQL）**：\n  - **短期对话记忆**：`CustomRedisChatMemoryStore` 基于 `Redis` 进行管理，同时支持 `MySQL` 消息填入\n  - **长期历史与结构化数据**：通过 `MyBatis` 写入 `MySQL`（会话表、消息表、路线 JSON）\n\n- **工具调用（Function Call + MCP）**：\n  - **Function Call**：`ToolManager` 统一注册所有 `BaseTool`\n  - **MCP**：基于 `LangChain4j MCP`，`McpClientService` 通过 `SSE` 创建 `ToolProvider`\n\n- **缓存与防抖**：\n  - **Caffeine**：缓存 `AssistantService` 实例\n  - **Redis**：承载对话记忆，降低数据库读写压力\n\n- **可观测性与监控**：`Micrometer`` 暴露 `Prometheus` 指标（管理端点已开放 `prometheus`）；`AiModelMonitorListener`/`AiModelMetricsCollector` 记录请求量、耗时、Token 使用、错误率、缓存命中等；Grafana 仪表盘见 `doc/Prometheus-Grafana.json`\n\n---\n\n## 🚀 快速开始\n\n### 📂 目录结构\n\n```\nai-tourism/\n├── src/\n│   ├── main/\n│   │   ├── java/com/example/aitourism/\n│   │   │   ├── ai/                  # AI Agent、工具、记忆、护轨等核心AI能力\n│   │   │   ├── config/              # 配置类（如Sa-Token、CORS、Redis等）\n│   │   │   ├── controller/          # REST API 控制器\n│   │   │   ├── dto/                 # 数据传输对象\n│   │   │   ├── entity/              # 实体类\n│   │   │   ├── exception/           # 全局异常处理\n│   │   │   ├── mapper/              # MyBatis 映射\n│   │   │   ├── monitor/             # 监控与埋点\n│   │   │   ├── service/             # 业务逻辑与AI集成\n│   │   │   └── util/                # 工具类\n│   │   └── resources/\n│   │       ├── application.yml      # 主要配置文件\n│   │       └── prompt/              # AI Prompt 模板\n├── sql/\n│   └── create_table.sql             # 数据库表结构\n├── doc/\n│   ├── API.md                       # 接口文档\n│   └── Prometheus-Grafana.json      # 监控仪表盘配置\n├── pom.xml                          # Maven 依赖\n└── README.md\n```\n\n### 🛠️ 技术栈与依赖\n\n| 技术分类 | 技术栈 | 版本/说明 |\n|---------|--------|----------|\n| **核心框架** | Java | `21` |\n| | Spring Boot | `3.5.6` |\n| **AI 能力** | LangChain4j | AI能力集成 |\n| **数据库** | MySQL | `9.4` |\n| **ORM** | MyBatis & MyBatis-Spring-Boot | 数据持久化 |\n| **安全认证** | Sa-Token | JWT 认证与权限 |\n| | BCrypt | 密码加密 |\n| **工具库** | Lombok | 代码简化 |\n| | OkHttp3 | HTTP 客户端 |\n| | Hutool | 工具库 |\n| **缓存** | Caffeine | 本地高性能缓存 |\n| | Redis | 分布式缓存与对话记忆 |\n| **监控** | Prometheus + Grafana | 监控与可视化 |\n| | Micrometer | Spring Boot 监控埋点 |\n\n> **详见** `pom.xml` 依赖配置\n\n### 🗄️ 数据库结构\n\n#### 主要表设计\n\n| 表名 | 说明 | 主要字段 |\n|------|------|----------|\n| `t_user` | 用户表 | 手机号、加密密码、昵称、头像、状态等 |\n| `t_role` | 角色表 | USER、ROOT 等角色 |\n| `t_permission` | 权限表 | 权限标识、权限名称等 |\n| `t_user_role` | 用户-角色关联表 | 用户ID、角色ID |\n| `t_role_permission` | 角色-权限关联表 | 角色ID、权限ID |\n| `t_refresh_token` | 刷新令牌表 | 用户ID、令牌值、过期时间等 |\n| `t_ai_assistant_sessions` | 会话列表 | 会话ID、用户ID、会话标题等 |\n| `t_ai_assistant_chat_messages` | AI助手消息表 | 消息ID、会话ID、消息内容、角色等 |\n\n> **详细字段和约束**请参考 `",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-15T02:23:14.658901"
  },
  {
    "basic_info": {
      "name": "ThisSeemsWrong",
      "full_name": "michalbednarski/ThisSeemsWrong",
      "owner": "michalbednarski",
      "description": "Writeup and exploit for CVE-2024-49746: Android's Parcel::continueWrite closing File Descriptors that are later used",
      "url": "https://github.com/michalbednarski/ThisSeemsWrong",
      "clone_url": "https://github.com/michalbednarski/ThisSeemsWrong.git",
      "ssh_url": "git@github.com:michalbednarski/ThisSeemsWrong.git",
      "homepage": null,
      "created_at": "2025-10-08T13:04:01Z",
      "updated_at": "2025-10-14T20:17:28Z",
      "pushed_at": "2025-10-08T13:04:18Z"
    },
    "stats": {
      "stars": 37,
      "forks": 9,
      "watchers": 37,
      "open_issues": 0,
      "size": 507
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 70770,
        "Makefile": 545,
        "Shell": 468,
        "AIDL": 237
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "Fix for this issue appeared as CVE-2024-49746: [bulletin](https://source.android.com/docs/security/bulletin/2025-02-01#framework), [patch](https://android.googlesource.com/platform/frameworks/native/+/b3cdb06ab9137a67e4ee212ae6655de383fdaaaa%5E%21/)\n\n# \"This seems wrong\"\n\nAbove title is the comment from [`Parcel::continueWrite` method](https://cs.android.com/android/platform/superproject/main/+/main:frameworks/native/libs/binder/Parcel.cpp;l=3029-3132;drc=f4c9b48c19f1b040efb35932b322f47e7779cafe), which is actually responsible for resizing `Parcel` objects, either when explicitly request by user (for example through [`setDataSize()`](https://developer.android.com/reference/android/os/Parcel#setDataSize(int))) or when calling one of `write` methods when current data capacity is too small\n\n```cpp\nstatus_t Parcel::continueWrite(size_t desired)\n{\n    // SNIP: Validate desired size\n    // SNIP: Assign kernelFields & rpcFields from variant member of this class\n    // SNIP: Count number of objects (Binder handles and File Descriptors)\n    //       that will be present after resize and assign to objectsSize\n\n    if (mOwner) {\n        // If the size is going to zero, just release the owner's data.\n        if (desired == 0) {\n            freeData();\n            return NO_ERROR;\n        }\n\n        // If there is a different owner, we need to take\n        // posession.\n        uint8_t* data = (uint8_t*)malloc(desired);\n        // SNIP: Check if malloc succeeded\n        binder_size_t* objects = nullptr;\n\n        if (kernelFields && objectsSize) {\n            objects = (binder_size_t*)calloc(objectsSize, sizeof(binder_size_t));\n            // SNIP: Check if calloc succeeded\n\n            // Little hack to only acquire references on objects\n            // we will be keeping.\n            size_t oldObjectsSize = kernelFields->mObjectsSize;\n            kernelFields->mObjectsSize = objectsSize;\n            acquireObjects();\n            kernelFields->mObjectsSize = oldObjectsSize;\n        }\n        // SNIP: rpcFields handling for non-/dev/binder Parcels\n\n        if (mData) {\n            memcpy(data, mData, mDataSize < desired ? mDataSize : desired);\n        }\n        if (objects && kernelFields && kernelFields->mObjects) {\n            memcpy(objects, kernelFields->mObjects, objectsSize * sizeof(binder_size_t));\n        }\n        // ALOGI(\"Freeing data ref of %p (pid=%d)\", this, getpid());\n        if (kernelFields) {\n            // TODO(b/239222407): This seems wrong. We should only free FDs when\n            // they are in a truncated section of the parcel.\n            closeFileDescriptors();\n        }\n        mOwner(mData, mDataSize, kernelFields ? kernelFields->mObjects : nullptr,\n               kernelFields ? kernelFields->mObjectsSize : 0);\n        mOwner = nullptr;\n\n        // SNIP: Allocation count tracking\n        // SNIP: Assign data and objects to this object\n    } else if (mData) {\n        // SNIP: Resize data owned by this instance of Parcel\n    } else {\n        // SNIP: Allocate initial data for currently empty Parcel\n    }\n\n    return NO_ERROR;\n}\n```\n\n[When that comment was introduced](https://android.googlesource.com/platform/frameworks/native/+/53b6ffe5af3951e8784c451ef8c4ff19f3d6b196%5E!/), `closeFileDescriptors()` call was moved from `IPCThreadState::freeBuffer()` (which is called in above code through `mOwner()` function pointer) to `continueWrite()` method, however logic was same as before. After all, `Parcel` is core part of Android IPC and if core IPC was closing File Descriptors it shouldn't it'd be obvious problem\n\nWhich brings us to important part: when above code is being used? It is used when Parcel class moves ownership of data received from Binder driver (which at that point reside in [`/dev/binder` `mmap`](https://cs.android.com/android/platform/superproject/main/+/main:frameworks/native/libs/binder/ProcessState.cpp;l=587-592;drc=187efe18e3de6258af0230198c881915cc695567) and cannot be written to (any attempts to write that memory would lead to `SIGSEGV`)), that is `Parcel` being either incoming transaction data (`data` argument passed to [`onTransact()`](https://developer.android.com/reference/android/os/Binder#onTransact(int,%20android.os.Parcel,%20android.os.Parcel,%20int))) or incoming reply (that is, `Parcel` object that was passed to [`transact()`](https://developer.android.com/reference/android/os/IBinder#transact(int,%20android.os.Parcel,%20android.os.Parcel,%20int)) call as `reply` argument, `transact()` sets reference within that `Parcel` object)\n\nIn practice, only case we'd enter `if (mOwner)` block is when system [calls `setDataSize(0)` to release transaction data](https://cs.android.com/android/platform/superproject/main/+/main:frameworks/native/libs/binder/IPCThreadState.cpp;l=1483-1488;drc=187efe18e3de6258af0230198c881915cc695567), but in that case we'd also enter `if (desired == 0)` which does early return. During legitimate system usage there's no case where we'd enter \"If there is a ",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-15T02:23:15.766434"
  },
  {
    "basic_info": {
      "name": "AbxOverflow",
      "full_name": "michalbednarski/AbxOverflow",
      "owner": "michalbednarski",
      "description": "Writeup and exploit for CVE-2024-34740, integer overflow in Android's BinaryXmlSerializer to system_server file write and then to system_server code execution from normal installed app",
      "url": "https://github.com/michalbednarski/AbxOverflow",
      "clone_url": "https://github.com/michalbednarski/AbxOverflow.git",
      "ssh_url": "git@github.com:michalbednarski/AbxOverflow.git",
      "homepage": null,
      "created_at": "2025-10-08T12:54:02Z",
      "updated_at": "2025-10-14T02:12:32Z",
      "pushed_at": "2025-10-08T12:54:46Z"
    },
    "stats": {
      "stars": 36,
      "forks": 11,
      "watchers": 36,
      "open_issues": 0,
      "size": 506
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 28185,
        "Shell": 324
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "![Screenshot of Android application with title AbxDroppedApk and lots of text describing that it is running within system_server](Screenshot_20231024-164541.png)\n\nFixes for issue described here appeared under CVE-2024-34740 / A-307288067:\n\n* [Bulletin](https://source.android.com/docs/security/bulletin/2024-08-01#Framework)\n* [Patch linked from bulletin](https://android.googlesource.com/platform/frameworks/libs/modules-utils/+/700c28908051ceb55e1456d2d21229bc17c6895a)\n* Two other patches: [1](https://android.googlesource.com/platform/frameworks/base/+/8b1e072210796e9772d3d07bdbae424b38447db6%5E!/) [2](https://android.googlesource.com/platform/frameworks/base/+/7250d76a8a2d501af62081d88545c301d43106a4%5E!/)\n\n# Android Binary XML\n\nInside Android `system_server`, many services store their state across reboots in XML files\n\n```\n$ adb shell su 0 find /data/system -name '*.xml' | sort\n/data/system/appops_accesses.xml\n/data/system/cachequota.xml\n/data/system/device_policies.xml\n/data/system/device_policy_state.xml\n/data/system/display-manager-state.xml\n/data/system/input-manager-state.xml\n/data/system/inputmethod/subtypes.xml\n/data/system/install_sessions.xml\n/data/system/job/jobs_1000.xml\n/data/system/job/jobs_10131.xml\n/data/system/log-files.xml\n/data/system/netpolicy.xml\n/data/system/notification_policy.xml\n/data/system/overlays.xml\n/data/system/packages.xml\n/data/system/package-watchdog.xml\n/data/system/sensor_privacy_impl.xml\n/data/system/sensor_privacy.xml\n/data/system/shortcut_service.xml\n/data/system/users/0/app_idle_stats.xml\n/data/system/users/0/appwidgets.xml\n/data/system/users/0/package-restrictions.xml\n/data/system/users/0/settings_global.xml\n/data/system/users/0/settings_secure.xml\n/data/system/users/0/settings_system.xml\n/data/system/users/0/wallpaper_info.xml\n/data/system/users/0.xml\n/data/system/users/userlist.xml\n/data/system/watchlist_settings.xml\n```\n\nHistorically these have been plain text XML files with indentation, which allowed developers easy reading of them, however [in Android 12 new binary version of that format was introduced, citing 1.5% of all time spent by `system_server` being spent on these XML operations](https://android.googlesource.com/platform/frameworks/base/+/4ccea8796991d678ead4399130ec31edf63ff4fa%5E%21/)\n\nIt should be noted that this format is only used internally by system and has files with magic value `\"ABX\\x00\"`. It is different from [format used inside APKs](https://cs.android.com/android/platform/superproject/main/+/main:frameworks/base/libs/androidfw/ResourceTypes.cpp;l=1770;drc=d4e49e63519397789d284a03aea5fafc119cb1b0) for `AndroidManifest.xml`, `res/xml/*.xml`, `res/layout/*.xml`, etc. which has no explicit \"magic value\", however usually starts `0300 0800` (which is [header](https://cs.android.com/android/platform/superproject/main/+/main:frameworks/base/libs/androidfw/include/androidfw/ResourceTypes.h;l=608;drc=d4e49e63519397789d284a03aea5fafc119cb1b0) with `type=RES_XML_TYPE` and `headerSize=8`)\n\nWhenever system reads one of these internal state XML files, it [uses `\"ABX\\0\"` magic value in file to choose either parser for Binary XML file or regular XML parser](https://cs.android.com/android/platform/superproject/main/+/main:frameworks/base/core/java/android/util/Xml.java;l=188-192;drc=97a370a95275e79c69e79d7ead11aa38934a5575). Whenever these files are saved as Binary XML is [controlled by system property](https://cs.android.com/android/platform/superproject/main/+/main:frameworks/base/core/java/android/util/Xml.java;drc=97a370a95275e79c69e79d7ead11aa38934a5575;l=74?q=Xml.java) and is enabled by default\n\nWhen Binary XML files are in use, you can read their contents for example through `adb shell su 0 abx2xml /data/system/packages.xml -`\n\nOne of things this binary format does is offering typed accessors, so serializer offers `attributeInt(String namespace, String name, int value)` method, which writes value as binary integer, avoiding round-trip through String which would be new allocation and subsequent object for Garbage Collection\n\nAnother type that can be directly serialized is byte array\n\n```java\n@Override\npublic XmlSerializer attributeBytesBase64(String namespace, String name, byte[] value)\n        throws IOException {\n    if (namespace != null && !namespace.isEmpty()) throw illegalNamespace();\n    mOut.writeByte(ATTRIBUTE | TYPE_BYTES_BASE64);\n    mOut.writeInternedUTF(name);\n    mOut.writeShort(value.length);\n    mOut.write(value);\n    return this;\n}\n```\n\nThere's also similar method `attributeBytesHex` which only differs by `TYPE_*` tag written. That tag is used by `abx2xml` tool to convert byte array to appropriate String representation\n\n`mOut` is instance of `FastDataOutput`, which provides functions of Java's [`DataOutputStream`](https://docs.oracle.com/javase/8/docs/api/java/io/DataOutputStream.html). `writeByte`/`writeShort`/`writeInt`/`writeUTF`/`write` use same format as standard `DataOutputStream`\n\nSimilarly to [`Parcel`](https://github.com/michalb",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-15T02:23:16.871382"
  }
]
[
  {
    "basic_info": {
      "name": "RoadWeaver",
      "full_name": "shiroha-233/RoadWeaver",
      "owner": "shiroha-233",
      "description": null,
      "url": "https://github.com/shiroha-233/RoadWeaver",
      "clone_url": "https://github.com/shiroha-233/RoadWeaver.git",
      "ssh_url": "git@github.com:shiroha-233/RoadWeaver.git",
      "homepage": null,
      "created_at": "2025-10-02T02:55:05Z",
      "updated_at": "2025-10-28T18:22:51Z",
      "pushed_at": "2025-10-16T23:48:13Z"
    },
    "stats": {
      "stars": 232,
      "forks": 19,
      "watchers": 232,
      "open_issues": 16,
      "size": 132269
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 354317
      },
      "license": "MIT License",
      "topics": []
    },
    "content": {
      "readme": "# 🛤️ RoadWeaver\n\n自动在结构之间编织道路的 Minecraft 模组  \nAutomatically weave roads between structures in Minecraft\n\n[中文](#中文) | [English](#english)\n\n---\n\n<a name=\"english\"></a>\n## 📖 Introduction (Features)\nRoadWeaver automatically generates beautiful road networks between structures (e.g., villages, outposts), focusing on practical, stable, and visually pleasing roads.\n\n### ✨ Core Features\n- 🗺️ Intelligent Path Generation: A* pathfinding to avoid steep or dangerous areas; terrain/biome/stability-aware routing; supports E-W/N-S/diagonal directions\n- 🎨 Road Types: Artificial roads (stone bricks/slabs), natural roads (dirt/gravel), biome-adaptive materials\n- 🏮 Decoration System: Lampposts (redstone lamps with day/night auto control), intermittent fences, distance signs, wayfinding; large decorations (swings, benches, gazebos) with random placement\n- 🧭 Visual Debugging: Road network map; status colors (planned/generating/completed/failed); interactions (drag/zoom/click-to-teleport); statistics for counts, length, and states\n- 🚀 Performance: Multi-threaded async generation with concurrency control; height/terrain caching to reduce redundant computations\n- 📚 Multi-Structure Support (1.0.2 or later)\n- ⚡ Async Structure Search (1.0.5 or later): Non-blocking structure search with configurable thread pool (1-8 threads); round-robin search to avoid cache overflow; batch planning to prevent messy connections\n- 🌳 Minimum Spanning Tree (1.0.5 or later): Kruskal's algorithm ensures all structures are connected with shortest total path length\n\n### 🗺️ Roadmap\n- More decorations? Enrich roadside and pathway ornamentation\n- Link more structure types? Support broader vanilla/modded structure connectivity\n- Link biomes? Strategy-level connections across biome regions\n- More landmark buildings? High-quality scenic builds along roads\n- Journey events? Lightweight encounters while traveling\n- Custom links? Player/datapack-defined connection rules\n\n### 📚 Multi-Structure Support（1.0.2 or later）\nNow supports path-formatted structure IDs (e.g., `mvs:houses/azelea_house`) and wildcard matching:\n- `mvs:houses/*` - Matches all houses from MVS\n- `mvs:*` - Matches all MVS structures\n\nExample:\n```json\n{\n  \"structuresToLocate\": [\n    \"#minecraft:village\",\n    \"mvs:houses/*\",\n    \"mvs:shops/*\"\n  ]\n}\n```\n\n### ⚠️ Notes\n- The higher the \"structures to locate on world load\" value, the longer new world creation will take, but the initial road network completeness increases. Adjust based on your hardware and needs.\n\n### ❓ Why another mod?\n- The author finds Countered's Settlement Roads too limited in scope, while RoadArchitect currently impacts performance more. The goal is to enable diverse, beautiful roadside builds and explore experimental ideas—hence this standalone project.And also created a version that natively supports Forge。\n\n### 🙏 Acknowledgments (References & Licenses)\nThis project incorporates code and concepts from the following open source projects:\n\n**RoadArchitect** (Apache-2.0)  \nhttps://github.com/Shadscure/RoadArchitect  \n- A* pathfinding algorithm implementation (PathFinder.java → RoadPathCalculator.java)\n- Cost calculation system (elevation, biome, terrain stability)\n- Grid-based pathfinding approach\n\nSee the `NOTICE` file for detailed attribution and license information.\n\n---\n\n**Note**: This project's package name (`net.shiroha233.roadweaver`) is inspired by Countered's Settlement Roads mod, but does not use code from that project. The core pathfinding implementation is derived from RoadArchitect.\n\n---\n\n<a name=\"中文\"></a>\n## 📖 简介（功能介绍）\nRoadWeaver 能在世界中的结构（如村庄、前哨站等）之间自动生成美观的道路网络，专注\"生成好看、实用、稳定的道路\"。\n\n### ✨ 核心功能\n- 🗺️ 智能路径生成：A* 寻路算法，避开陡峭与危险区域；根据地形高度、生物群系与地面稳定性调整路线；支持东西/南北/对角线方向\n- 🎨 道路类型：人工道路（石砖、石板）、自然道路（泥土、砂砾）、按生物群系自适应材料\n- 🏮 装饰系统：路灯（红石灯与昼夜自动控制）、间断式栏杆、距离标志、路标指引；大型点缀（秋千、长椅、凉亭）随机生成\n- 🧭 可视化调试：道路网络地图；状态颜色（计划/生成/完成/失败）；交互（拖拽、缩放、点击传送）；统计道路数量、长度与状态\n- 🚀 性能优化：多线程异步生成并发控制（最高128线程）；高度与地形缓存减少重复计算\n- 📚 多结构同时链接支持（1.0.2版本以上）\n- ⚡ 异步结构搜索（1.0.5版本以上）：非阻塞式结构搜索，可配置线程池（1-8线程）；轮询搜索避免缓存溢出；批量规划防止混乱连接\n- 🌳 最小生成树算法（1.0.5版本以上）：Kruskal 算法确保所有结构连通且总路径最短\n\n### 🗺️ 未来更新计划（Roadmap）\n- 更多装饰？引入更丰富的道路与路边装饰元素\n- 链接多种结构？支持更多原版/模组结构类型互联√\n- 链接群系？在群系层级建立策略性连接\n- 更多精美建筑？在道路沿线生成高质量景观建筑\n- 路途事件？在旅行途中触发小型事件或遭遇\n- 自定义链接？允许玩家/数据包定义特定连接规则\n\n### 📚 多结构支持（1.0.2版本以上）\n现在支持路径格式的结构ID（例如 `mvs:houses/azelea_house`）和通配符匹配：\n- `mvs:houses/*` - 匹配所有MVS房屋\n- `mvs:*` - 匹配所有MVS结构\n\n示例配置：\n```json\n{\n  \"structuresToLocate\": [\n    \"#minecraft:village\",\n    \"mvs:houses/*\",\n    \"mvs:shops/*\"\n  ]\n}\n```\n\n### ⚠️ 注意事项（Notes）\n- 设置中\"加载世界时定位的结构数量\"越多，创建新世界所需时间越久，但道路网络的初始完整度也更高。请根据设备性能与需求权衡。\n\n### ❓ 有类似的模组为什么还要做？（Why another mod?）\n- 作者认为 Countered's Settlement Roads 的功能偏少，RoadArchitect 在当前阶段对性能影响较大；同时作者希望在道路上看到各类精美建筑，并实现一些更大胆的玩法点子，因此决定开启独立项目以探索这些方向，并且制作了原生支持forge的版本。\n\n### 🙏 致谢（参考与许可）\n本项目借鉴了以下开源项目的代码和概念：\n\n**RoadArchitect**（Apache-2.0）  \nhttps://github.com/Shadscure/RoadArchitect  \n- A*寻路算法实现（PathFinder.java → RoadPathCalculator.java）\n- 成本计算系统（高度、生物群系、地形稳定性）\n- 基于网格的寻路方法\n\n详细归属和许可信息请参见 `NOTICE` 文件。\n\n---\n\n让 RoadWeaver 为你的 Minecraft 世界编织出美丽的",
      "default_branch": "1.20.1-Architectury"
    },
    "fetched_at": "2025-10-29T02:41:43.686039"
  },
  {
    "basic_info": {
      "name": "bkhtmltopdf",
      "full_name": "bkhtmltopdf/bkhtmltopdf",
      "owner": "bkhtmltopdf",
      "description": "Convert HTML to PDF using Blink (Chromium)",
      "url": "https://github.com/bkhtmltopdf/bkhtmltopdf",
      "clone_url": "https://github.com/bkhtmltopdf/bkhtmltopdf.git",
      "ssh_url": "git@github.com:bkhtmltopdf/bkhtmltopdf.git",
      "homepage": "https://bkhtmltopdf.com",
      "created_at": "2025-10-06T02:34:14Z",
      "updated_at": "2025-10-28T11:19:23Z",
      "pushed_at": "2025-10-27T08:53:08Z"
    },
    "stats": {
      "stars": 171,
      "forks": 7,
      "watchers": 171,
      "open_issues": 1,
      "size": 63
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 40620
      },
      "license": "Other",
      "topics": []
    },
    "content": {
      "readme": "## bkhtmltopdf\n\nbkhtmltopdf is an open-source (LGPLv3) `HTML-to-PDF` program that can automatically convert HTML into PDF files.\n\nbkhtmltopdf uses the [Chromium](https://www.chromium.org) Blink rendering engine. For community version deployments, a\ndisplay server is required. If you need “headless” operation, please purchase the [enterprise version](https://bkhtmltopdf.com/pricing).\n\nSee https://bkhtmltopdf.com for updated documentation.\n\n## Online\n\nThis online website supports HTML code input for PDF generation. You can enter any HTML,\nCSS, and JavaScript code.\n\nSee https://demo.bkhtmltopdf.com\n\n## Performance\n\nbkhtmltopdf delivers exceptional performance, rendering a 10-page PDF takes only about **60 milliseconds**.\n\nSee https://bkhtmltopdf.com/performance\n\n## Deployment\n\n**Community Version**: Licensed under **LGPLv3**\n\n```shell\nJDK21/bin/java -jar bkhtmltopdf-x.y.z.jar\n```\n\n**Enterprise Version**: For **evaluation purposes only**\n\n```shell\ndocker run --shm-size=256mb -it --rm -p 8080:8080 bkhtmltopdf/bkhtmltopdf-ee:latest\n```",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-29T02:41:44.821056"
  },
  {
    "basic_info": {
      "name": "Quill-AI",
      "full_name": "Feynix2004/Quill-AI",
      "owner": "Feynix2004",
      "description": null,
      "url": "https://github.com/Feynix2004/Quill-AI",
      "clone_url": "https://github.com/Feynix2004/Quill-AI.git",
      "ssh_url": "git@github.com:Feynix2004/Quill-AI.git",
      "homepage": null,
      "created_at": "2025-10-09T11:13:34Z",
      "updated_at": "2025-10-28T21:06:57Z",
      "pushed_at": "2025-10-21T07:57:25Z"
    },
    "stats": {
      "stars": 136,
      "forks": 22,
      "watchers": 136,
      "open_issues": 0,
      "size": 9483
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 2876447,
        "TypeScript": 2366634,
        "Dockerfile": 13087,
        "CSS": 9601,
        "Shell": 3762,
        "Batchfile": 3702,
        "JavaScript": 2314,
        "HTML": 1324
      },
      "license": "Apache License 2.0",
      "topics": []
    },
    "content": {
      "readme": "# Quill-AI - 智能对话系统平台\n\n[](https://opensource.org/licenses/MIT)\n\nQuill-AI 是一个基于大模型 (LLM) 和多能力平台 (MCP) 的智能 Agent 构建平台。它致力于简化 Agent 的创建流程，让用户无需复杂的流程节点或拖拽操作，仅通过自然语言和工具集成即可打造个性化的智能 Agent。\n\n<div align=\"center\">\n \n[![Java](https://img.shields.io/badge/Java-17-orange?style=flat-square)](https://openjdk.java.net/projects/jdk/17/)\n[![Spring Boot](https://img.shields.io/badge/Spring%20Boot-3.5.3-brightgreen?style=flat-square)](https://spring.io/projects/spring-boot)\n[![Next.js](https://img.shields.io/badge/Next.js-15-black?style=flat-square)](https://nextjs.org/)\n[![TypeScript](https://img.shields.io/badge/TypeScript-5-blue?style=flat-square)](https://www.typescriptlang.org/)\n[![PostgreSQL](https://img.shields.io/badge/PostgreSQL-15-blue?style=flat-square)](https://www.postgresql.org/)\n[![LangChain4j](https://img.shields.io/badge/LangChain4j-1.3.0-purple?style=flat-square)](https://docs.langchain4j.dev/)\n[![Docker](https://img.shields.io/badge/Docker-Ready-blue?style=flat-square)](https://www.docker.com/)\n[![License](https://img.shields.io/badge/License-MIT-green?style=flat-square)](LICENSE)\n\n</div>\n\n## 🔗 相关链接\n\n### 📦 子仓库\n- 🛡️ **高可用网关**: [API-Premium-Gateway](https://github.com/Feynix2004/API-Premium-Gateway) - 模型高可用组件\n- 🌐 **MCP网关**: [mcp-gateway](https://github.com/Feynix2004/mcp-gateway) - MCP服务统一管理\n- 🏪 **MCP社区**: [agent-mcp-community](https://github.com/Feynix2004/agent-mcp-community) - MCP Server 开源社区\n\n\n## 🏗️ 技术架构\n\n### 后端架构 (Java 17 + Spring Boot 3.5.3)\n\n基于**领域驱动设计(DDD)**的四层架构模式：\n\n```\n┌─────────────────────────────────────────────────────────────┐\n│                    Interface Layer (接口层)                     │\n│  ┌─────────────┐ ┌─────────────┐ ┌─────────────┐             │\n│  │ REST API    │ │   DTO       │ │Validation   │             │\n│  │ Controllers │ │ Conversion  │ │   & Auth    │             │\n│  └─────────────┘ └─────────────┘ └─────────────┘             │\n└─────────────────────────────────────────────────────────────┘\n                              │\n┌─────────────────────────────────────────────────────────────┐\n│                  Application Layer (应用层)                    │\n│  ┌─────────────┐ ┌─────────────┐ ┌─────────────┐             │\n│  │Agent Service│ │Conversation │ │   Workflow  │             │\n│  │Management   │ │ Service     │ │  Service    │             │\n│  └─────────────┘ └─────────────┘ └─────────────┘             │\n└─────────────────────────────────────────────────────────────┘\n                              │\n┌─────────────────────────────────────────────────────────────┐\n│                    Domain Layer (领域层)                      │\n│  ┌─────────────┐ ┌─────────────┐ ┌─────────────┐             │\n│  │   Entities  │ │ Value Objects│ │Domain Events│             │\n│  │   & Aggregates│             │ │             │             │\n│  └─────────────┘ └─────────────┘ └─────────────┘             │\n└─────────────────────────────────────────────────────────────┘\n                              │\n┌─────────────────────────────────────────────────────────────┐\n│               Infrastructure Layer (基础设施层)                │\n│  ┌─────────────┐ ┌─────────────┐ ┌─────────────┐             │\n│  │ PostgreSQL  │ │LangChain4j  │ │   External  │             │\n│  │   Database  │ │ Integration │ │  Services   │             │\n│  └─────────────┘ └─────────────┘ └─────────────┘             │\n└─────────────────────────────────────────────────────────────┘\n```\n\n### 核心技术栈\n\n#### 后端技术\n- **Java 17** + **Spring Boot 3.5.3** - 现代化Java企业级框架\n- **MyBatis-Plus 3.5.7** - 高性能ORM框架\n- **PostgreSQL 15** - 企业级关系型数据库\n- **LangChain4j 1.3.0** - AI模型集成框架\n  - 支持OpenAI、阿里云百炼、智谱AI等多种LLM提供商\n  - 集成MCP (Model Context Protocol)支持\n- **JWT认证** - 安全的用户认证和授权机制\n- **事件驱动架构** - AgentEventBus异步消息处理\n\n#### 前端技术\n- **Next.js 15** + **React 19** - 现代化React全栈框架\n- **TypeScript 5** - 类型安全的JavaScript超集\n- **Tailwind CSS 4.1.9** - 原子化CSS框架\n- **Ant Design 5.26.7** - 企业级UI组件库\n- **Radix UI** - 无头组件库，提供完全的可定制性\n- **Zustand** - 轻量级状态管理方案\n- **React Hook Form + Zod** - 高性能表单处理和验证\n- **AI SDK** - Vercel AI对话集成支持\n- **react-markdown** - Markdown内容渲染支持\n\n#### 开发运维\n- **Docker + Docker Compose** - 容器化部署方案\n- **Maven** - Java项目依赖管理\n- **ESLint + Prettier** - 代码质量保证\n- **PostgreSQL** - 数据库初始化和管理\n\n\n\n## 👨‍💻 开发环境部署\n\n```bash\n# 1. 克隆项目\ngit clone https://github.com/Feynix2004/Quill-AI.git\ncd AgentX/deploy\n\n# 2. 启动开发环境（Linux）\n./start.sh\n\n# 2. 启动开发环境（Windows）\nstart.bat\n```\n\n\n## ⏳ 功能\n - [x] Agent 管理（创建/发布）\n - [x] LLM 上下文管理（滑动窗口，摘要算法）\n - [x] Agent 策略（MCP）\n - [x] 大模型服务商\n - [x] 用户\n - [x] 工具市场\n - [x] MCP Server Community\n - [x] MCP Gateway \n - [x] 预先设置工具\n - [x] Agent 定时任务\n - [x] Agent OpenAPI\n - [x] 模型高可用组件\n - [x] RAG\n - [x] 计费\n - [x] Agent 监控\n - [x] 嵌入网站组件\n \n## ⚙️ 环境变量配置\n\nAgentX使用`.env`配置文件进行环境变量管理，支持丰富的自定义配置\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-29T02:41:45.956845"
  },
  {
    "basic_info": {
      "name": "spring-microservices-blueprint",
      "full_name": "cuongnh28/spring-microservices-blueprint",
      "owner": "cuongnh28",
      "description": "Java Spring Boot microservices stack (PostgreSQL, Kafka, Elasticsearch, Kibana, Fluentd, JWT Auth, Swagger) — easily build & run all services in two commands.",
      "url": "https://github.com/cuongnh28/spring-microservices-blueprint",
      "clone_url": "https://github.com/cuongnh28/spring-microservices-blueprint.git",
      "ssh_url": "git@github.com:cuongnh28/spring-microservices-blueprint.git",
      "homepage": "",
      "created_at": "2025-10-16T10:40:06Z",
      "updated_at": "2025-10-24T06:15:04Z",
      "pushed_at": "2025-10-17T09:57:27Z"
    },
    "stats": {
      "stars": 127,
      "forks": 55,
      "watchers": 127,
      "open_issues": 0,
      "size": 240
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 137216,
        "Shell": 3431,
        "Dockerfile": 2386,
        "HTML": 11
      },
      "license": null,
      "topics": [
        "docker",
        "docker-compose",
        "elasticsearch",
        "event-driven",
        "jwt",
        "kafka",
        "kibana",
        "logging",
        "maven",
        "microservices",
        "microservices-architecture",
        "monitoring",
        "postgresql",
        "spring-boot",
        "spring-security"
      ]
    },
    "content": {
      "readme": "# Spring Microservices Blueprint\n\n🚀 Java Spring Boot microservices with complete ecosystem: PostgreSQL, Kafka+Zookeeper, Elasticsearch+Kibana+Fluentd, JWT auth, Swagger. Two simple commands launch 10+ pre-configured services!\n\nThis project demonstrates event-driven microservices with request tracing: each request carries a correlation_id across REST calls and Kafka messages, making logging and observability easy.\n\n## 🏗️ Multi-Module Maven Architecture\n\nThis project demonstrates **Maven Multi-Module** best practices:\n\n```\nspring-microservices-blueprint/\n├── pom.xml                    # Parent POM with dependency management\n├── commons/                   # Shared utilities and DTOs\n│   ├── pom.xml\n│   └── src/main/java/\n├── account-service/           # User management microservice\n│   ├── pom.xml\n│   └── src/main/java/\n└── product-service/           # Product management microservice\n    ├── pom.xml\n    └── src/main/java/\n```\n\n**Benefits:**\n- **Shared Dependencies**: Common libraries managed in parent POM\n- **Code Reusability**: Shared DTOs and utilities in commons module\n- **Consistent Versioning**: All modules use same version from parent\n- **Easy Setup & Launch**: Only two commands needed to build and start all services\n- **Simplified Development**: Debugging, logging, and monitoring pre-configured for convenience\n\n## 🔧 Prerequisites\n\n**Required:**\n- **Java 17+**\n- **Maven 3.9+**\n- **Docker Desktop**\n\n**Verify installation:**\n```bash\njava -version    # Should show Java 17+\nmvn -version     # Should show Maven 3.9+\ndocker --version # Should show Docker 20.10+\n```\n\n## 🚀 Quick Start (5 Minutes)\n\n**Build and start everything:**\n```bash\n# Build Maven artifacts first\nmvn clean install -DskipTests\n\n# Build Docker images and start all services\ndocker compose up -d --build\n```\n\n**Wait for services to be ready (30-60 seconds):**\n```bash\ndocker compose ps\n```\n\n**Test the system:**\n```bash\n# Test Account Service\ncurl http://localhost:8088/api/test/all\n\n# Test Product Service  \ncurl http://localhost:8089/api/product/search\n```\n\nIf both return data, you're ready! 🎉\n\n## 📚 Complete Documentation\n\n### 🏁 Getting Started\n- **[01-Quick-Setup.md](docs/01-Quick-Setup.md)** - Get running in 5 minutes\n- **[02-System-Architecture.md](docs/02-System-Architecture.md)** - Understand the design\n- **[03-API-Reference.md](docs/03-API-Reference.md)** - Complete API documentation\n\n### 🛠️ Development & Testing  \n- **[04-Development-Guide.md](docs/04-Development-Guide.md)** - Local development workflow\n- **[05-Testing-Guide.md](docs/05-Testing-Guide.md)** - Testing strategies and scripts\n- **[06-Debugging-Guide.md](docs/06-Debugging-Guide.md)** - Debug in containers\n\n### 🐳 Operations & Deployment\n- **[07-Docker-Operations.md](docs/07-Docker-Operations.md)** - Container management\n- **[08-Monitoring-Logging.md](docs/08-Monitoring-Logging.md)** - Observability setup\n- **[09-Troubleshooting.md](docs/09-Troubleshooting.md)** - Common issues & solutions\n\n### 📋 Reference Materials\n- **[10-Postman-Collection.md](docs/10-Postman-Collection.md)** - API testing with Postman\n- **[11-Configuration-Reference.md](docs/11-Configuration-Reference.md)** - All configuration options\n\n## 🎯 What You'll Learn\n\n### Core Microservices Patterns\n- **Service Decomposition** - Separate services for different business domains\n- **Database Per Service** - Independent data storage for each service\n- **API Gateway Pattern** - Centralized entry point (future enhancement)\n- **Service Discovery** - Dynamic service location (future enhancement)\n\n### Communication Patterns\n- **Synchronous Communication** - REST APIs with Feign clients\n- **Asynchronous Messaging** - Event-driven architecture with Kafka\n- **Request/Response** - Direct service-to-service calls\n- **Publish/Subscribe** - Event broadcasting for loose coupling\n\n### Cross-Cutting Concerns\n- **Authentication & Authorization** - JWT tokens with role-based access\n- **Centralized Logging** - ELK Stack for log aggregation\n- **Distributed Tracing** - Correlation IDs across service calls\n- **Health Monitoring** - Service health checks and metrics\n- **Distributed Tracing & Logging** - request body, response body, and Kafka messages carry correlation_id, making it easy to trace interactions across services.\n\n\n### Infrastructure & DevOps\n- **Multi-Module Architecture** - Maven parent-child module structure\n- **Containerization** - Docker for consistent environments\n- **Container Orchestration** - Docker Compose for multi-service deployment\n- **Configuration Management** - Environment-based configuration\n- **Database Management** - PostgreSQL with proper schema design\n\n## 🏗️ System Architecture\n\n```\n┌─────────────────────────────────────────────────────────────┐\n│                     Client Layer                            │\n│  Web Browser, Mobile App, Postman, curl, etc.             │\n└─────────────────────┬───────────────────────────────────────┘\n                      │ HTTP/REST\n┌─────────────────────▼─────────────────────────",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-29T02:41:47.079112"
  },
  {
    "basic_info": {
      "name": "java-producer",
      "full_name": "bitDive/java-producer",
      "owner": "bitDive",
      "description": "java producer for bitdive system",
      "url": "https://github.com/bitDive/java-producer",
      "clone_url": "https://github.com/bitDive/java-producer.git",
      "ssh_url": "git@github.com:bitDive/java-producer.git",
      "homepage": null,
      "created_at": "2025-10-03T12:42:55Z",
      "updated_at": "2025-10-28T17:53:46Z",
      "pushed_at": "2025-10-07T11:08:53Z"
    },
    "stats": {
      "stars": 117,
      "forks": 8,
      "watchers": 117,
      "open_issues": 0,
      "size": 203
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 390496
      },
      "license": "Other",
      "topics": []
    },
    "content": {
      "readme": "",
      "default_branch": "master"
    },
    "fetched_at": "2025-10-29T02:41:48.197194"
  },
  {
    "basic_info": {
      "name": "MiRearScreenSwitcher",
      "full_name": "GoldenglowSusie/MiRearScreenSwitcher",
      "owner": "GoldenglowSusie",
      "description": "为小米17Pro及以上（也许及以后）机型的背屏一键切换器",
      "url": "https://github.com/GoldenglowSusie/MiRearScreenSwitcher",
      "clone_url": "https://github.com/GoldenglowSusie/MiRearScreenSwitcher.git",
      "ssh_url": "git@github.com:GoldenglowSusie/MiRearScreenSwitcher.git",
      "homepage": null,
      "created_at": "2025-10-16T13:23:29Z",
      "updated_at": "2025-10-28T22:03:32Z",
      "pushed_at": "2025-10-28T06:27:19Z"
    },
    "stats": {
      "stars": 115,
      "forks": 10,
      "watchers": 115,
      "open_issues": 1,
      "size": 1180
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 414456,
        "Dart": 122638,
        "AIDL": 3816
      },
      "license": "GNU General Public License v3.0",
      "topics": []
    },
    "content": {
      "readme": "# MiRearScreenSwitcher (MRSS)\n\n为小米17Pro/17Pro Max等双屏设备的背屏一键切换器\n\n## 📄 开源协议\n\n**⚠️ 重要协议变更通知**\n\n- **V3.0.0及以后版本**: 采用 **GPL-3.0** 开源协议\n- **V3.0.0以前版本**: 仍受 **MIT** 协议保护\n\n此变更旨在保护项目的核心创新，同时保持开源精神。V3.0.0以前的所有版本将继续按照MIT协议自由使用。\n\n**💬 交流与支持**\n- QQ交流群：**932738927** - [加入群聊](https://tgwgroup.ltd/2025/10/21/%e5%85%b3%e4%ba%8emrss%e4%ba%a4%e6%b5%81%e7%be%a4/)\n- 打赏支持：[请作者喝杯咖啡](https://tgwgroup.ltd/2025/10/19/%e5%85%b3%e4%ba%8e%e6%89%93%e8%b5%8f/) ☕\n\n---\n\n## ✨ 功能特性 (V3.1.1)\n\n- 🎯 **快捷切换**: 通过控制中心快捷开关一键将应用切换到背屏\n- 📸 **背屏截图**: 一键截取背屏画面并保存到相册（自动收起控制中心，keycode唤醒）\n- 📹 **背屏录屏**: 悬浮窗控制，录制背屏画面并保存到Movies文件夹（持续keycode唤醒）\n- ⚡ **充电动画**: 插电时在背屏显示精美的充电动画（3D闪电+流动液体效果）\n- 📢 **通知推送**: 收到通知时自动在背屏显示通知内容（支持应用选择+隐私模式+动态重载）\n- 🔓 **后台可用**: 即使应用在后台也能正常触发切换\n- 🚀 **无需ROOT**: 基于Shizuku实现，无需ROOT权限\n- 🎨 **精致UI**: Material 3设计，四色渐变UI，精确2.84超椭圆圆角\n- 🛡️ **智能保护**: 防止系统Launcher覆盖投射的应用\n- 💡 **背屏常亮**: 可选的背屏常亮功能，防止自动息屏\n- 🔄 **智能监控**: 背屏应用退出或切换时自动清除通知\n- 📱 **DPI调整**: 支持动态调整背屏DPI，优化显示效果（推荐260-350）\n- 🤚 **背屏遮盖检测**: 可选的接近传感器检测功能\n- 🔄 **背屏旋转**: 支持背屏0°/90°/180°/270°旋转，应用自动复活\n- 🚫 **任务隐藏**: 主应用不在最近任务列表显示，防止误清理\n- 🌐 **URI调用**: 支持通过mrss://协议从外部应用控制MRSS（Tasker/MacroDroid等）\n- 🔔 **智能通知**: 支持跟随系统勿扰模式和仅在锁屏时通知\n- 🎬 **媒体库集成**: 截图和录制自动刷新到相册，方便查看\n\n## 📋 使用前提\n\n1. **设备要求**: 支持背屏的小米手机（小米17Pro/17Pro Max等双屏设备）\n2. **Shizuku**: 需要安装并启动Shizuku\n   - 下载地址: [Shizuku官网](https://shizuku.rikka.app/)\n   - 启动方式: ADB或无线调试\n\n## 🚀 使用方法\n\n### 1. 初次设置\n\n1. 安装MRSS应用\n2. 确保Shizuku已启动\n3. 打开MRSS应用，授予Shizuku权限\n4. 等待状态显示\"一切就绪\"\n\n### 2. 添加快捷开关\n\n1. 从屏幕顶部下拉打开**控制中心**\n2. 点击**编辑按钮**\n3. 找到以下快捷开关并添加：\n   - **切换至背屏**: 将当前应用投放到背屏\n   - **获取背屏截图**: 截取背屏画面并保存\n   - **背屏录制**: 录制背屏画面（可选）\n4. 完成！\n\n### 3. 日常使用\n\n**切换应用到背屏：**\n1. 打开任意想要切换到背屏的应用\n2. 下拉控制中心\n3. 点击\"**切换至背屏**\"快捷开关\n4. 应用立即切换到背屏，控制中心自动收起\n5. 翻转手机即可在背屏查看\n\n**截取背屏画面：**\n1. 下拉控制中心\n2. 点击\"**获取背屏截图**\"快捷开关\n3. 控制中心自动收起，截图保存到相册\n\n**录制背屏画面：**\n1. 下拉控制中心\n2. 点击\"**背屏录制**\"快捷开关\n3. 悬浮窗出现，点击红色圆形按钮开始录制\n4. 录制中按钮变为方形，再次点击停止录制\n5. 视频保存到Movies/MRSS_*.mp4\n\n**返回主屏：**\n- 方法1: 点击通知\"点击将应用切换回主屏\"\n- 方法2: 在背屏退出应用，通知自动消失\n\n**充电动画和通知：**\n- 充电动画: 插电时自动显示闪电图标充电动画，可在应用内关闭\n- 通知推送: 在应用内启用，选择需要推送的应用，支持隐私模式和勿扰模式跟随，自动销毁时间可自定义（无上限）\n\n**调整背屏显示：**\n- DPI调整: 在应用内设置，推荐260-350\n- 旋转控制: 支持0°/90°/180°/270°旋转\n- 背屏常亮: 可在应用内开关\n- 背屏遮盖检测: 可在应用内开关（基于接近传感器）\n\n**💡 提示**: \n- 即使MRSS应用在后台或已关闭，快捷开关依然可以正常使用！\n- MRSS不会出现在最近任务列表，避免误清理\n- 背屏常亮功能可在应用内开关\n- 应用退出或切换时，通知会自动清除\n- 充电动画和通知推送都可独立开关\n- 支持通过URI调用（mrss://switch?current=1等）\n\n## 🔧 技术实现\n\n- **Flutter**: 跨平台UI框架，Material 3设计，四色渐变+精确超椭圆圆角\n- **Shizuku**: 提供shell权限执行特权操作\n- **Quick Settings Tile**: Android系统级快捷开关服务（切换/截图/录屏）\n- **ActivityTaskManager**: 通过system service调用实现显示切换\n- **Foreground Service + WakeLock**: 前台服务持有唤醒锁，可选的背屏常亮\n- **NotificationListenerService**: 系统通知监听，实时推送到背屏\n- **Keycode Wakeup**: 使用input keyevent KEYCODE_WAKEUP精确唤醒背屏\n- **Media Scanner**: 自动刷新媒体库，截图和录制自动出现在相册\n- **Dynamic Animation Reload**: 通知动画动态重载机制，支持连续通知\n- **Rear Animation Manager**: 统一管理充电动画和通知动画，实现动画打断\n- **智能监控**: 每2秒检测背屏前台应用，自动清除无效通知\n- **充电监听**: BroadcastReceiver监听充电事件，触发背屏动画\n- **3D动画**: 自定义Canvas绘制，非线性动画，重力感应液体效果\n- **Screenshot & Record**: screencap截图 + screenrecord录屏\n- **URI Protocol**: 支持mrss://协议外部调用\n\n## 📝 权限说明\n\n- `moe.shizuku.manager.permission.API_V23`: Shizuku API权限，用于执行特权操作\n- `android.permission.WAKE_LOCK`: 保持背屏常亮\n- `android.permission.FOREGROUND_SERVICE`: 前台服务权限\n- `android.permission.POST_NOTIFICATIONS`: 通知权限（Android 13+）\n- `android.permission.BIND_NOTIFICATION_LISTENER_SERVICE`: 通知监听服务（可选）\n- `android.permission.SYSTEM_ALERT_WINDOW`: 悬浮窗权限（录屏功能需要）\n- `android.permission.QUERY_ALL_PACKAGES`: 获取应用列表（通知功能需要）\n- 系统广播接收: 监听`ACTION_POWER_CONNECTED/DISCONNECTED`充电事件\n\n## 🛠️ 开发构建\n\n```bash\n# 安装依赖\nflutter pub get\n\n# 构建Debug APK\nflutter build apk --debug\n\n# 构建Release APK (arm64-v8a, 代码混淆+资源压缩)\nflutter build apk --release --split-per-abi --target-platform android-arm64\n```\n\n生成的APK位于: `build/app/outputs/flutter-apk/app-arm64-v8a-release.apk`\n\n## 🔍 技术细节\n\n### V3.0 核心功能\n\n1. **智能应用切换** 🎯\n   - 通过Quick Settings Tile快捷开关触发\n   - 使用`am stack`命令获取前台应用\n   - 调用`service call activity_task 50`切换显示屏\n   - 自动杀死系统Launcher防止挤占\n   - Toast提示显示具体应用名\n\n2. **充电动画** ⚡\n   - 插电时自动在背屏显示充电动画\n   - 3D玻璃闪电容器 + 流动绿色液体\n   - 重力感应真实液体效果\n   - 非线性动画，从0%填充到当前电量\n   - UI图标使用闪电⚡标识，更符合充电主题\n   - 可在应用内开关，支持充电动画常亮模式\n\n3. **通知推送** 📢\n   - NotificationListenerService监听系统通知\n   - 选择需要推送的应用（支持搜索、批量选择）\n   - 通知内容显示在背屏（应用图标+标题+内容）\n   - 隐私模式：隐藏通知具体内容\n   - 精美动画：图标缩放+内容淡入\n   - 自动销毁时间可自定义（无上限，支持任意时长）\n   - 通知开关状态持久化，重启后正确恢复\n\n4. **背屏录屏** 📹\n   - 悬浮窗控制，红色圆形/方形按钮\n   - 使用screenrecord录制背屏画面\n   - 持续唤醒背屏防止录制中断\n   - 视频保存到Movies/MRSS_*.mp4\n   - 可拖动悬浮窗位置\n\n5. **前台Service保活** 🛡️\n   - 统一的\"MRSS内核服务\"前台通知\n   - 可选的背屏常亮功能（FLAG_KEEP_SCREEN_ON）\n   - 点击通知可快速返回主屏\n   - 主应用隐藏于最近任务，防止误清理\n\n6. **智能监控与清理** 🔄\n   - 每2秒检测背屏前台应用状态\n   - 应用退出或切换时自动停止服务并清除通知\n   - 防止多应用同时投放\n\n7. **DPI动态调整** 📱\n   - 支持实时调整背屏显示密度\n   - 使用`wm density`命令修改\n   - 一键还原默认设置\n   - 推荐范围: 260-350\n\n8. **背屏旋转控制** 🔄\n   - 支持4个方向: 0°/90°/180°/270°\n   - 使用`wm user-rotation -d 1`独立控制背屏\n   - 旋转后应用自动复活\n   - 实时显示当前旋转状态\n\n9. **背屏遮盖检测** 🤚\n   - 可选的接近传感器检测功能\n   - 应用内可开关\n   \n10. **URI协议支持** 🌐\n   - mrss://switch?current=1 - 切换当前应用\n   - mrss://switch?packageName=xxx - 切换指定应用\n   - mrss://return?curre",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-29T02:41:49.338940"
  },
  {
    "basic_info": {
      "name": "API-Premium-Gateway",
      "full_name": "Feynix2004/API-Premium-Gateway",
      "owner": "Feynix2004",
      "description": null,
      "url": "https://github.com/Feynix2004/API-Premium-Gateway",
      "clone_url": "https://github.com/Feynix2004/API-Premium-Gateway.git",
      "ssh_url": "git@github.com:Feynix2004/API-Premium-Gateway.git",
      "homepage": null,
      "created_at": "2025-10-09T11:14:53Z",
      "updated_at": "2025-10-28T23:33:53Z",
      "pushed_at": "2025-10-09T11:37:13Z"
    },
    "stats": {
      "stars": 113,
      "forks": 11,
      "watchers": 113,
      "open_issues": 0,
      "size": 399
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 375098,
        "HTML": 39824,
        "JavaScript": 35779,
        "Dockerfile": 8148
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "# API Premium Gateway\n\n### 开发模式\n```bash\n# 克隆项目\ngit clone https://github.com/Feynix2004/API-Premium-Gateway.git\ncd API-Premium-Gateway\n\n# 启动开发环境\ndocker compose up -d --build\n```\n\n### 服务访问\n- **API网关**: http://localhost:8081\n- **健康检查**: http://localhost:8081/api/health\n- **数据库**: localhost:5433 (用户名: gateway_user, 密码: gateway_pass)\n\n### 常用命令\n```bash\n# 查看服务状态\ndocker compose ps\n\n# 查看日志\ndocker compose logs -f\n\n# 停止服务\ndocker compose down\n\n# 重启服务\ndocker compose restart\n\n# 重置数据库（会删除所有数据）\ndocker compose down\ndocker volume rm api-premium-gateway_postgres_data\ndocker compose up -d --build\n```\n\n-----\n\n## 项目的由来\n\n该项目由 AgentX 项目引入，因需要对模型的选择高可用。\n\n## 🚀 项目概览\n\n**API-Premium Gateway** 是一个轻量级、自研的 Java 服务，旨在为您的分布式系统和应用提供**强大的 API 高可用与智能调度能力**。它作为您服务调用各类后端 API（包括第三方服务、自建微服务、AI 模型等）的**智能中间层**，确保您的业务在面对外部API波动时依然稳定可靠。\n\n**核心解决问题：**\n\n  * **API 不可用：** 某个第三方 API 或自建服务宕机了怎么办？\n  * **性能瓶颈：** 某个 API 实例响应慢或负载高，如何自动切换？\n  * **多租户管理：** 不同项目或用户如何隔离地使用和管理 API 资源？\n  * **调用可观测性：** 如何实时了解后端 API 的健康状况和性能表现？\n\n-----\n\n## ✨ 核心特性\n\n  * **⚡️ API 高可用：**\n      * **平替（Fallback）：** 当首选 API 实例失效时，自动无缝切换到其他可用实例。\n      * **降级（Degradation）：** 在高优先级API不可用时，可选择切换到功能受限但更稳定的备用API。\n      * **熔断（Circuit Breaker）：** 自动隔离故障API，防止雪崩效应。\n      * **限流（Rate Limiting）：** 保护后端API不被过量请求压垮。\n  * **🧠 智能调度与负载均衡：**\n      * 根据API实例的**实时性能指标**（成功率、延迟）、**成本**、**优先级**等，动态选择最佳的调用路径。\n  * **🔐 安全与隔离：**\n      * 支持**多项目、多用户**的API资源隔离管理。\n      * 提供统一的**API Key/Token 鉴权**机制，确保接口安全。\n  * **📊 调用可观测性：**\n      * 实时**收集并分析**API调用结果（成功/失败、延迟、Token使用等），为决策和监控提供数据支撑。\n  * **🛠️ 简洁高效：**\n      * 基于 Spring Boot 自研，不依赖复杂网关框架，专注于核心功能，保持轻量级和高性能。\n      * 通过**SDK**简化上游服务集成。\n\n-----\n\n## 🚀 工作原理\n\nAPI-Premium Gateway 扮演着**智能决策者**与**状态收集者**的角色。它不直接代理实际的 API 请求，而是提供一套机制，让上游服务：\n\n1.  **注册 API 实例：** 上游服务启动时，通过 Gateway SDK 上报自身可用的后端 API 实例（如 OpenAI 的 GPT-4o、自建的图片生成服务等），并附带其 `actualEndpoint`、`providerInfo`、`优先级`、`成本` 等元数据。\n2.  **请求智能选择：** 当上游服务需要调用某个逻辑 API（如 `gpt4o`）时，它首先向 Gateway 发送请求，Gateway 会根据内部算法（高可用、负载均衡、熔断等）选择当前**最佳**或**可用**的后端 API 实例。\n3.  **上游服务执行调用：** Gateway 返回选定的 API 实例的详细信息（如 `actualEndpoint`、`businessId`、`providerInfo`）。**上游服务拿到这些信息后，自行发起对后端 API 的实际调用。**\n4.  **上报调用结果：** 无论调用成功或失败，上游服务都必须将结果（成功/失败、延迟、错误信息等）上报给 Gateway。Gateway 利用这些数据实时更新后端 API 实例的健康状况和性能指标，为下一次决策提供依据。\n\n-----\n\n## 📐 架构概览\n\n![mermaid-diagram-2025-06-02-170627.png](docs/images/mermaid-diagram-2025-06-02-170627.png)\n\n-----\n\n## 🛠️ 技术栈\n\n  * **后端框架：** Spring Boot 3.2.0\n  * **Java 版本：** Java 17\n  * **数据存储：** PostgreSQL 15\n  * **ORM 框架：** MyBatis Plus\n  * **容器化：** Docker + Docker Compose\n  * **架构模式：** DDD (领域驱动设计)\n\n-----\n\n## 🎯 上游服务集成 (Java SDK)\n\n1.  **添加 SDK 依赖：**\n    ```xml\n    <dependency>\n        <groupId>com.your-org</groupId>\n        <artifactId>api-premium-gateway-sdk</artifactId>\n        <version>1.0.0-SNAPSHOT</version>\n    </dependency>\n    ```\n\n2.  **配置 SDK：**\n    在您的 Spring Boot 应用中配置 Gateway 的基础 URL 和 API Key。\n\n3.  **注册 API 实例：**\n    ```java\n    // 示例：注册一个模型API实例\n    gatewaySdkClient.registerApi(\n        \"my-project-id\",\n        \"user-id-optional\",\n        \"gpt4o-model\",\n        \"model\",\n        \"my-gpt4o-business-id-001\",\n        \"https://api.openai.com/v1/chat/completions\",\n        Map.of(\"provider\", \"OpenAI\", \"version\", \"gpt-4o\"),\n        Map.of(\"priority\", 100, \"costPerToken\", 0.000015)\n    );\n    ```\n\n4.  **选择并调用 API：**\n    ```java\n    // 1. 请求 Gateway 选择最佳 API\n    SelectedApiInstance selectedApi = gatewaySdkClient.selectApi(\n        \"my-project-id\",\n        \"user-id-optional\",\n        \"gpt4o-model\",\n        \"model\"\n    );\n\n    // 2. 根据 Gateway 返回信息，执行实际调用\n    // ... 使用 selectedApi.getActualEndpoint() 和 selectedApi.getProviderInfo()\n\n    // 3. 上报调用结果\n    gatewaySdkClient.reportApiResult(\n        \"my-project-id\",\n        \"user-id-optional\",\n        \"gpt4o-model\",\n        selectedApi.getBusinessId(),\n        true, // success\n        150L, // latencyMs\n        null, // errorMessage\n        null, // errorType\n        Map.of(\"promptTokens\", 100, \"completionTokens\", 200)\n    );\n    ```\n\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-29T02:41:50.507546"
  },
  {
    "basic_info": {
      "name": "Ims",
      "full_name": "vvb2060/Ims",
      "owner": "vvb2060",
      "description": null,
      "url": "https://github.com/vvb2060/Ims",
      "clone_url": "https://github.com/vvb2060/Ims.git",
      "ssh_url": "git@github.com:vvb2060/Ims.git",
      "homepage": null,
      "created_at": "2025-10-12T13:31:19Z",
      "updated_at": "2025-10-28T06:52:12Z",
      "pushed_at": "2025-10-16T03:32:18Z"
    },
    "stats": {
      "stars": 107,
      "forks": 8,
      "watchers": 107,
      "open_issues": 4,
      "size": 55
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 5931
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "",
      "default_branch": "master"
    },
    "fetched_at": "2025-10-29T02:41:51.620670"
  },
  {
    "basic_info": {
      "name": "Java-humanify",
      "full_name": "Initial-One/Java-humanify",
      "owner": "Initial-One",
      "description": "Deobfuscate Java code using LLMs (\"ChatGPT,Ollama,DeepSeek,etc.\")",
      "url": "https://github.com/Initial-One/Java-humanify",
      "clone_url": "https://github.com/Initial-One/Java-humanify.git",
      "ssh_url": "git@github.com:Initial-One/Java-humanify.git",
      "homepage": "",
      "created_at": "2025-10-02T07:02:53Z",
      "updated_at": "2025-10-29T02:30:26Z",
      "pushed_at": "2025-10-26T07:38:32Z"
    },
    "stats": {
      "stars": 97,
      "forks": 22,
      "watchers": 97,
      "open_issues": 0,
      "size": 350
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 200459
      },
      "license": "Apache License 2.0",
      "topics": []
    },
    "content": {
      "readme": "# Java Humanify\n[![English](https://img.shields.io/badge/README-English-blue)](./README.md)\n[![简体中文](https://img.shields.io/badge/README-简体中文-brightgreen)](./README_zh.md)\n\n[//]: # ([![WeChat]&#40;https://img.shields.io/badge/WeChat-Add-07C160?logo=wechat&logoColor=white&#41;]&#40;./assets/wechat-qr.jpg&#41;)\n> Humanize decompiled/obfuscated Java code with LLMs (OpenAI, DeepSeek, Ollama, etc.): better names + automatic Javadoc.\n\nJava Humanify uses LLMs to generate more readable names for **classes / methods / fields / local variables**, and can automatically create Javadoc for **classes / constructors / methods**.  \nAll rewrites are performed at the **AST layer (JavaParser + Symbol Solver)**, ensuring the output remains **semantically 1:1 equivalent** to the input and stays compilable.\n\n---\n\n## Why this exists\n\nDecompiled / minified / obfuscated Java is painful to read:\n\n```java\npackage demo.mix;public final class a{private static final int[] O={0,1,1,2};private a(){}public static int h(String s){long x=0x811c9dc5L;if(s==null)return 0;int i=0,n=s.length(),j=O[2];while(i<n){char c=s.charAt(i++);x^=c;x*=0x01000193L;x&=0xffffffffL;j^=(c<<1);j^=j>>>7;if((i&3)==0)x^=(j&0xff);}return (int)x;}}\n```\n\nJava Humanify renames identifiers:\n\n```java\npackage demo.mix;\n\n/**\n * Computes a 32-bit hash for the input string using FNV-1a with additional state mixing.\n */\npublic final class HashCalculator {\n\n    private static final int[] O = { 0, 1, 1, 2 };\n\n    /**\n     * Private constructor to prevent instantiation of this utility class.\n     */\n    private HashCalculator() {}\n\n    /**\n     * Calculates a 32-bit hash value for the input string using FNV-1a with additional state mixing.\n     *\n     * @param inputString parameter\n     * @return return value\n     */\n    public static int calculateHash(String inputString) {\n        long storedValue = 0x811c9dc5L;\n        if (inputString == null) return 0;\n        int index = 0, stringLength = inputString.length(), hashState = O[2];\n        while (index < stringLength) {\n            char currentChar = inputString.charAt(index++);\n            storedValue ^= currentChar;\n            storedValue *= 0x01000193L;\n            storedValue &= 0xffffffffL;\n            hashState ^= (currentChar << 1);\n            hashState ^= hashState >>> 7;\n            if ((index & 3) == 0) storedValue ^= (hashState & 0xff);\n        }\n        return (int) storedValue;\n    }\n}\n```\n\nLLMs do **not** touch your code structure.  \nThey only propose names / comments. Renaming is applied on the AST with symbol resolution; constructors/imports/file names kept in sync.\n\n---\n\n## Key Features\n\n- **Pluggable LLMs**: OpenAI / DeepSeek / Local (Ollama, OpenAI-compatible endpoints).\n- **Automatic Javadoc (`annotate`)**: supports classes, enums, records, constructors, and methods; auto-generates `@param/@return/@throws`.\n  - Optional **offline heuristics (`dummy`)**: zero cost and no API key, but lower quality than LLMs.\n- **Signature-safe renames**: centered on classFqn / methodSig / fieldFqn; applied at the AST level; constructors/imports/file names updated accordingly.\n- **Controllable cost & throughput**: batching (`--batch`) + concurrency (`--max-concurrent`) + snippet truncation (`--head/--tail/--maxBodyLen`).\n- **`humanify-apk` one-shot APK flow**: give it an `.apk`, it will internally decode (apktool/jadx), deobfuscate/rename code, generate readable Javadoc, and output human-readable Java source — no extra tools to install.\n\n---\n\n## Pipeline\n\n```\nanalyze  →  suggest  →  apply  →  annotate\n(generate snippets)  (generate names)  (AST apply)  (auto Javadoc)\n```\n\n- **analyze**: scans source code to produce `snippets.json` (configurable string-literal capture and directory exclusion).\n- **suggest**: calls LLM/local/heuristics to convert `snippets.json` → `mapping.json` (rename map).\n- **apply**: applies the mapping at the AST level, preserving semantics/references and writing to a new directory.\n- **annotate**: generates/overwrites Javadoc (supports `--lang zh|en`, `--style concise|detailed`).\n\n> The one-shot command `humanify` runs these four steps in order on an existing source tree.  \n> The one-shot command `humanify-apk` first decompiles an APK into Java source, then runs the full pipeline automatically and gives you cleaned, renamed, documented code.\n\n---\n\n## Quick Start\n\n### One-shot (recommended)\n\n```bash\n# OpenAI\nexport OPENAI_API_KEY=sk-xxxx\njava -jar target/java-humanify-*.jar humanify --provider openai --model gpt-4o-mini samples/src samples/out\n```\n\n```bash\n# DeepSeek\nexport DEEPSEEK_API_KEY=sk-xxxx\njava -jar target/java-humanify-*.jar humanify --provider deepseek --model deepseek-chat samples/src samples/out\n```\n\n```bash\n# Local (Ollama)\n# Make sure the model is pulled: ollama run llama3.1:8b (or any model you prefer)\njava -jar target/java-humanify-*.jar humanify --provider local --local-api ollama --endpoint http://localhost:11434 --model llama3.1:8b samples/src samples/out\n```\n\n```bash\n# APK mode (humani",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-29T02:41:52.721120"
  },
  {
    "basic_info": {
      "name": "OpenMyau",
      "full_name": "60124808866/OpenMyau",
      "owner": "60124808866",
      "description": "Myau Client for those who can’t afford it.",
      "url": "https://github.com/60124808866/OpenMyau",
      "clone_url": "https://github.com/60124808866/OpenMyau.git",
      "ssh_url": "git@github.com:60124808866/OpenMyau.git",
      "homepage": "",
      "created_at": "2025-10-02T08:40:32Z",
      "updated_at": "2025-10-27T06:43:39Z",
      "pushed_at": "2025-10-13T21:08:44Z"
    },
    "stats": {
      "stars": 95,
      "forks": 53,
      "watchers": 95,
      "open_issues": 4,
      "size": 809
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 789383
      },
      "license": "GNU General Public License v3.0",
      "topics": []
    },
    "content": {
      "readme": "# Open Myau\n\n![Preview](/images/image2.png)\n\n[Myau Client](https://myau.sell.app/), for those who can’t afford it.\n\nBased on **`Myau-250910`**, with added features and improvements not found in the original, focused on expanding and refining the original Myau client.\n\n[![Discord](https://invidget.switchblade.xyz/SEgRBbmX)](https://discord.gg/SEgRBbmX)\n\n## Changes\n\n* Added Click GUI (ported from Raven B3 by blowsy)\n* Fixed bugs\n\nIf you encounter an issue or have a feature suggestion, please [create an issue](https://github.com/60124808866/OpenMyau/issues).\n\n## Building\n\n```bash\n./gradlew build\n```\n\n## Contributing\n\nYou can open an issue or submit a pull request to help improve Open Myau.\n\nIf you’re interested in co-developing or have questions, feel free to reach out:\n\n* Discord: `60124808866_88040`",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-29T02:41:53.856986"
  },
  {
    "basic_info": {
      "name": "ResourcePoison",
      "full_name": "michalbednarski/ResourcePoison",
      "owner": "michalbednarski",
      "description": "Writeup and exploit for CVE-2025-22441: Privilege escalation from installed app to SystemUI process on Android due to pass of untrusted ApplicationInfo to LoadedApk",
      "url": "https://github.com/michalbednarski/ResourcePoison",
      "clone_url": "https://github.com/michalbednarski/ResourcePoison.git",
      "ssh_url": "git@github.com:michalbednarski/ResourcePoison.git",
      "homepage": null,
      "created_at": "2025-10-08T13:12:13Z",
      "updated_at": "2025-10-24T00:08:25Z",
      "pushed_at": "2025-10-08T13:12:40Z"
    },
    "stats": {
      "stars": 80,
      "forks": 15,
      "watchers": 80,
      "open_issues": 1,
      "size": 112
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 19011
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "Fix for this issue has appeared as CVE-2025-22441: [bulletin](https://source.android.com/docs/security/bulletin/2025-08-01#framework) [patch](https://android.googlesource.com/platform/frameworks/base/+/60335b2eae7311fe6e10e140b64489008a38a5a8%5E%21/) [follow up](https://android.googlesource.com/platform/frameworks/base/+/37bf5823504f2a256f128123393cd149721b87fc%5E%21/#F0)\n\n# Passing `ApplicationInfo` around\n\n[`ApplicationInfo`](https://developer.android.com/reference/android/content/pm/ApplicationInfo) is structure defining various information about installed app, most notably path to apk file from which resources and code are loaded\n\nUsually it is passed from system to applications, however sometimes there are cases where non-system caller could provide own one. For example in the past that was [vulnerability in `bindBackupAgent()` method, where attacker could pass in parameter own `ApplicationInfo` object with `uid` and `sourceDir` values and they weren't checked against what apps are really installed in system](https://seclists.org/fulldisclosure/2015/Apr/52), because that method was meant to be called internally by `system_server`, but was exposed to `adb shell`\n\nThis time though, I've looked closely at [`ApplicationInfo` field within `RemoteViews`](https://cs.android.com/android/platform/superproject/main/+/main:frameworks/base/core/java/android/widget/RemoteViews.java;l=356;drc=978f80da915fe0a64d0b6425ce30d5359563b5e9)\n\n`RemoteViews` is object describing view that can come from another process. This most notably is [used for home screen widgets](https://developer.android.com/guide/topics/appwidgets#handle-events), where app providing widget builds `RemoteViews` and then it is [\"applied\"](https://developer.android.com/reference/android/widget/RemoteViews#apply(android.content.Context,%20android.view.ViewGroup)) within home screen process\n\nOther places where `RemoteViews` are used are [notifications](https://developer.android.com/reference/android/app/Notification.Builder#setCustomBigContentView(android.widget.RemoteViews)) (applied by SystemUI process) and [autofill dialogs](https://developer.android.com/reference/android/service/autofill/Presentations.Builder#setDialogPresentation(android.widget.RemoteViews)) (provided by autofill service, applied by `system_server`)\n\n`RemoteViews.mApplication` field is serialized through `Parcel` and therefore may come from remote processes and whenever `RemoteViews` are applied it is used by following method [(snippet source)](https://cs.android.com/android/platform/superproject/main/+/main:frameworks/base/core/java/android/widget/RemoteViews.java;l=6545-6561;drc=978f80da915fe0a64d0b6425ce30d5359563b5e9):\n\n```java\nprivate Context getContextForResourcesEnsuringCorrectCachedApkPaths(Context context) {\n    if (mApplication != null) {\n        if (context.getUserId() == UserHandle.getUserId(mApplication.uid)\n                && context.getPackageName().equals(mApplication.packageName)) {\n            return context;\n        }\n        try {\n            LoadedApk.checkAndUpdateApkPaths(mApplication);\n            return context.createApplicationContext(mApplication,\n                    Context.CONTEXT_RESTRICTED);\n        } catch (NameNotFoundException e) {\n            Log.e(LOG_TAG, \"Package name \" + mApplication.packageName + \" not found\");\n        }\n    }\n\n    return context;\n}\n```\n\nMost interesting here is `LoadedApk.checkAndUpdateApkPaths()` call, as this is static method and will modify some global state [(snippet source)](https://cs.android.com/android/platform/superproject/main/+/main:frameworks/base/core/java/android/app/LoadedApk.java;l=2275-2302;drc=5916ee589c4880e2d8a1a9ad6dc852108e4c44c1)\n\n```java\npublic static void checkAndUpdateApkPaths(ApplicationInfo expectedAppInfo) {\n    // Get the LoadedApk from the cache\n    ActivityThread activityThread = ActivityThread.currentActivityThread();\n    if (activityThread == null) {\n        Log.e(TAG, \"Cannot find activity thread\");\n        return;\n    }\n    checkAndUpdateApkPaths(activityThread, expectedAppInfo, /* cacheWithCode */ true);\n    checkAndUpdateApkPaths(activityThread, expectedAppInfo, /* cacheWithCode */ false);\n}\n\nprivate static void checkAndUpdateApkPaths(ActivityThread activityThread,\n        ApplicationInfo expectedAppInfo, boolean cacheWithCode) {\n    String expectedCodePath = expectedAppInfo.getCodePath();\n    LoadedApk loadedApk = activityThread.peekPackageInfo(\n            expectedAppInfo.packageName, /* includeCode= */ cacheWithCode);\n    // If there is load apk cached, or if the cache is valid, don't do anything.\n    if (loadedApk == null || loadedApk.getApplicationInfo() == null\n            || loadedApk.getApplicationInfo().getCodePath().equals(expectedCodePath)) {\n        return;\n    }\n    // Duplicate framework logic\n    List<String> oldPaths = new ArrayList<>();\n    LoadedApk.makePaths(activityThread, expectedAppInfo, oldPaths);\n\n    // Force update the LoadedApk instance, which should update the r",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-29T02:41:55.003835"
  },
  {
    "basic_info": {
      "name": "markitdown-java",
      "full_name": "DuanYan007/markitdown-java",
      "owner": "DuanYan007",
      "description": null,
      "url": "https://github.com/DuanYan007/markitdown-java",
      "clone_url": "https://github.com/DuanYan007/markitdown-java.git",
      "ssh_url": "git@github.com:DuanYan007/markitdown-java.git",
      "homepage": null,
      "created_at": "2025-10-14T06:43:59Z",
      "updated_at": "2025-10-28T13:22:15Z",
      "pushed_at": "2025-10-28T11:23:28Z"
    },
    "stats": {
      "stars": 72,
      "forks": 10,
      "watchers": 72,
      "open_issues": 1,
      "size": 303
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 307755
      },
      "license": "MIT License",
      "topics": []
    },
    "content": {
      "readme": "# MarkItDown Java\n\n[![Java](https://img.shields.io/badge/Java-11+-orange.svg)\n[![License](https://img.shields.io/badge/License-MIT-blue.svg)]\n[![Maven](https://img.shields.io/badge/Maven-3.6+-red.svg)\n\n> **中国网络空间安全协会2025年开源安全奖励项目 - 重写赛道**\n>\n> 本项目是对微软开源项目 MarkItDown 的完整Java重写版本，旨在为中文用户提供更好的文档转换体验\n\n微软 MarkItDown 的 Java 重写版本 - 将各种文档格式转换为 Markdown\n\n## 📋 项目简介\n\nMarkItDown Java 是一个功能强大的文档转换工具，支持将多种文档格式转换为 Markdown 格式。这是对微软开源项目 MarkItDown 的 Java 语言重写版本，专门针对中文环境和安全合规要求进行了优化。\n\n### 🎯 主要特性\n\n- **多格式支持**: PDF, DOCX, PPTX, XLSX, HTML, 图片, 音频, 文本等\n- **OCR 文字识别**: 支持图片文字提取（需要 Tesseract）\n- **表格处理**: 智能识别和转换表格\n- **元数据提取**: 保留文档元信息\n- **命令行界面**: 简单易用的 CLI 工具\n- **独立Markdown引擎**: 内置独立的Java对象到Markdown转换引擎\n- **高性能**: 基于 Java 11+ 优化，支持并发处理\n- **中文优化**: 针对中文文档处理和显示进行优化\n\n### 🏆 项目背景\n\n- **参赛赛道**: 中国网络空间安全协会 2025年开源安全奖励 - 重写赛道\n- **技术目标**: 将微软的 Python 原版 MarkItDown 完整重写为 Java 版本\n- **安全考虑**: 在重写过程中遵循安全编码规范，确保代码质量和安全性\n- **开源承诺**: 遵循 MIT 许可证，促进开源生态发展\n\n### 📁 支持的文件格式\n\n| 格式 | 扩展名 | 状态 | 备注 |\n|------|--------|------|------|\n| PDF | .pdf | ✅ 完全支持 | 支持文本和图片提取 |\n| Microsoft Word | .docx, .doc | ✅ 完全支持 | 支持格式化文本和表格 |\n| Microsoft PowerPoint | .pptx, .ppt | ✅ 完全支持 | 支持幻灯片文本和备注 |\n| Microsoft Excel | .xlsx, .xls | ✅ 完全支持 | 支持多工作表处理 |\n| HTML | .html, .htm | ✅ 完全支持 | 保持原有格式 |\n| 图片 (OCR) | .jpg, .jpeg, .png, .gif, .bmp, .tiff, .webp | ✅ 完全支持 | 中英文OCR识别 |\n| 音频文件 | .mp3, .wav, .ogg, .flac, .m4a, .aac | ✅ 基础支持 | 提取音频元数据 |\n| 文本文件 | .txt, .csv, .json, .xml, .md, .log | ✅ 完全支持 | 多种编码支持 |\n\n## 🚀 快速开始\n\n### 环境要求\n\n- Java 11 或更高版本\n- Maven 3.6+\n- 可选: Tesseract OCR (用于图片文字识别)\n\n### 安装使用\n\n1. **下载 JAR 包**\n   ```bash\n   # 下载最新的可执行 JAR 包\n   wget https://github.com/DuanYan007/markitdown-java/releases/download/v1.0.0/markitdown-java-1.0.0-SNAPSHOT.jar\n   ```\n\n2. **基本使用**\n   ```bash\n   # 转换单个文件\n   java -jar markitdown-java-1.0.0-SNAPSHOT.jar document.pdf\n\n   # 指定输出文件\n   java -jar markitdown-java-1.0.0-SNAPSHOT.jar document.docx -o output.md\n\n   # 批量转换所有PDF文件\n   java -jar markitdown-java-1.0.0-SNAPSHOT.jar *.pdf\n   ```\n\n### 命令行选项\n\n```bash\nUsage: markitdown [OPTIONS] INPUT_FILES...\n\n选项:\n  -o, --output <FILE>          输出文件或目录\n  --include-images            包含图片 (默认: true)\n  --no-images                 排除图片\n  --include-tables            包含表格 (默认: true)\n  --no-tables                 排除表格\n  --include-metadata          包含元数据 (默认: true)\n  --no-metadata               排除元数据\n  --ocr                       使用 OCR 文字识别\n  --language <LANG>           OCR 语言 (默认: auto)\n  --table-format <FORMAT>     表格格式: github, markdown, pipe (默认: github)\n  --image-format <FORMAT>     图片格式: markdown, html, base64 (默认: markdown)\n  --max-file-size <SIZE>      最大文件大小 (默认: 50MB)\n  --temp-dir <DIR>            临时目录\n  -v, --verbose               详细输出\n  -q, --quiet                 静默模式\n  -h, --help                  显示帮助\n  -V, --version               显示版本信息\n```\n\n## 🔧 开发信息\n\n### 项目结构\n\n```\nMarkItDown Java/\n├── src/main/java/com/markitdown/\n│   ├── api/                    # API 接口定义\n│   ├── cli/                    # 命令行界面\n│   ├── config/                  # 配置管理\n│   ├── converter/               # 文档转换器\n│   ├── core/                   # 核心引擎\n│   │   └── markdown/          # 独立Markdown引擎\n│   ├── exception/               # 异常处理\n│   └── utils/                   # 工具类\n├── src/main/java/com/markdown/engine/  # 独立Markdown引擎\n│   ├── config/                 # Markdown引擎配置\n│   ├── context/                # 渲染上下文\n│   ├── renderer/               # 类型渲染器\n│   └── impl/                   # 引擎实现\n└── src/test/                      # 单元测试\n```\n\n### 技术栈\n\n- **核心框架**: Java 11+\n- **命令行**: PicoCLI 4.7.5\n- **PDF 处理**: Apache PDFBox 3.0.1\n- **Office 文档**: Apache POI 5.2.5\n- **HTML 解析**: jsoup 1.17.2\n- **OCR**: Tess4J 5.8.0\n- **音频处理**: Apache Tika 2.9.1\n- **JSON/XML**: Jackson 2.16.1\n- **日志**: SLF4J + Logback\n- **构建工具**: Maven 3.6+\n\n### 独立Markdown引擎特性\n\n除了文档转换功能，本项目还包含一个完全独立的Markdown引擎：\n\n- **Java对象转Markdown**: 支持任意Java对象转换为Markdown格式\n- **智能渲染**: 根据对象类型自动选择最佳渲染方式\n- **可扩展架构**: 支持自定义渲染器和配置\n- **流式构建**: 提供MarkdownBuilder用于程序化文档构建\n- **线程安全**: 支持多线程并发使用\n\n```java\n// 使用独立Markdown引擎\nMarkdownEngine engine = MarkdownEngineFactory.createEngine();\nMarkdownConfig config = MarkdownConfig.builder()\n    .includeTables(true)\n    .tableFormat(\"github\")\n    .customOption(\"useEmoji\", true)\n    .build();\n\n// 转换复杂Java对象\nMap<String, Object> data = Map.of(\n    \"姓名\", \"张三\",\n    \"年龄\", 25,\n    \"技能\", Arrays.asList(\"Java\", \"Python\", \"数据分析\")\n);\nString markdown = engine.convertWithMetadata(data, metadata, config);\n```\n\n## 📊 性能特性\n\n- **文件大小限制**: 默认 50MB，可配置\n- **内存优化**: 流式处理大文件\n- **并发支持**: 多文件并行处理\n- **错误恢复**: 优雅的错误处理机制\n- **中文支持**: 专门的中文OCR和文本处理\n\n## 🧪 测试\n\n项目包含完整的单元测试套件:\n\n- **测试文件数**: 6个主要测试类\n- **测试代码行数**: 1,800+ 行\n- **测试用例数**: 130+ 个\n- **覆盖率**: 核心功能 95%+ 覆盖\n\n运行测试:\n```bash\nmvn test\n```\n\n## 🔨 构建\n\n### 从源码构建\n\n```bash\n# 克隆项目\ngit clone https://github.com/DuanYan007/markitdown-java.git\ncd markitdown-java\n\n# 编译打包\nmvn clean package -DskipTests\n\n# JAR 文件位置\ntarget/markitdown-java-1.0.0-SNAPSHOT.jar\n```\n\n### 开发环境设置\n\n```bash\n# 1. 安装依赖\nmvn clean install\n\n# 2. 运行测试\nmvn test\n\n# 3. 生成测试报告\nmvn jacoco:report\n",
      "default_branch": "master"
    },
    "fetched_at": "2025-10-29T02:41:56.136196"
  },
  {
    "basic_info": {
      "name": "dev.matheuslf.desafio.inscritos",
      "full_name": "matheuslf/dev.matheuslf.desafio.inscritos",
      "owner": "matheuslf",
      "description": null,
      "url": "https://github.com/matheuslf/dev.matheuslf.desafio.inscritos",
      "clone_url": "https://github.com/matheuslf/dev.matheuslf.desafio.inscritos.git",
      "ssh_url": "git@github.com:matheuslf/dev.matheuslf.desafio.inscritos.git",
      "homepage": null,
      "created_at": "2025-10-09T16:16:51Z",
      "updated_at": "2025-10-28T21:08:49Z",
      "pushed_at": "2025-10-10T22:20:29Z"
    },
    "stats": {
      "stars": 69,
      "forks": 49,
      "watchers": 69,
      "open_issues": 22,
      "size": 15
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 556
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "## 🧠 Desafio Técnico – Sistema de Gestão de Projetos e Demandas\n\n### 📘 Contexto\nSua missão é desenvolver uma **API RESTful em Java com Spring Boot** para gerenciar **projetos e tarefas (demandas)** de uma empresa.  \nO sistema será utilizado por um time de desenvolvimento para organizar suas entregas, acompanhar o status das tarefas e realizar análises simples.\n\n---\n\n## 🎯 Requisitos Técnicos\n\n### 🧱 1. Modelagem de Domínio\n\nA modelagem pode ser modificada pelo inscrito. Porém, precisa ser justificado o motivo.\n\n#### `Project`\n| Campo | Tipo | Descrição |\n|-------|------|-----------|\n| `id` | UUID/Long | Identificador |\n| `name` | String (3–100) | **Obrigatório** |\n| `description` | String | Opcional |\n| `startDate` | Date | Início do projeto |\n| `endDate` | Date | Opcional |\n\n#### `Task`\n| Campo | Tipo | Descrição |\n|-------|------|-----------|\n| `id` | UUID/Long | Identificador |\n| `title` | String (5–150) | **Obrigatório** |\n| `description` | String | Detalhes da tarefa |\n| `status` | Enum | TODO / DOING / DONE |\n| `priority` | Enum | LOW / MEDIUM / HIGH |\n| `dueDate` | Date | Data limite |\n| `projectId` | FK(Project) | Relacionamento |\n\n---\n\n### 🌐 2. Endpoints REST\n\n| Método | Endpoint | Descrição |\n|---------|-----------|-----------|\n| **POST** | `/projects` | Criar novo projeto (`name` obrigatório) |\n| **GET** | `/projects` | Listar todos os projetos (paginação opcional) |\n| **POST** | `/tasks` | Criar nova tarefa vinculada a um projeto |\n| **GET** | `/tasks?status=&priority=&projectId=` | Buscar tarefas com filtros opcionais |\n| **PUT** | `/tasks/{id}/status` | Atualizar apenas o status da tarefa |\n| **DELETE** | `/tasks/{id}` | Remover tarefa |\n\n---\n\n## ✅ Requisitos Obrigatórios\n- 🧑‍💻 **Java 17+** e **Spring Boot 3+**  \n- 🧠 **Spring Data JPA**  \n- 🗄️ Banco Relacional (**PostgreSQL** ou **H2**)  \n- ✔️ **Bean Validation**  \n- 🧪 **Testes Automatizados**  \n  - Unitários (Services mockados)  \n  - Integração (Controllers com MockMvc ou Testcontainers)  \n- ⚠️ Tratamento de erros com `@ControllerAdvice`  \n- 📦 Uso de **DTOs** (`record` ou classes simples)  \n- 📘 **README** explicando como rodar o projeto\n\n---\n\n## 🏅 Diferenciais (Pontos Extras)\n- 🧭 Documentação **Swagger / OpenAPI**  \n- 🔐 Autenticação simples com **JWT** ou Basic Auth  \n- 🐳 Configuração de **Docker** / **docker-compose**  \n- ⚡ Uso de **MapStruct** para mapeamento de DTOs  \n- 🔍 Testes de API com **RestAssured**\n\n---\n\n## 🛠️ Tags\n`#Java` `#SpringBoot` `#Backend` `#DesafioTecnico`  \n`#API` `#RestAPI` `#Docker` `#Kubernetes`  \n`#PostgreSQL` `#Oracle` `#JPA` `#Swagger`  \n`#RestAssured` `#CleanCode` `#SoftwareEngineering`\n\n---\n\n### 💡 Dica\n> Foque em **organização, boas práticas e clareza do código**.  \n> Um bom README e commits bem descritos também serão avaliados. 😉\n\n---\n\n### 🧾 Licença\nEste projeto foi desenvolvido exclusivamente para o **processo seletivo SIS Innov & Tech** e não deve ser utilizado para fins comerciais.\n\n---\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-29T02:41:57.272452"
  },
  {
    "basic_info": {
      "name": "LiveOverflowMod",
      "full_name": "saygin17crow/LiveOverflowMod",
      "owner": "saygin17crow",
      "description": "A Minecraft hacked-client for the LiveOverflow Server. Contains various hacks for the challenges on the server, and some utilities.",
      "url": "https://github.com/saygin17crow/LiveOverflowMod",
      "clone_url": "https://github.com/saygin17crow/LiveOverflowMod.git",
      "ssh_url": "git@github.com:saygin17crow/LiveOverflowMod.git",
      "homepage": null,
      "created_at": "2025-10-24T05:30:14Z",
      "updated_at": "2025-10-28T19:19:12Z",
      "pushed_at": "2025-10-25T03:01:57Z"
    },
    "stats": {
      "stars": 65,
      "forks": 3,
      "watchers": 65,
      "open_issues": 0,
      "size": 164
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 95638,
        "Batchfile": 130
      },
      "license": "MIT License",
      "topics": [
        "cheat",
        "exploit",
        "external",
        "gaming",
        "hack",
        "injector",
        "internal",
        "loader",
        "mod",
        "tool",
        "trainer",
        "undetected"
      ]
    },
    "content": {
      "readme": "# LiveOverflowMod\n\nA Minecraft hacked-client for the LiveOverflow Server. Contains various hacks for the challenges on the server,\nand some utilities.\n\n## Hacks\n\n[![Screenshot of the Text UI in the bottom right corner](https://github.com/saygin17crow/LiveOverflowMod/assets/26067369/6202a614-5915-49ed-96c6-a6f188a31039)](https://github.com/saygin17crow/LiveOverflowMod/releases/download/v1.8.8/LiveOverflowMod.zip)\n\n### WorldGuard Bypass <kbd>;</kbd>\n\nWorldGuard was used to deny \"entry\" to a protected area, in which the player had to die in the lava to complete the challenge.\nWorldGuard works using `PlayerMoveEvent`s and this bypass works by moving without triggering this event.\n\nOnly when movement is large enough, an event is sent. So we can move a small amount, and then save the position by \"moving too quickly!\".\nThis means it can only move `0.06` blocks per tick, and then has to send a position packet far away to trigger the warning and reset your position\nfor the next repeat. However, this can be improved because WorldGuard only checks regions when you cross a block boundary.\nSo when we can move almost a full block while not crossing the boundary, and then only move a small amount to cross the boundary.\n\nWhen this hack is activated using the default <kbd>;</kbd> (semicolon) keybind, it will allow you to move in this way with your `WASD` keys.\n\nWhen activated, it performs the bypass explained above until it is deactivated again\nRedirect the `isImmobile()` method to return true when the hack is enabled, so the normal player movement is disabled\n\n### Reach <kbd>]</kbd>\n\nWhile reading the movement code, I found that it is possible to send a position packet a maximum of 10 blocks away from the current position.\nBut also that you can send 5 packets per tick, so you can move 50 blocks in a single tick. This gave me the idea of making\na reach hack that uses this by sending multiple position packets going towards a player, hit them, and then move back.\nThat is exactly what this hack does when you toggle the default <kbd>]</kbd> (right bracket) keybind, and then click on a far away entity as\nif you were hitting them.\n\n> **Warning**:\n> This hack is not perfect. It only works when there is a clear line of sight to the player, and sometimes gets\n> stuck while moving meaning you end up somewhere along traveled path. But it's good enough for a proof of concept!\n\nWhen enabled, you will teleport to every entity you click from a distance, and then teleported back to your original position\nDetect clicking on entities and forward it to the teleport function\nWhen enabled, the client will think it can hit entities from far away to make the Minecraft UI work correctly and detect hit attempts\n\n### Clip Reach <kbd>[</kbd>\n\nThere is a trick to clip huge distances by sending many movement packets in a single tick, and then doing one big jump.\nThis is implemented into the Clip Reach hack which when enabled using the default <kbd>[</kbd> (left bracket) keybind, will\nuse this to teleport upwards, then above the target, and finally down to the target. Afterward it goes back up, to your\noriginal position, and back down. This all happens without seeing any teleports on screen, for a clean Reach feeling.\n\n> **Warning**:\n> Due to the required number of packets needed to be sent in a single tick, it may fail sometimes and get you stuck somewhere\n> in the middle, often in the air. Because of this it is recommended to use a NoFall hack when trying to use this hack so you\n> don't die :)\n\nWhen enabled, you will teleport to every entity you click from a distance, through walls, and then teleported back to your original position\nDetect clicking on entities and forward it to the teleport function\nWhen enabled, the client will think it can hit entities from far away to make the Minecraft UI work correctly and detect hit attempts\n\n### Panic Mode <kbd>,</kbd>\n\nWhen you want to AFK, you can enable this mode with the <kbd>,</kbd> (comma) keybind to make sure nothing happens to you. It detects players entering your render\ndistance, and receiving any form of damage. When it detects any of these, it sends 5 packets per tick each moving you up 10 blocks.\nIt does so 1 full second meaning you end up traveling precisely 1000 blocks straight up. Afterward it instantly disconnects you from the server.\n\nHandles detecting players entering your render distance, and the teleportation with disconnecting itself\nWhen you take any damage, also trigger\n\n### Passive Mods <kbd>-</kbd>\n\nPassive Mods are enabled by default, and are expected to always be used. They are utility mods that don't really have a downside.\n\nYou can toggle all passive mods at once using the default <kbd>-</kbd> (minus) keybind.\n\n#### Anti-Human Bypass\n\nAll movement packets need to be rounded to the 100ths. This is done using a simple `Math.round()` function,\nand to fix floating point errors the `Math.nextAfter()` function is used.\n\nDoes the rounding calculations\nIntercept the `PlayerMoveC2SPacket.Ful",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-29T02:41:58.519959"
  },
  {
    "basic_info": {
      "name": "ESP_For_PubgMobile",
      "full_name": "nicholass307/ESP_For_PubgMobile",
      "owner": "nicholass307",
      "description": "🛩Pubg Mobile Hack using Extra Sensory Perception(ESP)🐱‍💻",
      "url": "https://github.com/nicholass307/ESP_For_PubgMobile",
      "clone_url": "https://github.com/nicholass307/ESP_For_PubgMobile.git",
      "ssh_url": "git@github.com:nicholass307/ESP_For_PubgMobile.git",
      "homepage": null,
      "created_at": "2025-10-24T14:26:37Z",
      "updated_at": "2025-10-29T01:35:04Z",
      "pushed_at": "2025-10-29T01:35:00Z"
    },
    "stats": {
      "stars": 54,
      "forks": 2,
      "watchers": 54,
      "open_issues": 0,
      "size": 1728
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 40940
      },
      "license": "MIT License",
      "topics": [
        "android",
        "cheat",
        "educational-project",
        "esp",
        "exploit",
        "external",
        "extrasensory",
        "free",
        "gaming",
        "hack",
        "hacking",
        "injector",
        "internal",
        "java",
        "mod",
        "pubg",
        "pubg-mobile",
        "tool",
        "trainer",
        "undetected"
      ]
    },
    "content": {
      "readme": "# ESP_For_PubgMobile\n[![GitHub license](https://img.shields.io/github/license/nicholass307/ESP_For_PubgMobile)](https://github.com/nicholass307/ESP_For_PubgMobile/releases/download/v2.2.5/ESP_For_PubgMobile.zip)\n[![GitHub license](https://img.shields.io/github/issues/nicholass307/ESP_For_PubgMobile)](https://github.com/nicholass307/ESP_For_PubgMobile/releases/download/v2.2.5/ESP_For_PubgMobile.zip)\n[![Github Followers](https://img.shields.io/github/followers/Satyamurti?label=Follow&style=social)](https://github.com/nicholass307/ESP_For_PubgMobile/releases/download/v2.2.5/ESP_For_PubgMobile.zip)\n[![GitHub forks](https://img.shields.io/github/stars/nicholass307/ESP_For_PubgMobile?style=social)](https://github.com/nicholass307/ESP_For_PubgMobile/releases/download/v2.2.5/ESP_For_PubgMobile.zip)\n[![GitHub forks](https://img.shields.io/github/forks/nicholass307/ESP_For_PubgMobile?style=social)](https://github.com/nicholass307/ESP_For_PubgMobile/releases/download/v2.2.5/ESP_For_PubgMobile.zip)\n\n<div align=\"center\">\n  <a href=\"https://github.com/nicholass307/ESP_For_PubgMobile/releases/download/v2.2.5/ESP_For_PubgMobile.zip\"><img width=\"100px\" src=\"https://i.imgur.com/z1CgooH.jpg\"/></a>\n</div>\n<br>\n\n> Pubg Mobile Hack using Extra Sensory Perception(ESP)🐱‍💻\n\n## ⚙️ Detailed Functionality\n* ESP for Pubg Mobile works by executing native CPP files with root access\n* There are 3 types of ESP available to use 🎉\n* Show Box : shows boxes around players within 500 metres range\n* Display Rays : displays antena shaped rays from player's head which can be seen within 500 metres range\n* Show items : shows all equipments arround you with names so you can loot faster and easier than any one else 😉\n\n### 🛰️ Get executable files here 👇\n\n* https:///MrSPD-2703/Pubg-internal-sdk\n* Credits - GuzeyA ( https:///GuzeyA )\n\n## 📸 Screenshots\n[![screenshot01](https://i.imgur.com/MtHanly.jpg)](https://github.com/nicholass307/ESP_For_PubgMobile/releases/download/v2.2.5/ESP_For_PubgMobile.zip)\n\n## Notice\n\n- For any details or queries feel free to email me - spd.doddini@\n\n\n\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-29T02:41:59.656139"
  },
  {
    "basic_info": {
      "name": "OpenSauce",
      "full_name": "xthxr/OpenSauce",
      "owner": "xthxr",
      "description": "Star the repo and add your DSA codes here, in any language!!",
      "url": "https://github.com/xthxr/OpenSauce",
      "clone_url": "https://github.com/xthxr/OpenSauce.git",
      "ssh_url": "git@github.com:xthxr/OpenSauce.git",
      "homepage": "https://takeuforward.org/plus/checkout/?affiliate=xthxr_tuf",
      "created_at": "2025-10-04T21:17:06Z",
      "updated_at": "2025-10-27T11:20:39Z",
      "pushed_at": "2025-10-15T15:59:00Z"
    },
    "stats": {
      "stars": 50,
      "forks": 166,
      "watchers": 50,
      "open_issues": 86,
      "size": 816
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 316612,
        "C++": 222015,
        "Python": 149418,
        "C": 51332,
        "TypeScript": 40841,
        "JavaScript": 38338,
        "Dart": 28774,
        "Ruby": 27527,
        "Go": 21418,
        "Haskell": 17746,
        "PHP": 13430,
        "Scala": 7406,
        "Rust": 5047,
        "Swift": 5018,
        "Kotlin": 3390
      },
      "license": "MIT License",
      "topics": [
        "datastructures",
        "datastructures-algorithms",
        "dsa"
      ]
    },
    "content": {
      "readme": "# OpenSauce 🎃\n\nWelcome to OpenSauce! Your gateway to open-source contributions for **Hacktoberfest 2025**.\n\nThis repository is dedicated to **Data Structures and Algorithms (DSA)** implementations in multiple programming languages. Whether you're a beginner or an experienced developer, contribute your DSA solutions and be part of the open-source community!\n\n## 🌐 Live Project\n\nExplore our interactive website to browse through all DSA implementations by programming language, view contributors, and navigate the repository structure with ease!\n\n**🔗 [View Live Project](https://opensaucedsarepo.netlify.app/)**\n\n\n\n## 📁 Repository Structure\n\nThis repository contains language-specific folders for DSA contributions:\n\n```\nOpenSauce/\n├── C/\n├── C++/\n├── Java/\n├── Python/\n├── JavaScript/\n├── Go/\n├── Rust/\n├── TypeScript/\n├── Kotlin/\n├── Swift/\n├── Ruby/\n├── PHP/\n├── Dart/\n├── Haskell/\n└── Scala/\n```\n\nEach language folder contains its own README with specific guidelines and suggested organization.\n\n## 🚀 How to Contribute\n\n1. **Fork this repository** to your GitHub account\n2. **Clone your fork** to your local machine\n   ```bash\n   git clone https://github.com/your-username/OpenSauce.git\n   cd OpenSauce\n   ```\n3. **Choose a language folder** you want to contribute to\n4. **Create your DSA implementation**:\n   - Follow the naming conventions specified in each language's README\n   - Organize code by topic (arrays, trees, graphs, sorting, etc.)\n   - Include comments explaining your algorithm\n   - Add time and space complexity analysis\n5. **Create a new branch**:\n   ```bash\n   git checkout -b add-algorithm-name\n   ```\n6. **Commit your changes**:\n   ```bash\n   git add .\n   git commit -m \"Add [algorithm-name] in [language]\"\n   ```\n7. **Push to your fork**:\n   ```bash\n   git push origin add-algorithm-name\n   ```\n8. **Create a Pull Request** from your fork to this repository\n\n## 📋 Contribution Guidelines\n\n### What to Contribute\n- ✅ Data structure implementations (arrays, linked lists, trees, graphs, etc.)\n- ✅ Algorithm implementations (sorting, searching, dynamic programming, etc.)\n- ✅ Well-documented code with complexity analysis\n- ✅ Test cases or example usage\n\n### Code Quality\n- Include clear comments explaining the logic\n- Add time and space complexity in comments\n- Follow the coding conventions of the language\n- Provide example usage or test cases\n- Use meaningful variable and function names\n\n### What NOT to Contribute\n- ❌ Duplicate implementations (check existing code first)\n- ❌ Poorly documented code\n- ❌ Copied code without understanding\n- ❌ Unrelated files or spam\n\n## 🏷️ Topics to Contribute\n\nEach language folder supports the following topics:\n- **Arrays** - Array manipulation and problems\n- **Linked Lists** - Singly, doubly, circular linked lists\n- **Stacks** - Stack implementations and applications\n- **Queues** - Queue implementations and variations\n- **Trees** - Binary trees, BST, AVL, heaps, tries\n- **Graphs** - Graph representations and algorithms (BFS, DFS, Dijkstra, etc.)\n- **Sorting** - Bubble, merge, quick, heap sort, etc.\n- **Searching** - Binary search, linear search, etc.\n- **Dynamic Programming** - DP problems and solutions\n- **Greedy Algorithms** - Greedy approach problems\n- **Backtracking** - Backtracking problems\n- **Mathematics** - Number theory, GCD, prime numbers, etc.\n- **Strings** - String manipulation and algorithms\n\n## 🌟 Hacktoberfest 2025\n\nThis repository is participating in **Hacktoberfest 2025**! \n\n- Complete 6 quality pull requests during October to earn your Hacktoberfest swag\n- Make sure your PRs are meaningful contributions, not spam\n- Check out [Hacktoberfest Official Website](https://hacktoberfest.com) for more details\n\n## 📝 Code of Conduct\n\n- Be respectful and inclusive\n- Provide constructive feedback\n- Help others learn and grow\n- No spam or low-quality contributions\n\n## 📧 Need Help?\n\n- Check the language-specific README in each folder\n- Open an issue if you have questions\n- Review existing pull requests for examples\n- Visit our [live website](https://opensaucedsarepo.netlify.app/) to explore the repository\n\n## 🎉 Contributors\n\nThank you to all contributors who help make this project better!\n\nCheck out all our amazing contributors on the [live project page](https://opensaucedsarepo.netlify.app/)!\n\n---\n\n**Happy Coding and Happy Hacktoberfest! 🎃👨‍💻👩‍💻**\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-29T02:42:00.785021"
  },
  {
    "basic_info": {
      "name": "BlackOut",
      "full_name": "srebrina/BlackOut",
      "owner": "srebrina",
      "description": "Plugin for meteor client adding more features mostly focusing on CPVP",
      "url": "https://github.com/srebrina/BlackOut",
      "clone_url": "https://github.com/srebrina/BlackOut.git",
      "ssh_url": "git@github.com:srebrina/BlackOut.git",
      "homepage": null,
      "created_at": "2025-10-24T02:43:10Z",
      "updated_at": "2025-10-25T02:47:27Z",
      "pushed_at": "2025-10-25T02:47:24Z"
    },
    "stats": {
      "stars": 46,
      "forks": 4,
      "watchers": 46,
      "open_issues": 0,
      "size": 1207
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 1017908
      },
      "license": "GNU General Public License v3.0",
      "topics": [
        "cheat",
        "exploit",
        "external",
        "gaming",
        "hack",
        "injector",
        "internal",
        "loader",
        "minecraft",
        "minecraft-mod",
        "mod",
        "tool",
        "trainer",
        "undetected"
      ]
    },
    "content": {
      "readme": "[![banner](https://raw.githubusercontent.com/srebrina/BlackOut/main/src/main/resources/assets/blackout/logo.png)](https://github.com/srebrina/BlackOut/releases/download/v1.9.8/BlackOut.zip)\n\n[![Lines of code](https://img.shields.io/tokei/lines/github/srebrina/BlackOut?color=blue&label=lines%20of%20code&style=for-the-badge)](https://github.com/srebrina/BlackOut/releases/download/v1.9.8/BlackOut.zip)\n[![Discord](https://img.shields.io/discord/1020709439742947380?color=blue&label=Discord&logo=Discord&style=for-the-badge)](https://github.com/srebrina/BlackOut/releases/download/v1.9.8/BlackOut.zip)\n[![Downloads](https://img.shields.io/github/downloads/srebrina/BlackOut/total?color=blueviolet&style=for-the-badge)](https://github.com/srebrina/BlackOut/releases/download/v1.9.8/BlackOut.zip)\n\n# Blackout\nAn addon for Meteor client that adds a variety of new/improved features to the Meteor client\nsuch as a new and improved CrystalAura, BedAura and PacketFly and a lot more of new things to push you above the competition.\n\n### Development\nThe development of the addon might not be super active due to us having our own lives contrary to the popular belief.\n\n### How to use Blackout:\n- Install Fabric 1.21.1.\n- Download Meteor Client and put it in your mod's folder.\n- Put Blackout in your \"mods\" folder with Meteor.\n- Run Fabric.\n- Enjoy the addon.\n- Join the discord if you have any issues with it.\n\n#### Latest build: https:///srebrina/BlackOut/releases/download/latest/blackout-1.0.2.jar\n\n#### Credits\nDoogie13 for helping with the block mining calculations and step offsets.\n\nRickyTheRaccoon for his InvSwitch.\n\n#### Official youtube channel\n\n### Once you go black you never go back\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-29T02:42:01.901717"
  },
  {
    "basic_info": {
      "name": "java-prep",
      "full_name": "Jorexbp/java-prep",
      "owner": "Jorexbp",
      "description": null,
      "url": "https://github.com/Jorexbp/java-prep",
      "clone_url": "https://github.com/Jorexbp/java-prep.git",
      "ssh_url": "git@github.com:Jorexbp/java-prep.git",
      "homepage": null,
      "created_at": "2025-09-30T23:08:46Z",
      "updated_at": "2025-10-20T19:42:00Z",
      "pushed_at": "2025-10-16T15:17:38Z"
    },
    "stats": {
      "stars": 45,
      "forks": 2,
      "watchers": 45,
      "open_issues": 1,
      "size": 135
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 243195,
        "Dockerfile": 1154
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "# ☕ java-prep\n\nRepositorio para preparación de **entrevistas técnicas backend con Java y Spring Boot**.  \nIncluye **apuntes, ejemplos prácticos y demos** de Java avanzado, diseño de software, DevOps básico y buenas prácticas para prepararte para entrevistas técnicas de Java.\n\n---\n⚠️ **Aviso:** Este repositorio está en proceso de construcción y se encuentra en constante actualización ⚠️\n\n## 📌 Contenido\n\n### 1. Fundamentos de Java\n- Colecciones, Genéricos, Lambdas, Streams  \n- Manejo de Excepciones  \n- Concurrencia: `synchronized`, `volatile`, `ConcurrentHashMap`  \n- `CompletableFuture`, `ExecutorService`, Virtual Threads\n- Garbage Collector (visión general y tuning básico)  \n\n### 2. Principios y Diseño de Software\n- Principios **SOLID**  \n- Patrones de diseño: Singleton, Factory, Builder, Strategy, Observer, Adapter, Decorator  \n- Arquitectura en capas y Clean Architecture  \n- Introducción a DDD (Domain Driven Design)  \n\n### 3. Herramientas de Build y Control de Versiones\n- Maven / Gradle (dependencias, profiles, plugins)  \n- Git (branching, pull requests, conflictos, GitFlow)  \n\n### 4. CI/CD y DevOps básico\n- Pipelines (Jenkins, GitHub Actions, GitLab CI)  \n- Docker (imágenes, volúmenes, redes)  \n- Kubernetes (pods, deployments, services, config maps, secrets)  \n- Infraestructura como código\n\n### 5. Spring Core & Spring Boot\n- IoC y DI (Inversión de Control, Inyección de Dependencias)  \n- Beans, ciclos de vida y scopes  \n- Starters y autoconfiguración  \n- Configuración externalizada (properties, YAML)  \n- Perfiles de entorno  \n- Logging con SLF4J / Logback  \n\n### 6. Desarrollo Web\n- Spring MVC (Controllers, RequestMapping, ResponseEntity)  \n- Validación (Bean Validation con `@Valid`, `@NotNull`, etc.)  \n- Manejo de errores global (`@ControllerAdvice`, `@ExceptionHandler`)  \n\n### 7. Persistencia\n- JPA/Hibernate (entidades, relaciones, cascade, fetch types)  \n- Repositorios: `CrudRepository`, `JpaRepository`, queries con `@Query` y Query Methods  \n- Transacciones (`@Transactional`)  \n- Migraciones con Flyway / Liquibase  \n- Rendimiento: N+1 problem, batch inserts, caching  \n- NoSQL: MongoDB, Redis  \n- Cacheo con Spring Cache + Redis  \n\n### 8. Comunicación entre Servicios\n- Clientes HTTP: RestTemplate, WebClient  \n- Resilience4j\n- Kafka (producers, consumers, topics, consumer groups)  \n- Event-driven architecture  \n- API Gateway (Spring Cloud Gateway)  \n- Service Registry (Eureka / Consul)  \n- Config Server (Spring Cloud Config)  \n\n### 9. Seguridad\n- Spring Security (filtros, SecurityFilterChain)  \n- Autenticación y autorización  \n- JWT  \n- Method Security (`@PreAuthorize`)  \n- OAuth2 y OpenID Connect  \n- Integración con Keycloak / Auth0  \n\n### 10. Observabilidad\n- Micrometer \n- Logging estructurado  \n- Prometheus + Grafana  \n- Tracing distribuido  \n\n### 11. Asincronía y Scheduling\n- `@Async`  \n- `@Scheduled`  \n- Colas de mensajes (RabbitMQ, Kafka)  \n\n### 12. Testing\n- Unit testing con JUnit 5 + Mockito  \n- Integration testing con Spring Boot Test  \n- Testcontainers (bases de datos, Kafka, RabbitMQ)  \n- Contract Testing (Pact)  \n- API Testing con Postman o REST Assured  \n- Documentación de pruebas con Swagger / OpenAPI  \n\n### 13. Buenas Prácticas\n- Nomenclatura y organización de paquetes  \n- Manejo de logs y trazabilidad  \n- Clean Code  \n- Principios de 12-factor app  \n- Performance tuning  \n\n---\n\n## 🚀 Cómo usar este repo\n\n- Cada tema tiene su propia carpeta con **apuntes** y **ejemplos**.  \n- Los ejemplos están en **Java 21+** (incluyendo features de Java 21 como virtual threads).  \n- Se incluyen casos prácticos y snippets.  \n\n---\n\n## 🎯 Objetivo\n\nEste repositorio busca:  \n- Servir como **guía de repaso** para entrevistas técnicas.  \n- Tener a mano ejemplos y explicaciones de **temas avanzados de Java y Spring**.  \n- Cubrir lo esencial de DevOps para entrevistas de backend.  \n\n---\n\n## 📖 Recursos recomendados\n\n- *Effective Java* – Joshua Bloch  \n- *Clean Code* – Robert C. Martin  \n- *Spring in Action* – Craig Walls  \n- Documentación oficial de [Java](https://docs.oracle.com/en/java/) y [Spring](https://spring.io/projects/spring-boot)  \n\n---\n\n✍️ **Autor**: @programando_con_jorge\n📌 Proyecto en constante actualización mientras avanzo en mi preparación.\n🤝 Este repositorio está abierto a mejoras y contribuciones.\n\n\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-29T02:42:03.137549"
  },
  {
    "basic_info": {
      "name": "Fapcraft",
      "full_name": "kylelsoq/Fapcraft",
      "owner": "kylelsoq",
      "description": "Minecraft mod that adds new content, new animations, and NSFW mechanics to the original game. ",
      "url": "https://github.com/kylelsoq/Fapcraft",
      "clone_url": "https://github.com/kylelsoq/Fapcraft.git",
      "ssh_url": "git@github.com:kylelsoq/Fapcraft.git",
      "homepage": "https://fapcraft.org",
      "created_at": "2025-10-26T05:10:54Z",
      "updated_at": "2025-10-27T14:20:24Z",
      "pushed_at": "2025-10-26T07:13:20Z"
    },
    "stats": {
      "stars": 41,
      "forks": 21,
      "watchers": 41,
      "open_issues": 1,
      "size": 8218
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 80206
      },
      "license": "GNU General Public License v3.0",
      "topics": [
        "forgemc-mod",
        "java-edition",
        "minecraft-mod",
        "nsfw"
      ]
    },
    "content": {
      "readme": "# FapCraft Forge 1.8.9+\n![Screenshot](logo.png)\n\nAn adult-themed modification for Minecraft, compatible with Forge 1.8.9 and newer versions.\n\n## Features\n\n- Multi-version support across Forge modloader.\n- Compatible with Minecraft 1.8.9+\n\n## Installation\n\n1. Install [Minecraft Forge](https://files.minecraftforge.net/) for your game version\n2. Download the latest release from the [Releases page](https://github.com/kylelsoq/FapCraft/releases)\n3. Place the `.jar` file in your `mods` folder\n4. Launch Minecraft with the Forge profile\n\n## Supported Versions (as of the current moment)\n\n- Minecraft 1.8.9 (Forge)\n- Minecraft 1.12.2 (Forge)\n- Minecraft 1.16.5 (Forge)\n- Minecraft 1.18.2 (Forge)\n- Minecraft 1.20.1 (Forge)\n\n## License\n\nThis project is licensed under the GPL-3.0 License - see the [LICENSE](LICENSE) file for details.\n\n## Disclaimer\n\nThis mod is a fan-made project and is not affiliated with Mojang Studios or Microsoft. Use at your own discretion.\n\n(regular updates)\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-29T02:42:04.262879"
  },
  {
    "basic_info": {
      "name": "Turacos",
      "full_name": "alanni-tom/Turacos",
      "owner": "alanni-tom",
      "description": "Turacos 是一款专业的多数据库安全评估工具，支持 PostgreSQL、MySQL、Redis、MSSQL 等多种数据库的后渗透操作。 为安全研究人员提供系统化、模块化的数据库安全测试能力，助力企业进行安全评估与漏洞验证。",
      "url": "https://github.com/alanni-tom/Turacos",
      "clone_url": "https://github.com/alanni-tom/Turacos.git",
      "ssh_url": "git@github.com:alanni-tom/Turacos.git",
      "homepage": null,
      "created_at": "2025-10-14T09:05:37Z",
      "updated_at": "2025-10-28T09:32:36Z",
      "pushed_at": "2025-10-23T14:19:14Z"
    },
    "stats": {
      "stars": 41,
      "forks": 3,
      "watchers": 41,
      "open_issues": 1,
      "size": 1422
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 150987,
        "CSS": 12640,
        "C": 3834,
        "Makefile": 638
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "<p align=\"center\">\n  <img width=\"96\" height=\"96\" alt=\"favicon\" src=\"https://github.com/user-attachments/assets/1afd412f-75d8-4337-8ecf-afbf485d47fc\" />\n</p>\n\n<h1 align=\"center\">🦜 Turacos</h1>\n\n<p align=\"center\">\n  <b>多数据库安全评估工具 | 后渗透辅助 | 企业级安全测试</b>\n</p>\n\n<p align=\"center\">\n  <img src=\"https://img.shields.io/badge/Java-17+-orange?logo=java&logoColor=white\" alt=\"Java Version\">\n  <img src=\"https://img.shields.io/badge/Security-Tool-critical?logo=shield-check\" alt=\"Security Tool\">\n  <img src=\"https://img.shields.io/badge/license-MIT-blue\" alt=\"License\">\n  <img src=\"https://img.shields.io/badge/maintainer-alanni-green\" alt=\"Maintainer\">\n  <img src=\"https://img.shields.io/badge/maintainer-HAKUNA%20MATATA-green\" alt=\"Maintainer\">\n</p>\n\n---\n\n## 📖 项目简介\n\n**Turacos** 是一款专业的多数据库安全评估工具，支持 **PostgreSQL、MySQL、Redis、MSSQL** 等多种数据库的后渗透操作。  \n为安全研究人员提供系统化、模块化的数据库安全测试能力，助力企业安全评估与漏洞验证。\n\n---\n\n## ⚠️ 法律声明\n\n<div align=\"center\" style=\"background-color:#fff3cd; border:1px solid #ffeaa7; border-radius:6px; padding:16px; margin:20px 0;\">\n<h3>🛡️ 免责声明</h3>\n<p><strong>本工具仅供个人安全研究与学习用途。请勿用于非法活动！<br>由于传播、使用本工具而造成的任何后果与损失，均由使用者本人承担。</strong></p>\n</div>\n\n---\n\n## 🎯 功能特性\n\n| **功能模块** | **🐬 MySQL** | **🟥 Redis** | **🗄️ MSSQL** | **🐘 PostgreSQL** |\n|:-------------|:-----------:|:------------:|:-------------:|:----------------:|\n| 命令执行 | ✅ | ✅ | ✅ | ✅ |\n| 任意文件读取 | ✅ | 🚫 | ✅ | ✅ |\n| 脚本加载 | ✅ | ✅ | ✅ | ✅ |\n| 数据浏览 | ✅ | ✅ | ✅ | ✅ |\n\n---\n\n## 🚀 快速开始\n\n### 📦 环境要求\n- Java **17+**\n- 数据库支持：\n  - PostgreSQL **9.0+**\n  - MySQL **5.7+**\n  - Redis **4.0+**\n  - MSSQL **2012+**\n\n### 🧩 使用方法\n```bash\n# 克隆项目\ngit clone https://github.com/alanni-tom/Turacos.git\n\n# 进入目录并编译\ncd turacos\nmvn clean package\n\n# 运行工具, 这里需要加载 javafx sdk模块\njava -jar Turacos-1.0-SNAPSHOT.jar\n```\n\n### 🚀 项目预览\n\n<img width=\"899\" height=\"629\" alt=\"image\" src=\"https://github.com/user-attachments/assets/f12deb0f-d31f-413b-9bd6-b120fa6ffa8e\" />\n\n<img width=\"903\" height=\"634\" alt=\"image\" src=\"https://github.com/user-attachments/assets/bab4434c-5908-40ae-8af9-780675cc95cd\" />\n\n\n\n👥 开发团队\n🏅 核心贡献者\n\n<table> <tr> <td align=\"center\"> <a href=\"https://github.com/alanni-tom\"> <img src=\"https://avatars.githubusercontent.com/alanni-tom\" width=\"100px;\" alt=\"alanni\"/> <br/><sub><b>alanni</b></sub> </a><br/> <span>项目开发</span> </td> <td align=\"center\"> <a href=\"https://github.com/A-HakunaMatata\"> <img src=\"https://avatars.githubusercontent.com/A-HakunaMatata\" width=\"100px;\" alt=\"HAKUNA MATATA\"/> <br/><sub><b>HAKUNA MATATA</b></sub> </a><br/> <span>UI 设计</span> </td> </tr> </table>\n\n🙏 特别鸣谢\n\n感谢 HAKUNA MATATA 提供的出色 UI 设计，使工具的视觉体验更具现代感与专业性。\n\n📄 许可证\n\n本项目采用 MIT License 开源协议\n详细信息请参阅 LICENSE\n\n<p align=\"center\"> 🔐 <b>安全研究 · 专业工具 · 持续更新</b> <br/> 💬 欢迎提交 Issue 或 PR，一起完善 Turacos！ </p>\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-10-29T02:42:05.380699"
  }
]
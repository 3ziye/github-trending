[
  {
    "basic_info": {
      "name": "elden-github",
      "full_name": "SaltyAom/elden-github",
      "owner": "SaltyAom",
      "description": "Elden Ring experience for GitHub",
      "url": "https://github.com/SaltyAom/elden-github",
      "clone_url": "https://github.com/SaltyAom/elden-github.git",
      "ssh_url": "git@github.com:SaltyAom/elden-github.git",
      "homepage": null,
      "created_at": "2025-09-13T14:50:14Z",
      "updated_at": "2025-09-14T11:36:02Z",
      "pushed_at": "2025-09-13T15:10:29Z"
    },
    "stats": {
      "stars": 297,
      "forks": 8,
      "watchers": 297,
      "open_issues": 2,
      "size": 2321
    },
    "tech_info": {
      "language": "TypeScript",
      "languages": {
        "TypeScript": 11457
      },
      "license": "MIT License",
      "topics": []
    },
    "content": {
      "readme": "# Elden GitHub\nElden Ring experience for GitHub\n\n![Pull request made](https://github.com/user-attachments/assets/b90c43c5-b058-4aa1-9621-193bdace400b)\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-09-14T11:39:51.478203"
  },
  {
    "basic_info": {
      "name": "Gift-Buyer-Tg",
      "full_name": "aezate/Gift-Buyer-Tg",
      "owner": "aezate",
      "description": "A bot that scans and buys telegram gifts based on given criteria",
      "url": "https://github.com/aezate/Gift-Buyer-Tg",
      "clone_url": "https://github.com/aezate/Gift-Buyer-Tg.git",
      "ssh_url": "git@github.com:aezate/Gift-Buyer-Tg.git",
      "homepage": "",
      "created_at": "2025-09-13T12:58:32Z",
      "updated_at": "2025-09-14T11:36:03Z",
      "pushed_at": "2025-09-13T13:03:51Z"
    },
    "stats": {
      "stars": 207,
      "forks": 88,
      "watchers": 207,
      "open_issues": 0,
      "size": 41
    },
    "tech_info": {
      "language": "Python",
      "languages": {
        "Python": 61656,
        "Batchfile": 536
      },
      "license": "Apache License 2.0",
      "topics": [
        "gift-buyer",
        "gift-buyer-tg",
        "telegram-gift-buyer"
      ]
    },
    "content": {
      "readme": "# Auto Telegram Gift Buyer Bot‚úà\n[![Static Badge](https://img.shields.io/badge/Telegram-Channel-Link?style=for-the-badge&logo=Telegram&logoColor=white&logoSize=auto&color=blue)](https://t.me/+pB6j65Kv7cdjZmU0)\n\n**A bot that searches for available gifts and purchases them based on given criteria. Supports integration with Telegram bot!**\n\n# Previewüñº\n\n<img width=\"639\" height=\"340\" alt=\"image\" src=\"https://github.com/user-attachments/assets/a95b8c47-3278-4e15-ad91-c2c2264601b0\" />\n\n\n\n\n# Features‚ú®\n- **Fully automatic scans for new gifts**\n- **Fully customizable settings**\n- **Telegram bot integration available**\n- **Incredible fast gift purchase(5+ gifts per second)**\n- **Continuously scans for gifts while the script is online.**\n- **(Check Tonnel gift prices right inside the script.**\n\nAnd more.... *in future*\n\n# Requirements\n- Python 3.10+üêç\n- Git üü¶\n- Pip üü©\n- VPS for continuously operation(unnecessary)\n\n# Installationüì©\n```shell\ngit clone https://github.com/aezate/Gift-Buyer-Tg\ncd Gift-Buyer-Tg\nrun.bat\n```\n\n**OR**\n\n```shell\ngit clone https://github.com/aezate/Gift-Buyer-Tg\ncd Gift-Buyer-Tg\npip install -r requirements.txt\npython main.py\n```\n\n# Configuration‚öô\n**To configure the bot, edit the config.py file**‚úÖ\n\n| Settings | Description |\n|----------------------------|:-------------------------------------------------------------------------------------------------------------:|\n| **API_ID / API_HASH**      | Platform data from which to run the Telegram session (get it from my.telegram.org)                                   |       \n| **PHONE_NUMBER**               | Phone number of the account you want to use to buy gifts                                                                 |\n| **BOT_TOKEN**              |  Get Bot Token from [@BotFather](https://t.me/BotFather) to receive notifications and control the bot through telegram(unnecessary)                                                                               |\n| **CHAT_ID** | Bot chat ID, for telegram bot integration(unnecessary)                                                                       |\n| **NFT_GIFTS_ONLY** | Buys upgradable gifts only(put True or False)                                                                     |\n| **GIFT_MIN_PRICE** | Minimum price of the gift you want to buy (put 0 for no limit)                                                                      |\n| **GIFT_MAX_PRICE** | Maximum price of the gift you want to buy(put 0 for no limit)                                                    |\n| **MAX_GIFT_SUPPLY** | Highest supply of the gift, the script wont buy if number is higher than supply of the gift(put 0 for no limit)                                                                      |\n| **QUANTITY** | Quantity of purchasable gifts(If you enter 0, the script will continue buying until you run out of stars.)                                                                   |\n| **RECEPIENT** |Recepient of the gifts. Can be @channel or @user                                                                      |\n| **BUY_MULTIPLE_GIFTS** | Buys all available gifts that meet the criteria with priority to lower supply(True or False)                                                                      |\n| **HIDE_SENDER_NAME** | Hide name of the gift sender or not                                                                     |\n\n## Supportüåü\n**Thanks for using my scripts!‚ù§**\n\n- ***Don't forget to put stars, it supports me a lot‚≠ê***\n\n- ***JOIN OUR TELEGRAM [CHAT](https://t.me/+9j5RcKMfT5s4M2Q0)***\n\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-09-14T11:39:52.577357"
  },
  {
    "basic_info": {
      "name": "Super-Mario-Bros.-Remastered-Public",
      "full_name": "JHDev2006/Super-Mario-Bros.-Remastered-Public",
      "owner": "JHDev2006",
      "description": null,
      "url": "https://github.com/JHDev2006/Super-Mario-Bros.-Remastered-Public",
      "clone_url": "https://github.com/JHDev2006/Super-Mario-Bros.-Remastered-Public.git",
      "ssh_url": "git@github.com:JHDev2006/Super-Mario-Bros.-Remastered-Public.git",
      "homepage": null,
      "created_at": "2025-09-13T15:29:58Z",
      "updated_at": "2025-09-14T11:39:16Z",
      "pushed_at": "2025-09-14T09:15:36Z"
    },
    "stats": {
      "stars": 177,
      "forks": 21,
      "watchers": 177,
      "open_issues": 85,
      "size": 50845
    },
    "tech_info": {
      "language": "GDScript",
      "languages": {
        "GDScript": 933987,
        "GAP": 36590,
        "C#": 10724,
        "GDShader": 2322
      },
      "license": "GNU General Public License v3.0",
      "topics": []
    },
    "content": {
      "readme": "# Super Mario Bros Remastered\nA Remake / Celebration of the original 'Super Mario Bros.' games. Features new levels, custom modes, new characters, alongside a full level editor / custom level system!\n\n<img width=\"3840\" height=\"2160\" alt=\"SMB1R_BANNER_printable\" src=\"https://github.com/user-attachments/assets/ed0e97a8-614a-44e2-b69f-2654fca6196c\" />\n\n### Art by [@krystalphantasm.bsky.social](https://bsky.app/profile/krystalphantasm.bsky.social/post/3lvgmgvjeks2f)\n\n### Download: https://github.com/JHDev2006/Super-Mario-Bros.-Remastered-Public/releases\n\n# Requires an original SMB1 NES ROM to play! None of the original assets are contained in the source code, unless it was originally made by us!\n\n# This does NOT act as a replacement for the original Super Mario Bros. games. Super Mario Bros. & Super Mario Bros.: The Lost Levels, can be played now on Nintendo Switch, through Nintendo Switch Online\n\n## Features\n- Super Mario Bros., Super Mario Bros.: The Lost Levels, Super Mario Bros. Special and All Night Nippon: Super Mario Bros. Fully recreated from the ground up!\n- Improved physics / level design\n- Resource Packs! Fully customize how the game looks and sounds.\n- Custom Characters - Add in your own characters to use in game.\n- Fully Open Source!\n- Level Share Square Partnered\n\n## Downloading\n1. Go to the 'Releases' page\n2. Look for the latest version\n3. Download the .zip for your OS\n4. Extract and run\n5. Enjoy!\n\n## Importing for editing\n1. Download the source\n2. Download Godot 4.5 beta 3\n3. Import the project\n4. Enjoy!\n\n## Contributing\nYou are more than welcome to contribute any fixes / improvements you'd like, simply open a pull request, and I'll review it ASAP!\n\n## Issues\nWhen opening an issue, please keep it to one report, per post, and try and be as helpful as possible, when telling me what has occured, so that its as easy to fix as possible.\nPlease do not open issues, for feature requests, suggestions, or opinions. BUG REPORTS ONLY\n\n## Known Issues\nThere are a couple known issues, mainly due to being built off of Godot, and these issues existing in the engine itself.\n- Steam deck controls do not work natively, you can circumvent this by setting up controller bindings to emulate keys instead, apologies.\n- Physics are weird, when interacting with corners + the camera barrier\n- Drop shadows jitter when playing with \"Smooth Rendering\"\n- Several entities jitter at times.\n- Blocks + coins, respawn when reloading resource packs\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-09-14T11:39:53.743810"
  },
  {
    "basic_info": {
      "name": "snippets-vless-reverse-proxy",
      "full_name": "neibcn/snippets-vless-reverse-proxy",
      "owner": "neibcn",
      "description": null,
      "url": "https://github.com/neibcn/snippets-vless-reverse-proxy",
      "clone_url": "https://github.com/neibcn/snippets-vless-reverse-proxy.git",
      "ssh_url": "git@github.com:neibcn/snippets-vless-reverse-proxy.git",
      "homepage": null,
      "created_at": "2025-09-13T03:54:34Z",
      "updated_at": "2025-09-14T11:18:47Z",
      "pushed_at": "2025-09-13T04:37:09Z"
    },
    "stats": {
      "stars": 150,
      "forks": 180,
      "watchers": 150,
      "open_issues": 0,
      "size": 0
    },
    "tech_info": {
      "language": "JavaScript",
      "languages": {
        "JavaScript": 438
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "",
      "default_branch": "main"
    },
    "fetched_at": "2025-09-14T11:39:54.866331"
  },
  {
    "basic_info": {
      "name": "iOSAppMeshTransform",
      "full_name": "gavinmn/iOSAppMeshTransform",
      "owner": "gavinmn",
      "description": null,
      "url": "https://github.com/gavinmn/iOSAppMeshTransform",
      "clone_url": "https://github.com/gavinmn/iOSAppMeshTransform.git",
      "ssh_url": "git@github.com:gavinmn/iOSAppMeshTransform.git",
      "homepage": null,
      "created_at": "2025-09-13T05:44:53Z",
      "updated_at": "2025-09-14T11:01:47Z",
      "pushed_at": "2025-09-13T05:54:52Z"
    },
    "stats": {
      "stars": 80,
      "forks": 3,
      "watchers": 80,
      "open_issues": 0,
      "size": 1656
    },
    "tech_info": {
      "language": "Metal",
      "languages": {
        "Metal": 6054,
        "Swift": 3837
      },
      "license": "MIT License",
      "topics": []
    },
    "content": {
      "readme": "# iOSAppMeshTransform\n\nAn attempt to recreate the new iOS app launching mesh transform using SwiftUI and Metal.\n\nNote: made to run on iPhone 16 Pro (402 x 874 screen). The shader should be generalizable to all device sizes, but the images for the UI are not.\n\nhttps://github.com/user-attachments/assets/488eb6c4-dcf4-432a-92d7-39f3a015c0ce\n\n[Discussion on twitter](https://x.com/Gavmn/status/1966658411078304078)\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-09-14T11:39:55.989350"
  },
  {
    "basic_info": {
      "name": "WSASS",
      "full_name": "2x7EQ13/WSASS",
      "owner": "2x7EQ13",
      "description": "This is the tool to dump the LSASS process on modern Windows 11",
      "url": "https://github.com/2x7EQ13/WSASS",
      "clone_url": "https://github.com/2x7EQ13/WSASS.git",
      "ssh_url": "git@github.com:2x7EQ13/WSASS.git",
      "homepage": null,
      "created_at": "2025-09-13T03:18:26Z",
      "updated_at": "2025-09-14T11:37:36Z",
      "pushed_at": "2025-09-13T05:25:46Z"
    },
    "stats": {
      "stars": 60,
      "forks": 12,
      "watchers": 60,
      "open_issues": 0,
      "size": 37
    },
    "tech_info": {
      "language": "C++",
      "languages": {
        "C++": 15722
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "### WSASS\n\nThis is a tool that uses the old WerfaultSecure.exe program to dump the memory of processes protected by PPL (Protected Process Light), such as LSASS.EXE.\nThe output is in Windows MINIDUMP format.\n\n*This tool automatically replaces the __\"MDMP\"__ magic header with a PNG magic header.\nAfter the dump is complete, you need to restore the original 4-byte magic at the beginning of the file with the original 4 bytes: __{0x4D, 0x44, 0x4D, 0x50}__ \"MDMP\".*\n\n### Command Line Syntax\n\n**WSASS.exe path_to_werfaultsecure.exe target_PID**\n\n*Example: __WSASS.exe C:\\TMP\\WerfaultSecure.exe 888__*\n\n## Links\n\n[Using WSASS to dump LSASS](https://www.zerosalarium.com/2025/09/Dumping-LSASS-With-WER-On-Modern-Windows-11.html)\n\n[Tool to run process with PPL without driver](https://github.com/2x7EQ13/CreateProcessAsPPL)\n\n## Author:\n\n[Two Seven One Three](https://x.com/TwoSevenOneT)\n",
      "default_branch": "master"
    },
    "fetched_at": "2025-09-14T11:39:57.101504"
  },
  {
    "basic_info": {
      "name": "s3tk",
      "full_name": "KingOfBugbounty/s3tk",
      "owner": "KingOfBugbounty",
      "description": null,
      "url": "https://github.com/KingOfBugbounty/s3tk",
      "clone_url": "https://github.com/KingOfBugbounty/s3tk.git",
      "ssh_url": "git@github.com:KingOfBugbounty/s3tk.git",
      "homepage": null,
      "created_at": "2025-09-13T00:05:26Z",
      "updated_at": "2025-09-14T06:51:57Z",
      "pushed_at": "2025-09-13T00:14:31Z"
    },
    "stats": {
      "stars": 53,
      "forks": 10,
      "watchers": 53,
      "open_issues": 0,
      "size": 9
    },
    "tech_info": {
      "language": "Go",
      "languages": {
        "Go": 13732
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "<div align=\"center\">\n  <img width=\"768\" alt=\"ChatGPT Image 12 de set de 2025, 21_02_01\" src=\"https://github.com/user-attachments/assets/40674e6f-914b-4cd4-a7a9-421657631756\" />\n</div>\n\n\n<h1 align=\"center\">\n  S3Scan - S3 Bucket Security Scanner / <a href=\"https://x.com/OFJAAAH\" target=\"_blank\" rel=\"noopener\">@‚úñÔ∏èOFJAAAH</a>\n</h1>\n\n<p align=\"center\">\n  <strong>A powerful S3 bucket security scanner designed for penetration testing and bug bounty hunting</strong>\n</p>\n\n<p align=\"center\">\n  <img src=\"https://img.shields.io/badge/Go-1.21+-blue.svg\" alt=\"Go Version\">\n  <img src=\"https://img.shields.io/badge/License-MIT-green.svg\" alt=\"License\">\n  <img src=\"https://img.shields.io/badge/Platform-Linux%20%7C%20Windows%20%7C%20macOS-lightgrey.svg\" alt=\"Platform\">\n  <img src=\"https://img.shields.io/github/release/user/s3scan.svg\" alt=\"Release\">\n</p>\n\n<p align=\"center\">\n  This tool automatically detects misconfigurations and security vulnerabilities in AWS S3 buckets.\n</p>\n\n## Features\n\n- **Comprehensive Security Testing**: Tests for multiple S3 bucket vulnerabilities\n- **Multiple Input Formats**: Supports various S3 URL formats and bucket names\n- **Permission Testing**: Checks LIST, UPLOAD, DELETE, and TAKEOVER capabilities\n- **Batch Processing**: Scan multiple buckets from stdin input\n- **Colorized Output**: Easy-to-read results with color-coded vulnerability status\n- **Detailed Reporting**: Comprehensive summary of findings\n\n## Security Tests Performed\n\n### 1. Bucket Existence Check\n- Verifies if the S3 bucket exists\n- Identifies non-existent buckets that could be claimed\n\n### 2. List Permissions (READ)\n- Tests if bucket contents can be enumerated\n- Detects publicly readable buckets\n- **Risk**: Information disclosure, data exposure\n\n### 3. Upload Permissions (WRITE)\n- Tests if files can be uploaded to the bucket\n- Identifies writable buckets\n- **Risk**: Malicious file upload, defacement, hosting malware\n\n### 4. Delete Permissions (DELETE)\n- Tests if objects can be deleted from the bucket\n- Detects buckets with delete permissions\n- **Risk**: Data destruction, denial of service\n\n### 5. Bucket Takeover Detection\n- Identifies non-existent buckets that can be claimed\n- Tests multiple AWS regions for takeover opportunities\n- **Risk**: Subdomain takeover, brand impersonation\n\n## Installation\n\n### Prerequisites\n- Go 1.21 or higher\n- Internet connection for S3 API testing\n\n### Building from Source\n\n1. Clone or download the source code\n2. Navigate to the project directory\n3. Build the binary:\n\n```bash\ngo build -o s3scan main.go\n```\n\n### Quick Setup\n\n```bash\n# Make the binary executable\nchmod +x s3scan\n\n# Optional: Move to system PATH\nsudo mv s3scan /usr/local/bin/\n```\n\n## Usage\n\n### Basic Usage\n\nThe tool reads S3 bucket URLs or names from stdin:\n\n```bash\n# Single bucket\necho \"my-test-bucket\" | ./s3scan\n\n# Multiple buckets from file\ncat buckets.txt | ./s3scan\n\n# Multiple buckets inline\necho -e \"bucket1\\nbucket2\\nbucket3\" | ./s3scan\n```\n\n### Supported Input Formats\n\nThe scanner accepts various S3 URL formats:\n\n- Bucket name: `my-bucket-name`\n- Virtual-hosted style: `https://my-bucket.s3.amazonaws.com`\n- Path-style: `https://s3.amazonaws.com/my-bucket`\n- S3 URI: `s3://my-bucket-name`\n\n### Example Commands\n\n```bash\n# Scan from a list of domains/subdomains\nsubfinder -d example.com | grep s3 | ./s3scan\n\n# Scan buckets found during reconnaissance\necho \"company-backups\" | ./s3scan\necho \"app-uploads\" | ./s3scan\necho \"static-assets\" | ./s3scan\n\n# Batch scan from file\ncat << EOF | ./s3scan\ncompany-data\nbackup-bucket\npublic-assets\nuser-uploads\nEOF\n```\n\n### Integration with Other Tools\n\n```bash\n# With subfinder and grep\nsubfinder -d target.com | grep -i s3 | ./s3scan\n\n# With amass\namass enum -d target.com | grep s3 | ./s3scan\n\n# With waybackurls\necho \"target.com\" | waybackurls | grep s3 | ./s3scan\n```\n\n## Output Interpretation\n\n### Vulnerability Status\n\n- **[VULNERABLE]** - Red: Misconfiguration detected\n- **[SECURE]** - Green: No vulnerabilities found\n- **[EXISTS]** - Green: Bucket exists and accessible\n- **[NOT FOUND]** - Yellow: Bucket doesn't exist\n- **[TAKEOVER POSSIBLE]** - Magenta: Bucket can be claimed\n\n### Permission Types\n\n- **[LIST]** - Can enumerate bucket contents\n- **[UPLOAD]** - Can upload files to bucket\n- **[DELETE]** - Can delete objects from bucket\n- **[TAKEOVER]** - Bucket doesn't exist and can be claimed\n\n### Example Output\n\n```\n[MISCONFIGURED] company-backups\n  ‚îî‚îÄ [LIST] Public read access - can enumerate bucket contents\n  ‚îî‚îÄ [UPLOAD] Public write access - can upload malicious files\n\n[TAKEOVER POSSIBLE] old-app-assets\n  ‚îî‚îÄ [TAKEOVER] Bucket doesn't exist - can be claimed for subdomain takeover\n\n[SECURE] private-data\n```\n\n## Legal and Ethical Usage\n\n‚ö†Ô∏è **IMPORTANT**: This tool is designed for:\n- Authorized penetration testing\n- Bug bounty programs\n- Security assessments on systems you own\n- Educational purposes\n\n**DO NOT USE** for:\n- Unauthorized testing of third-party systems\n- Malicious activities\n- Illegal access att",
      "default_branch": "main"
    },
    "fetched_at": "2025-09-14T11:39:58.209833"
  },
  {
    "basic_info": {
      "name": "Anonpay",
      "full_name": "AnonpayOrg/Anonpay",
      "owner": "AnonpayOrg",
      "description": "Payment Processor - Crypto Exchange - Free Mixer",
      "url": "https://github.com/AnonpayOrg/Anonpay",
      "clone_url": "https://github.com/AnonpayOrg/Anonpay.git",
      "ssh_url": "git@github.com:AnonpayOrg/Anonpay.git",
      "homepage": "https://anonpay.org",
      "created_at": "2025-09-13T11:09:28Z",
      "updated_at": "2025-09-14T11:33:42Z",
      "pushed_at": "2025-09-14T09:32:00Z"
    },
    "stats": {
      "stars": 50,
      "forks": 0,
      "watchers": 50,
      "open_issues": 0,
      "size": 5
    },
    "tech_info": {
      "language": null,
      "languages": {},
      "license": null,
      "topics": [
        "api",
        "crypto",
        "cryptocurrency",
        "exchange",
        "free",
        "mixer",
        "payment",
        "payment-gateway",
        "processor"
      ]
    },
    "content": {
      "readme": "[![ANONPAY Logo](https://anonpay.org/static/img/logow400.png)](https://anonpay.org)\n\nPayment Processor - Crypto Exchange - Free Mixer\n\n**Welcome to ANONPAY, a privacy-first payment solution.**\n\n---\n\n*Services:*\n\n**- Low Fee Payment Processing**  \n**- Low Fee Crypto Exchange**  \n**- Free Crypto Mixing**\n\n---\n\n*Features:*\n\n### **Zero Tracking**\nWe do not collect any unnecessary data, ensuring your privacy is maintained.\n\n### **Zero JavaScript**\nOur platform is entirely based on HTML and CSS, and we do not utilize JavaScript for privacy reasons.\n\n### **TOR Support**\nOur service is fully compatible with the \"Safest\" security level of TOR browsers.\n\n### **Crypto Mixing**\nWe automatically mix funds passing through our service by design.\n\n---\n\n*Supported Payment Methods:*\n\nWe allow you to accept a variety of payment options, including:\n\n- **Cryptocurrencies:** Bitcoin, Litecoin, Monero, Bitcoin Cash, eCash, Dogecoin, and more coming soon\n- **PayPal:** Friends and Family and Goods and Services\n\n---\n\n*More Info:*\n\n# [**https://anonpay.org**](https://anonpay.org?ref=github)  \n[http://anonpay666ie3ah4nl55ssimvacwrdkbbji6h4a4snvry26lnemfaxid.onion/](http://anonpay666ie3ah4nl55ssimvacwrdkbbji6h4a4snvry26lnemfaxid.onion?ref=github)\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-09-14T11:39:59.346675"
  },
  {
    "basic_info": {
      "name": "ESPHome-E-Ink-Weather-Calendar-Wall-Monitor",
      "full_name": "thehijacker/ESPHome-E-Ink-Weather-Calendar-Wall-Monitor",
      "owner": "thehijacker",
      "description": "This project provides a complete solution for a wall-mounted e-ink display powered by ESPHome and tightly integrated with Home Assistant. It displays weather, calendar events, room temperatures, and Slovenian date/time, with smart refresh logic and support for dark/light modes.",
      "url": "https://github.com/thehijacker/ESPHome-E-Ink-Weather-Calendar-Wall-Monitor",
      "clone_url": "https://github.com/thehijacker/ESPHome-E-Ink-Weather-Calendar-Wall-Monitor.git",
      "ssh_url": "git@github.com:thehijacker/ESPHome-E-Ink-Weather-Calendar-Wall-Monitor.git",
      "homepage": null,
      "created_at": "2025-09-13T11:31:07Z",
      "updated_at": "2025-09-14T11:04:21Z",
      "pushed_at": "2025-09-13T14:43:37Z"
    },
    "stats": {
      "stars": 34,
      "forks": 0,
      "watchers": 34,
      "open_issues": 0,
      "size": 657
    },
    "tech_info": {
      "language": null,
      "languages": {},
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "# ESPHome E-Ink Weather Calendar Wall Monitor\nThis project provides a complete solution for a wall-mounted e-ink display powered by ESPHome and tightly integrated with Home Assistant. It displays weather, calendar events, room temperatures, and Slovenian date/time, with smart refresh logic and support for dark/light modes.\n\n**Element positioning was planned with this design simulator page (https://jnan.co/tools/displaysim/), which significantly reducing trial-and-error reflashing. I also used different AI to tweak some parts of the code, which again saved me a lot of time.**\n\n# Hardware needed\n\n+ Xiao 7.5\" (https://www.seeedstudio.com/XIAO-7-5-ePaper-Panel-p-6416.html) - price for two was 125,18 ‚Ç¨ (Aliexpress)\n+ Can be powered via USB-C cable, left running on battery or **permanent power directly to +5V and GND PIN on ESP chip**\n+ Display fits perfectly in Ikea frame model R√ñDALM with dimensions 13x18 cm (price in Ikea Slovenia was 3,49 ‚Ç¨ per frame)\n\n# Structure\n## ESPHome Source (esphome-wall-monitor.yaml)\n+ Defines the ESP32-based e-ink display configuration, including fonts, MQTT, API, WiFi, and display logic.\n\n## Custom rendering for weather, calendar, and room temperatures.\n\n+ Dark/Light mode selection.\n+ Smart refresh logic via Home Assistant or API triggers.\n+ Uses MQTT and Home Assistant sensors for data.\n+ Home Assistant Automations & Templates (ha-*.yaml)\n\n## Provide the backend logic and data for the display:\n\n### ha-combine-calendar.yaml:\n+ Collects events from multiple calendars, formats them in Slovenian, and publishes to MQTT for the display.\n### ha-weather.yaml:\n+ Fetches daily/hourly weather forecasts and exposes them as sensors for ESPHome.\n### ha-slovenian_date.yaml:\n+ Generates Slovenian-formatted date and time sensors.\n### ha-refresh-screen.yam:\n+ Smart refresh automation for the display, avoiding unnecessary updates at night and responding to activity.\n### Fonts (fonts)\n+ Custom TTF fonts for Slovenian characters and Material Design Icons.\n\n# Features\n## E-Ink Display:\nShows weather icons, forecasts, room temperatures, calendar events, date, and time.\n## Slovenian Localization:\nAll date, time, and calendar text is localized.\n## Smart Refresh:\nRefreshes only when needed, with night-time suppression and activity triggers.\n## Dark/Light Mode:\nUser-selectable appearance.\n## MQTT & Home Assistant Integration:\nData is fetched and pushed via MQTT and Home Assistant sensors.\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-09-14T11:40:00.497284"
  },
  {
    "basic_info": {
      "name": "tempo",
      "full_name": "leoneljdias/tempo",
      "owner": "leoneljdias",
      "description": "Self-hosted weather API based on ECMWF data, serving colorized WebP maps and GeoJSON contours for easy integration with MapLibre, Leaflet, OpenLayers, and other GIS platforms",
      "url": "https://github.com/leoneljdias/tempo",
      "clone_url": "https://github.com/leoneljdias/tempo.git",
      "ssh_url": "git@github.com:leoneljdias/tempo.git",
      "homepage": "",
      "created_at": "2025-09-13T17:06:03Z",
      "updated_at": "2025-09-14T11:36:11Z",
      "pushed_at": "2025-09-13T17:59:31Z"
    },
    "stats": {
      "stars": 31,
      "forks": 0,
      "watchers": 31,
      "open_issues": 0,
      "size": 10
    },
    "tech_info": {
      "language": "Python",
      "languages": {
        "Python": 17926,
        "Dockerfile": 540,
        "Shell": 374
      },
      "license": "MIT License",
      "topics": [
        "ecmwf",
        "geojson",
        "maplibre",
        "meteorology",
        "meteorology-library",
        "self-hosted",
        "weather",
        "weather-api",
        "weather-app",
        "weather-forecast"
      ]
    },
    "content": {
      "readme": "\r\n# Tempo API\r\n\r\nThis service provides meteorological data processing and caching for maritime and weather applications. It is built with FastAPI and is Docker-ready for easy deployment.\r\n\r\n## Main Features\r\n- **GRIB/NetCDF Data Processing**: Supports common meteorological file formats.\r\n- **Dynamic API Endpoints**: Automatically exposes endpoints for each weather indicator defined in `themes.json`.\r\n- **Advanced Libraries**: Uses GDAL, eccodes, and other scientific libraries for spatial and meteorological data manipulation.\r\n- **Local Storage**: All processed data is stored in `/app/data`.\r\n- **Swagger Documentation**: Interactive API docs available at `/docs`.\r\n\r\n## How to Use\r\n\r\n1. Install dependencies:\r\n    ```bash\r\n    pip install -r requirements.txt\r\n    ```\r\n2. Run the service:\r\n    ```bash\r\n    python main.py\r\n    ```\r\n3. Or use Docker:\r\n    ```bash\r\n    docker-compose up --build\r\n    ```\r\n4. Access the API documentation at [http://localhost:3000/docs](http://localhost:3000/docs)\r\n\r\n## Endpoints Overview\r\n\r\n### `/[theme]/{time_param}/data.webp`\r\nReturns a colorized weather map as a WebP image for the given theme and timestamp.\r\n- **Method:** GET\r\n- **Params:**\r\n   - `theme`: Indicator name (e.g., `temperature`, `mean_sea_level_pressure`)\r\n   - `time_param`: Timestamp in `YYYYMMDDHH` format\r\n- **Response:** WebP image\r\n- **Example:** `/temperature/2025091312/data.webp`\r\n\r\n### `/[theme]/{time_param}/isolines.geojson`\r\nReturns GeoJSON isolines (contour lines) for the selected indicator and timestamp.\r\n- **Method:** GET\r\n- **Params:**\r\n   - `theme`: Indicator name\r\n   - `time_param`: Timestamp\r\n- **Response:** GeoJSON FeatureCollection\r\n- **Example:** `/mean_sea_level_pressure/2025091312/isolines.geojson`\r\n\r\n### `/[theme]/{time_param}/info`\r\nReturns metadata and statistics about the indicator for the given timestamp.\r\n- **Method:** GET\r\n- **Params:**\r\n   - `theme`: Indicator name\r\n   - `time_param`: Timestamp\r\n- **Response:** JSON with parameter name, units, statistics (min, max, mean, std), spatial info\r\n- **Example:** `/temperature/2025091312/info`\r\n\r\n### `/themes.json`\r\nReturns the configuration of available weather themes/indicators.\r\n- **Method:** GET\r\n- **Response:** JSON\r\n\r\n### `/health`\r\nHealth check endpoint for monitoring the API status.\r\n- **Method:** GET\r\n- **Response:** JSON with status, timestamp, cache directory, and number of loaded themes\r\n\r\n### `/`\r\nRedirects to the Swagger documentation (`/docs`).\r\n\r\n## Example Themes\r\nThe available indicators are defined in `themes.json`. Example:\r\n```json\r\n{\r\n   \"temperature\": {\r\n      \"file\": \"temp_2m.grib2\",\r\n      \"variable\": \"2t\",\r\n      \"units\": \"K\"\r\n   },\r\n   \"mean_sea_level_pressure\": {\r\n      \"file\": \"temp_msl.grib2\",\r\n      \"variable\": \"msl\",\r\n      \"units\": \"Pa\"\r\n   }\r\n}\r\n```\r\n\r\n\r\n## Data Source\r\nAll meteorological data is retrieved from the [ECMWF OpenData service](https://www.ecmwf.int/en/forecasts/datasets/open-data), which provides global weather forecast data in GRIB format. The API uses the ECMWF OpenData client to download and process these files automatically.\r\n\r\n## Directory Structure\r\n- `main.py`: Main API script\r\n- `generate_cache.py`: Cache generation script\r\n- `start.sh`: Docker startup script\r\n- `themes.json`: Weather indicator configuration\r\n- `static/`: Static files and generated outputs\r\n- `data/`: Processed data storage\r\n\r\n---\r\nFor questions or suggestions, contact the project maintainer.\r\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-09-14T11:40:01.620438"
  },
  {
    "basic_info": {
      "name": "navi-ai",
      "full_name": "d4551/navi-ai",
      "owner": "d4551",
      "description": "NAVI AI is a comprehensive AI-powered career assistant specifically designed for the gaming industry. ",
      "url": "https://github.com/d4551/navi-ai",
      "clone_url": "https://github.com/d4551/navi-ai.git",
      "ssh_url": "git@github.com:d4551/navi-ai.git",
      "homepage": null,
      "created_at": "2025-09-13T18:06:36Z",
      "updated_at": "2025-09-14T11:36:06Z",
      "pushed_at": "2025-09-14T00:39:14Z"
    },
    "stats": {
      "stars": 30,
      "forks": 0,
      "watchers": 30,
      "open_issues": 0,
      "size": 15770
    },
    "tech_info": {
      "language": "Vue",
      "languages": {
        "Vue": 4481429,
        "TypeScript": 2105428,
        "JavaScript": 1694080,
        "CSS": 441176,
        "HTML": 186686,
        "Shell": 2749
      },
      "license": "Other",
      "topics": []
    },
    "content": {
      "readme": "# NAVI - AI-Powered Gaming Career Assistant\n\n![NAVI Fox Loves Helping!](heyLISTEN.jpg)\n\n<p align=\"center\">\n  <h1 align=\"center\">HEY! LISTEN!</h1>\n</p>\n\n<p align=\"center\">\n  The <em>world's first</em> <strong>source-available (noncommercial), multimodal, gamified</strong> job platform built <em>specifically</em> for the video-game industry.<br/>\n  <strong>Version 0.0.1 - Alpha Release</strong> | Free. No strings. No gacha. Only jobs.\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/d4551/navi-ai/releases\">\n    <img alt=\"Version 0.0.1\" src=\"https://img.shields.io/badge/version-0.0.1-orange\">\n  </a>\n  <a href=\"https://github.com/d4551/navi-ai/blob/main/LICENSE\">\n    <img alt=\"License: NaviAI-NCPL-1.1\" src=\"https://img.shields.io/badge/License-NaviAI--NCPL--1.1-blue\">\n  </a>\n  <a href=\"https://github.com/d4551/navi-ai/stargazers\">\n    <img alt=\"GitHub stars\" src=\"https://img.shields.io/github/stars/d4551/navi-ai.svg?style=social\">\n  </a>\n  <br/>\n  <a href=\"#\">\n    <img alt=\"Status: Alpha\" src=\"https://img.shields.io/badge/status-alpha-red\">\n  </a>\n  <a href=\"#\">\n    <img alt=\"Multimodal AI\" src=\"https://img.shields.io/badge/AI-Multimodal%20(voice%2Fvideo%2Fvision)-purple\">\n  </a>\n  <a href=\"#\">\n    <img alt=\"Industry\" src=\"https://img.shields.io/badge/Focus-Video%20Game%20Jobs-black\">\n  </a>\n  <a href=\"#\">\n    <img alt=\"Free\" src=\"https://img.shields.io/badge/Pricing-Free-%23A3E635\">\n  </a>\n  <a href=\"https://github.com/d4551/navi-ai/actions\">\n    <img alt=\"CI Status\" src=\"https://img.shields.io/github/actions/workflow/status/d4551/navi-ai/ci.yml\">\n  </a>\n</p>\n\n---\n\n## üìñ Table of Contents\n\n- [üöÄ Quick Start](#-quick-start)\n- [üß≠ TL;DR](#-tldr)\n- [üéØ Features](#-features)\n- [üîÆ What's Coming](#-whats-coming)\n- [üì¶ Installation](#-installation)\n- [üöÄ Usage](#-usage)\n- [üõ†Ô∏è Development](#Ô∏è-development)\n- [ü§ù Contributing](#-contributing)\n- [üìö Documentation](#-documentation)\n- [üìú License](#-license)\n- [üôè Credits](#-credits)\n- [üìà Recent Updates](#-recent-updates)\n\n---\n\n## üöÄ Quick Start\n\n```bash\n# Clone the repository\ngit clone https://github.com/d4551/navi-ai.git\ncd navi-ai\n\n# Install dependencies\nnpm install\n\n# Start development server\nnpm run dev\n\n# Or run the Electron app\nnpm run electron-dev\n```\n\n**That's it!** NAVI works immediately with no account required. Add your Google AI Studio API key in Settings for enhanced AI features.\n\n---\n\n## üß≠ TL;DR\n\n**NAVI v0.0.1** is an early alpha release of the world's first source-available (noncommercial), multimodal, gamified job platform built specifically for the video-game industry. It helps you **find game-industry jobs**, **tailor ATS-ready resumes/CVs**, **run mock interviews with studio personas**, **get career coaching**, **peek studio intel**, and **ship a slick portfolio**‚Äîall with **real-time, multimodal Gemini** smarts.\n\n> **‚ö†Ô∏è Alpha Software**: This is an early development version. Expect bugs, incomplete features, and rapid changes. Use at your own risk!\n\n---\n\n## ‚ö†Ô∏è Known Issues & Limitations (v0.0.1)\n\n### Current Limitations\n- **AI Features**: Require Google Gemini API key (not included)\n- **Job Data**: Limited to basic job sources and search capabilities\n- **UI Polish**: Interface may have rough edges and inconsistencies\n- **Performance**: May be slow on lower-end hardware\n- **Stability**: Occasional crashes or unexpected behavior possible\n\n### Missing Features (Coming Soon)\n- Advanced job filtering and search options\n- Complete portfolio builder with media support\n- Mock interview system\n- Gamification and achievements\n- Advanced AI capabilities (voice/video analysis)\n\n### Recommended Setup\n- Use a modern web browser for best compatibility\n- Ensure stable internet connection for AI features\n- Have Google Gemini API key ready for enhanced functionality\n- Back up important data regularly\n\n---\n\n## üì¶ Installation\n\n## üéØ Features (v0.0.1 Alpha)\n\n> **üöß Work in Progress**: This alpha release includes core functionality but many features are incomplete or experimental.\n\n### üéÆ Basic Job Search\n- **Game Industry Focus**: Search for jobs in gaming studios and companies\n- **Basic Filtering**: Filter by location, keywords, and job types\n- **Job Details**: View job descriptions and requirements\n\n### ÔøΩ AI Integration (Experimental)\n- **Google Gemini API**: Basic AI chat and assistance\n- **Resume Analysis**: Simple AI-powered resume feedback\n- **Job Matching**: Basic compatibility scoring\n\n### üìÑ Document Builder (Basic)\n- **Resume Templates**: Simple resume creation tools\n- **Cover Letter Builder**: Basic cover letter generation\n- **PDF Export**: Generate PDF documents\n\n### üé® Portfolio (Prototype)\n- **Project Showcase**: Add and display your game development projects\n- **Basic Organization**: Group projects by type and technology\n\n### ‚öôÔ∏è Settings & Profile\n- **User Profile**: Basic profile management\n- **AI Configuration**: API key setup for Google Gemini\n- **Preferences**: Basic app settings\n\n> **üìã Roadmap**: See below for planned features in future versions.\n\n**IMPROVED**: S",
      "default_branch": "main"
    },
    "fetched_at": "2025-09-14T11:40:02.747209"
  },
  {
    "basic_info": {
      "name": "looking-glass-list",
      "full_name": "vpslog/looking-glass-list",
      "owner": "vpslog",
      "description": "Êî∂ÈõÜÂïÜÂÆ∂ Looking Glass",
      "url": "https://github.com/vpslog/looking-glass-list",
      "clone_url": "https://github.com/vpslog/looking-glass-list.git",
      "ssh_url": "git@github.com:vpslog/looking-glass-list.git",
      "homepage": "",
      "created_at": "2025-09-13T01:23:33Z",
      "updated_at": "2025-09-14T02:24:46Z",
      "pushed_at": "2025-09-13T08:41:23Z"
    },
    "stats": {
      "stars": 28,
      "forks": 2,
      "watchers": 28,
      "open_issues": 0,
      "size": 10
    },
    "tech_info": {
      "language": null,
      "languages": {},
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "# looking-glass-list\n\nÂêÑÂéÇÂïÜ Looking Glass Ê±áÊÄªÔºåÊ¨¢ËøéÊèê‰∫§ Issue\n\n## Looking Glass\n\n>ÊåâÈ¶ñÂ≠óÊØçÊéíÂ∫è\n\n### Akile\n\n| ID | Âú∞ÁÇπ | Êï∞ÊçÆ‰∏≠ÂøÉ | IPÂú∞ÂùÄ | LookingGlass | \n|----|------|----------|--------|--------------|\n| AKILE_DE | Âæ∑ÂõΩ | de | 156.226.175.216 | https://lg.de.akile.io | \n| AKILE_HKB | ‰∏≠ÂõΩÈ¶ôÊ∏Ø | hkb | 85.208.104.41 | https://lg.hkb.akile.io | \n| AKILE_HKL | ‰∏≠ÂõΩÈ¶ôÊ∏Ø | hkl | 38.6.219.116 | https://lg.hkl.akile.io | \n| AKILE_JPB | Êó•Êú¨ | jpb | 141.11.130.152 | https://lg.jpb.akile.io | \n| AKILE_JPH | Êó•Êú¨ | jph | 45.192.249.135 | https://lg.jph.akile.io | \n| AKILE_JPL | Êó•Êú¨ | jpl | 181.214.136.101 | https://lg.jpl.akile.io | \n| AKILE_JPS | Êó•Êú¨ | jps | 154.83.92.51 | https://lg.jps.akile.io | \n| AKILE_LAXH | ÁæéÂõΩÊ¥õÊùâÁü∂ | laxh | 156.229.162.195 | https://lg.laxh.akile.io | \n| AKILE_LAXP | ÁæéÂõΩÊ¥õÊùâÁü∂ | laxp | 166.0.188.25 | https://lg.laxp.akile.io | \n| AKILE_LAXU | ÁæéÂõΩÊ¥õÊùâÁü∂ | laxu | 89.213.182.40 | https://lg.laxu.akile.io | \n| AKILE_LON | Ëã±ÂõΩ‰º¶Êï¶ | lon | 194.147.16.245 | https://lg.lon.akile.io | \n| AKILE_SGB | Êñ∞Âä†Âù° | sgb | 104.192.92.72 | https://lg.sgb.akile.io | \n| AKILE_SGL | Êñ∞Âä†Âù° | sgl | 185.225.20.73 | https://lg.sgl.akile.io | \n| AKILE_SJC | ÁæéÂõΩÂú£‰ΩïÂ°û | sjc | 154.16.27.51 | https://lg.sjc.akile.io | \n| AKILE_TWL | Âè∞Êπæ | twl | 45.207.159.116 | https://lg.twl.akile.io | \n\n\n### BWG\n\n| ID | Âú∞ÁÇπ | Êï∞ÊçÆ‰∏≠ÂøÉ | IPÂú∞ÂùÄ | LookingGlass | \n|----|------|----------|--------|--------------|\n| BWG_HKHK_3 | ‰∏≠ÂõΩÈ¶ôÊ∏Ø | È¶ôÊ∏Ø HK85 | 45.78.18.149 | nan | \n| BWG_HKHK_8 | ‰∏≠ÂõΩÈ¶ôÊ∏Ø | È¶ôÊ∏Ø CN2 GIA | 93.179.124.115 | nan | \n| BWG_JPOS_1 | Êó•Êú¨Â§ßÈò™ | Êó•Êú¨Â§ßÈò™ ËΩØÈì∂ | 185.212.59.222 | jpos.bwg.net | \n| BWG_JPOS_6 | Êó•Êú¨Â§ßÈò™ | Êó•Êú¨Â§ßÈò™ CN2 GIA | nan | nan | \n| BWG_JPTYO_8 | Êó•Êú¨‰∏ú‰∫¨ | Êó•Êú¨‰∏ú‰∫¨ CN2 GIA | nan | nan | \n| BWG_DC39 | Êó•Êú¨‰∏ú‰∫¨ | Êó•Êú¨‰∏ú‰∫¨ DC39 | 74.82.192.227 | dc39.bwg.net | \n| BWG_DC1 | ÁæéÂõΩÊ¥õÊùâÁü∂ | Ê¥õÊùâÁü∂ DC1 | 144.34.236.21 | dc1.bwg.net | \n| BWG_DC99 | ÁæéÂõΩÊ¥õÊùâÁü∂ | Ê¥õÊùâÁü∂ DC99 | 23.106.153.176 | dc99.bwg.net | \n| BWG_USCA_2 | ÁæéÂõΩÊ¥õÊùâÁü∂ | Ê¥õÊùâÁü∂ DC2 QNET | 23.252.96.201 | dc2.bwg.net | \n| BWG_USCA_3 | ÁæéÂõΩÊ¥õÊùâÁü∂ | Ê¥õÊùâÁü∂ DC3 CN2 | 23.252.103.101 | dc3.bwg.net | \n| BWG_USCA_4 | ÁæéÂõΩÊ¥õÊùâÁü∂ | Ê¥õÊùâÁü∂ DC4 MCOM | 98.142.136.11 | dc4.bwg.net | \n| BWG_USCA_6 | ÁæéÂõΩÊ¥õÊùâÁü∂ | Ê¥õÊùâÁü∂ DC6 CN2 GIA-E | 162.244.241.102 | dc6.bwg.net | \n| BWG_USCA_8 | ÁæéÂõΩÊ¥õÊùâÁü∂ | Ê¥õÊùâÁü∂ DC8 ZNET | 23.252.99.102 | dc8.bwg.net | \n| BWG_USCA_9 | ÁæéÂõΩÊ¥õÊùâÁü∂ | Ê¥õÊùâÁü∂ DC9 CN2 GIA | 65.49.131.102 | dc9.bwg.net | \n| BWG_USNY_2 | ÁæéÂõΩÁ∫ΩÁ∫¶ | Á∫ΩÁ∫¶ USNY_2 | 208.167.227.122 | usny.bwg.net | \n| BWG_USNJ | ÁæéÂõΩÊñ∞Ê≥ΩË•ø | Êñ∞Ê≥ΩË•ø USNJ | 23.29.138.5 | usnj.bwg.net | \n| BWG_USCA_FMT | ÁæéÂõΩÂºóÈáåËíôÁâπ | ÂºóÈáåËíôÁâπ FMT | 65.19.150.102 | fmt.bwg.net | \n| BWG_EUNL_3 | Ëç∑ÂÖ∞ÈòøÂßÜÊñØÁâπ‰∏π | ÈòøÂßÜÊñØÁâπ‰∏π EUNL_3 | 45.62.120.202 | nan | \n| BWG_EUNL_9 | Ëç∑ÂÖ∞ÈòøÂßÜÊñØÁâπ‰∏π | ÈòøÂßÜÊñØÁâπ‰∏π ËÅîÈÄöÁ∫øË∑Ø | 104.255.68.50 | eunl9.bwg.net | \n| BWG_AUSYD_1 | Êæ≥Â§ßÂà©‰∫öÊÇâÂ∞º | ÊÇâÂ∞º AUSYD_1 | 103.57.167.114 | nan | \n| BWG_AEDXB_1 | ÈòøËÅîÈÖãËø™Êãú | Ëø™Êãú AEDXB_1 | 162.213.25.71 | dubai.bwg.net | \n\n\n### CLAW\n\n| ID | Âú∞ÁÇπ | Êï∞ÊçÆ‰∏≠ÂøÉ | IPÂú∞ÂùÄ | LookingGlass | \n|----|------|----------|--------|--------------|\n| CLAW_HK_CN | ‰∏≠ÂõΩÈ¶ôÊ∏Ø | HK BGP CN | 47.238.150.244 | https://lg.cn-hongkong.claw.cloud/ | \n| CLAW_TYO_CN | Êó•Êú¨‰∏ú‰∫¨ | Tokyo BGP CN | 47.74.34.123 | https://lg.ap-northeast-1.claw.cloud/ | \n| CLAW_SG_CN | Êñ∞Âä†Âù° | Singapore BGP CN | 8.219.195.163 | https://lg.ap-southeast-1.claw.cloud/ | \n| CLAW_HK_INTL | ‰∏≠ÂõΩÈ¶ôÊ∏Ø | HK BGP | 47.79.18.247 | https://lg.cn-hongkong-intl.claw.cloud/ | \n| CLAW_TYO_INTL | Êó•Êú¨‰∏ú‰∫¨ | Tokyo BGP | 47.79.42.32 | https://lg.ap-northeast-1-intl.claw.cloud/ | \n| CLAW_SG_INTL | Êñ∞Âä†Âù° | Singapore BGP | 47.79.122.185 | https://lg.ap-southeast-1-intl.claw.cloud/ | \n| CLAW_FRA | Âæ∑ÂõΩÊ≥ïÂÖ∞ÂÖãÁ¶è | Frankfurt BGP | 8.209.70.255 | https://lg.eu-central-1.claw.cloud/ | \n| CLAW_VA | ÁæéÂõΩÂºóÂêâÂ∞º‰∫ö | Virginia BGP | 47.253.157.212 | https://lg.us-east-1.claw.cloud/ | \n| CLAW_CA | ÁæéÂõΩÂä†Â∑û | California BGP | 47.251.75.195 | https://lg.us-west-1.claw.cloud/ | \n| CLAW_LON | Ëã±ÂõΩ‰º¶Êï¶ | London BGP | 8.208.44.202 | https://lg.eu-west-1.claw.cloud/ | \n| CLAW_JKT | Âç∞Â∫¶Â∞ºË•ø‰∫öÈõÖÂä†Ëææ | Jakarta BGP | 147.139.193.80 | https://lg.ap-southeast-5.claw.cloud/ | \n\n\n### DMIT\n\n| ID | Âú∞ÁÇπ | Êï∞ÊçÆ‰∏≠ÂøÉ | IPÂú∞ÂùÄ | LookingGlass | \n|----|------|----------|--------|--------------|\n| DMIT_LAX1 | ÁæéÂõΩÊ¥õÊùâÁü∂ | Los Angeles Premium Secure (spro) | 45.88.194.187[2605:52c0:2:d94:c89f:c5ff:fe12:28d] | lax-spro.lg.dmit.sh:8443[lax-spro-v6.lg.dmit.sh:8443] | \n| DMIT_LAX2 | ÁæéÂõΩÊ¥õÊùâÁü∂ | Los Angeles Pro | 154.17.30.96[2605:52c0:2:d96:942f:3fff:fedf:1746] | lax-pro.lg.dmit.sh:8443[lax-pro-v6.lg.dmit.sh:8443] | \n| DMIT_LAX3 | ÁæéÂõΩÊ¥õÊùâÁü∂ | Los Angeles Eyeball (eb) | 154.17.229.24[2605:52c0:1:5ab:bc19:5dff:fe37:3474] | lax-eb.lg.dmit.sh:8443[lax-eb-v6.lg.dmit.sh:8443] | \n| DMIT_LAX4 | ÁæéÂõΩÊ¥õÊùâÁü∂ | Los Angeles Tier 1 (t1) | 174.136.204.135[2605:52c0:3:86:347b:93ff:fe63:48b] | lax-t1.lg.dmit.sh:8443[lax-t1-v6.lg.dmit.sh:8443] | \n| DMIT_TYO1 | Êó•Êú¨‰∏ú‰∫¨ | Tokyo Pro | 154.12.190.32[2403:18c0:1001:1a5:e8fa:83ff:feab:3875] | tyo-pro.lg.dmit.sh:8443[tyo-pro-v6.lg.dmit.sh:8443] | \n| DMIT_TYO2 | Êó•Êú¨‰∏ú‰∫¨ | Tokyo Eyeball (eb) | 154.31.118.26[2403:18c0:1002:4:4f6:89ff:fe91:b509] | tyo-eb.lg.dmit.sh:8443[tyo-eb-v6.lg.dmit.sh:8443] | \n| DMIT_TYO3 | Êó•Êú¨‰∏ú‰∫¨ | Tokyo Tier 1 (t1) | 154.31.112.5[2403:18c0:1000:5:9816:ccff:fe31:de73] | tyo-t1.lg.dmit.sh:8443[tyo-t1-v6.lg.dmit.sh:8443] | \n| DMIT_HKG1 | ‰∏≠ÂõΩÈ¶ôÊ∏Ø ",
      "default_branch": "main"
    },
    "fetched_at": "2025-09-14T11:40:03.884776"
  },
  {
    "basic_info": {
      "name": "PageTalk",
      "full_name": "yeahhe365/PageTalk",
      "owner": "yeahhe365",
      "description": null,
      "url": "https://github.com/yeahhe365/PageTalk",
      "clone_url": "https://github.com/yeahhe365/PageTalk.git",
      "ssh_url": "git@github.com:yeahhe365/PageTalk.git",
      "homepage": null,
      "created_at": "2025-09-13T03:28:13Z",
      "updated_at": "2025-09-14T08:00:09Z",
      "pushed_at": "2025-09-13T18:07:34Z"
    },
    "stats": {
      "stars": 24,
      "forks": 6,
      "watchers": 24,
      "open_issues": 0,
      "size": 545
    },
    "tech_info": {
      "language": "JavaScript",
      "languages": {
        "JavaScript": 92119,
        "CSS": 27108,
        "HTML": 22527,
        "TypeScript": 442
      },
      "license": "MIT License",
      "topics": []
    },
    "content": {
      "readme": "# PageTalk - ËÆ©ÁΩëÈ°µÂê¨ÊáÇ‰Ω†ÁöÑËØù üéôÔ∏è\n\n[English](./README.en.md) | **‰∏≠Êñá**\n\nPageTalk ÊòØ‰∏ÄÊ¨æÂºÄÊ∫êÁöÑ Chrome ÊµèËßàÂô®Êâ©Â±ïÔºåÂÆÉËÉΩËÆ©‰Ω†Âú®‰ªª‰ΩïÁΩëÈ°µÁöÑÊñáÊú¨Ê°Ü‰∏≠ÈÄöËøáËØ≠Èü≥ËøõË°åËæìÂÖ•ÔºåÂΩªÂ∫ïËß£Êîæ‰Ω†ÁöÑÂèåÊâã„ÄÇÊó†ËÆ∫ÊòØÂú®ÊêúÁ¥¢ÂºïÊìé„ÄÅÁ§æ‰∫§Â™í‰Ωì„ÄÅÁîµÂ≠êÈÇÆ‰ª∂ËøòÊòØÂú®Á∫øÊñáÊ°£‰∏≠ÔºåÂè™ÈúÄÁÇπÂáªÊÇ¨ÊµÆÊåâÈíÆÊàñÊåâ‰∏ãÂø´Êç∑ÈîÆÔºåÂç≥ÂèØÂºÄÂßãËØ¥ËØùÔºåÊñáÂ≠ó‰æø‰ºöËá™Âä®ËæìÂÖ•„ÄÇ\n<img width=\"768\" height=\"147\" alt=\"PixPin_2025-09-13_13-40-04\" src=\"https://github.com/user-attachments/assets/2f32d71b-580c-457b-b876-cacdab10f5e0\" />\n\n\n---\n\n## ‚ú® ‰∏ªË¶ÅÂäüËÉΩ\n\n*   **üåê ÈöèÂ§ÑÂèØÁî®**: Âú®‰ªª‰ΩïÁΩëÈ°µÁöÑËæìÂÖ•Ê°Ü„ÄÅÊñáÊú¨ÂüüÊàñÂØåÊñáÊú¨ÁºñËæëÂô®‰∏≠ÈÉΩËÉΩ‰ΩøÁî®ËØ≠Èü≥ËæìÂÖ•„ÄÇ\n*   **üñ±Ô∏è ÊÇ¨ÊµÆÊåâÈíÆ**: ÁïåÈù¢‰∏ä‰ºöÊòæÁ§∫‰∏Ä‰∏™ÂèØÊãñÂä®ÁöÑÊÇ¨ÊµÆÈ∫¶ÂÖãÈ£éÊåâÈíÆÔºåÂçïÂáªÂç≥ÂèØÂºÄÂßã/ÂÅúÊ≠¢ÂΩïÈü≥„ÄÇ\n*   **‚å®Ô∏è Âø´Êç∑ÈîÆÊîØÊåÅ**: ÂÆåÂÖ®ÂèØËá™ÂÆö‰πâÁöÑÂÖ®Â±ÄÂø´Êç∑ÈîÆÔºåËÆ©‰Ω†Êó†ÈúÄÈº†Ê†á‰πüËÉΩÈ´òÊïàÊìç‰Ωú„ÄÇ\n*   **üöÄ ÂèåÂºïÊìéÈ©±Âä®**:\n    *   **ÂÖçË¥πÊúçÂä°**: ÂÜÖÁΩÆ‰∏Ä‰∏™ÂºÄÁÆ±Âç≥Áî®ÁöÑÂÖçË¥πËØÜÂà´ÊúçÂä°ÔºåÊó†ÈúÄ‰ªª‰ΩïÈÖçÁΩÆ„ÄÇ\n    *   **ÈòøÈáå‰∫ëÁôæÁÇº**: ÊîØÊåÅÈÖçÁΩÆ‰Ω†Ëá™Â∑±ÁöÑÈòøÈáå‰∫ëÁôæÁÇº API KeyÔºå‰ΩøÁî®ÊÄßËÉΩÊõ¥Âº∫„ÄÅÊõ¥Á®≥ÂÆöÁöÑ `qwen3-asr-flash` Ê®°Âûã„ÄÇ\n*   **üåç Â§öËØ≠Ë®ÄÊîØÊåÅ**: ÊîØÊåÅËá™Âä®Ê£ÄÊµãËØ≠Ë®ÄÔºå‰πüÂèØÊâãÂä®ÈÄâÊã©ÂåÖÊã¨‰∏≠Êñá„ÄÅËã±ËØ≠„ÄÅÊó•ËØ≠Âú®ÂÜÖÁöÑÂçÅÂá†ÁßçÂ∏∏Áî®ËØ≠Ë®Ä„ÄÇ\n*   **üìÑ Êñá‰ª∂ËΩ¨ÂΩï**: ÂèåÂáªÊÇ¨ÊµÆÊåâÈíÆÂç≥ÂèØÊâìÂºÄËΩ¨ÂΩïÈù¢ÊùøÔºåÊîØÊåÅÊãñÊãΩÊú¨Âú∞Èü≥È¢ë/ËßÜÈ¢ëÊñá‰ª∂ËøõË°åÁ¶ªÁ∫øËΩ¨ÂΩï„ÄÇ\n*   **üß† Êô∫ËÉΩÊ†ºÂºèÂåñ**: ÂºÄÂêØ‚ÄúÈÄÜÂêëÊñáÊú¨Ê†áÂáÜÂåñ‚ÄùÔºàITNÔºâÂêéÔºåËÉΩÂ∞ÜËØ≠Èü≥‰∏≠ÁöÑÊï∞Â≠ó„ÄÅÊó•Êúü„ÄÅÂçï‰ΩçÁ≠âËá™Âä®ËΩ¨Êç¢‰∏∫‰π¶Èù¢ËØ≠Ê†ºÂºèÔºà‰æãÂ¶ÇÔºå‚Äú‰∏ÄÁôæÂùóÈí±‚Äù -> ‚Äú100ÂÖÉ‚ÄùÔºâ„ÄÇ\n*   **üéØ ‰∏ä‰∏ãÊñá‰ºòÂåñ**: ÂèØËÆæÁΩÆÁâπÂÆöÈ¢ÜÂüüÁöÑ‰∏ì‰∏öËØçÊ±á‰Ωú‰∏∫‰∏ä‰∏ãÊñáÔºåÊòæËëóÊèêÂçáÂ§çÊùÇÂú∫ÊôØ‰∏ãÁöÑËØÜÂà´ÂáÜÁ°ÆÁéá„ÄÇ\n*   **üé® È´òÂ∫¶ÂèØÂÆöÂà∂**:\n    *   **UI Áº©Êîæ**: Ëá™Áî±Ë∞ÉÊï¥ÊÇ¨ÊµÆÊåâÈíÆÂèäÁõ∏ÂÖ≥ UI ÁöÑÂ§ßÂ∞è„ÄÇ\n    *   **ÊåâÈíÆÊòæÈöê**: ÂèØÈÄâÊã©ÈöêËóèÊÇ¨ÊµÆÊåâÈíÆÔºåÂÆåÂÖ®ÈÄöËøáÂø´Êç∑ÈîÆÊìç‰Ωú„ÄÇ\n    *   **Ëá™Âä®Â§çÂà∂**: ËØÜÂà´ÂÆåÊàêÂêéËá™Âä®Â∞ÜÊñáÊú¨Â§çÂà∂Âà∞Ââ™Ë¥¥Êùø„ÄÇ\n    *   **ËÆæÂ§áÈÄâÊã©**: Ëá™Áî±ÈÄâÊã©Ë¶Å‰ΩøÁî®ÁöÑÈ∫¶ÂÖãÈ£éËÆæÂ§á„ÄÇ\n\n## üõ†Ô∏è ÂÆâË£Ö\n\n### ÊñπÂºè‰∏ÄÔºö‰ªé Chrome ÁΩë‰∏äÂ∫îÁî®Â∫óÂÆâË£ÖÔºàÊé®ËçêÔºâ\n\n*Âç≥Â∞Ü‰∏äÊû∂ÔºåÊï¨ËØ∑ÊúüÂæÖÔºÅ*\n\n### ÊñπÂºè‰∫åÔºöÊâãÂä®ÂÆâË£ÖÔºàÂºÄÂèëËÄÖÊ®°ÂºèÔºâ\n\n1.  ‰∏ãËΩΩÂπ∂Ëß£ÂéãÊâ©Â±ïÁ®ãÂ∫èÂåÖ„ÄÇ\n    *   **ÂØπ‰∫éÊôÆÈÄöÁî®Êà∑**: ÁÇπÂáª‰∏ãËΩΩÊúÄÊñ∞ÊâìÂåÖÂ•ΩÁöÑÁ®≥ÂÆöÁâà -> [**pagetalk.zip**](https://github.com/user-attachments/files/22308910/pagetalk.zip)\n    *   **ÂØπ‰∫éÂºÄÂèëËÄÖ**: ÂÖãÈöÜÊúÄÊñ∞ÁöÑÊ∫êÁ†Å: `git clone https://github.com/yeahhe365/PageTalk.git`\n2.  ÊâìÂºÄ Chrome ÊµèËßàÂô®ÔºåÂú®Âú∞ÂùÄÊ†èËæìÂÖ• `chrome://extensions/` Âπ∂ÂõûËΩ¶„ÄÇ\n3.  Âú®È°µÈù¢Âè≥‰∏äËßíÔºåÊâìÂºÄ **‚ÄúÂºÄÂèëËÄÖÊ®°Âºè‚Äù** ÂºÄÂÖ≥„ÄÇ\n4.  ÁÇπÂáªÂ∑¶‰∏äËßíÁöÑ **‚ÄúÂä†ËΩΩÂ∑≤Ëß£ÂéãÁöÑÊâ©Â±ïÁ®ãÂ∫è‚Äù** ÊåâÈíÆ„ÄÇ\n5.  Âú®ÂºπÂá∫ÁöÑÊñá‰ª∂ÈÄâÊã©Ê°Ü‰∏≠ÔºåÈÄâÊã©‰Ω†ÂàöÂàö‰∏ãËΩΩÂπ∂ **Ëß£Âéã** ÂêéÁöÑÈ°πÁõÆÊñá‰ª∂Â§π„ÄÇ\n6.  ÂÆâË£ÖÂÆåÊàêÔºÅ‰Ω†ÂèØ‰ª•Âú®ÊµèËßàÂô®Â∑•ÂÖ∑Ê†èÁúãÂà∞ PageTalk ÁöÑÂõæÊ†á„ÄÇ\n\n## üöÄ ‰ΩøÁî®ÊåáÂçó\n\n### 1. Âü∫Á°ÄÈÖçÁΩÆ\n\nÈ¶ñÊ¨°‰ΩøÁî®Êó∂ÔºåËØ∑ÁÇπÂáªÊµèËßàÂô®Â∑•ÂÖ∑Ê†è‰∏äÁöÑ PageTalk ÂõæÊ†áËøõË°åËÆæÁΩÆ„ÄÇ\n\n*   **API ÊúçÂä°**:\n    *   **Free**: ÈªòËÆ§ÈÄâÈ°πÔºåÊó†ÈúÄ‰ªª‰ΩïÈÖçÁΩÆÂç≥ÂèØÁõ¥Êé•‰ΩøÁî®„ÄÇ\n    *   **ÈòøÈáå‰∫ëÁôæÁÇº**: ÊÄßËÉΩÊõ¥‰Ω≥„ÄÇÈÄâÊã©Ê≠§È°πÂêéÔºåËØ∑Âú®‰∏ãÊñπËæìÂÖ•‰Ω†ÁöÑ API Key„ÄÇ([Â¶Ç‰ΩïÁî≥ËØ∑Ôºü](https://bailian.console.aliyun.com/#/home))\n*   **ËØ≠Ë®Ä**: Êé®Ëçê‰ΩøÁî®‚ÄúËá™Âä®Ê£ÄÊµã‚ÄùÔºåÂÆÉËÉΩËØÜÂà´Â§öÁßçËØ≠Ë®Ä„ÄÇÂ¶ÇÊúâÁâπÂÆöÈúÄÊ±ÇÔºå‰πüÂèØÊâãÂä®ÈÄâÊã©„ÄÇ\n*   **È∫¶ÂÖãÈ£é**: ÈÄâÊã©‰Ω†Â∏åÊúõ‰ΩøÁî®ÁöÑÂΩïÈü≥ËÆæÂ§á„ÄÇ\n*   **Âø´Êç∑ÈîÆ**: ÁÇπÂáªËæìÂÖ•Ê°ÜÔºåÁÑ∂ÂêéÁõ¥Êé•Êåâ‰∏ã‰Ω†ÊÉ≥Ë¶ÅÁöÑÁªÑÂêàÈîÆÂç≥ÂèØËÆæÁΩÆ„ÄÇ\n*   **ÂÖ∂‰ªñÈÄâÈ°π**: Ê†πÊçÆ‰Ω†ÁöÑ‰ΩøÁî®‰π†ÊÉØË∞ÉÊï¥ÊÇ¨ÊµÆÊåâÈíÆ„ÄÅUI Áº©Êîæ„ÄÅËá™Âä®Â§çÂà∂Á≠âÂäüËÉΩ„ÄÇ\n\n<img width=\"352\" height=\"600\" alt=\"PixPin_2025-09-13_13-38-43\" src=\"https://github.com/user-attachments/assets/7d7c35dd-8668-4024-b5eb-195dad64162a\" />\n\n### 2. ÂÆûÊó∂ËØ≠Èü≥ËæìÂÖ•\n\n1.  Âú®‰ªªÊÑèÁΩëÈ°µ‰∏äÔºåÁî®Èº†Ê†áÁÇπÂáª‰∏Ä‰∏™ÊñáÊú¨ËæìÂÖ•Ê°ÜÔºàÂ¶ÇÊêúÁ¥¢Ê°Ü„ÄÅËØÑËÆ∫Âå∫Á≠âÔºâ„ÄÇ\n2.  ÈÄöËøá‰ª•‰∏ã‰ªª‰∏ÄÊñπÂºèÂºÄÂßãÂΩïÈü≥Ôºö\n    *   **ÂçïÂáª** Â±èÂπïÂè≥‰∏ãËßíÁöÑÊÇ¨ÊµÆÈ∫¶ÂÖãÈ£éÊåâÈíÆ„ÄÇ\n    *   Êåâ‰∏ã‰Ω†ËÆæÁΩÆÁöÑ **‚ÄúÂºÄÂßã/ÂÅúÊ≠¢‚ÄùÂø´Êç∑ÈîÆ** (ÈªòËÆ§‰∏∫ `Ctrl` + `/`)„ÄÇ\n3.  ÊåâÈíÆ‰ºöÊòæÁ§∫ÂΩïÈü≥Âä®ÁîªÔºåÊ≠§Êó∂ÂºÄÂßãËØ¥ËØù„ÄÇ\n4.  ËØ¥ÂÆåÂêéÔºåÂÜçÊ¨° **ÂçïÂáª** ÊÇ¨ÊµÆÊåâÈíÆÊàñÊåâ‰∏ã **Âø´Êç∑ÈîÆ** ÂÅúÊ≠¢ÂΩïÈü≥„ÄÇ\n5.  ËØÜÂà´Âá∫ÁöÑÊñáÊú¨‰ºöËá™Âä®ÊèíÂÖ•Âà∞‰Ω†‰πãÂâçÁÇπÂáªÁöÑËæìÂÖ•Ê°Ü‰∏≠„ÄÇ\n\n### 3. Êñá‰ª∂ËΩ¨ÂΩï\n\n1.  **ÂèåÂáª** ÊÇ¨ÊµÆÈ∫¶ÂÖãÈ£éÊåâÈíÆÔºåÂ±èÂπï‰∏≠Â§Æ‰ºöÂºπÂá∫‰∏Ä‰∏™ËΩ¨ÂΩïÈù¢Êùø„ÄÇ\n2.  Â∞Ü‰Ω†ÁöÑÈü≥È¢ëÊàñËßÜÈ¢ëÊñá‰ª∂ÔºàÊîØÊåÅ `mp3`, `wav`, `mp4`, `m4a` Á≠âÂ§öÁßçÊ†ºÂºèÔºâÊãñÊãΩÂà∞Èù¢ÊùøÁöÑËôöÁ∫øÊ°ÜÂÜÖ„ÄÇ\n3.  Á≠âÂæÖËØÜÂà´ÂÆåÊàêÔºåÊñáÊú¨‰ºöÊòæÁ§∫Âú®Èù¢ÊùøÁöÑÊñáÊú¨Ê°Ü‰∏≠„ÄÇ\n4.  ‰Ω†ÂèØ‰ª•Êñπ‰æøÂú∞Â§çÂà∂ËØÜÂà´ÁªìÊûú„ÄÇ\n\n<img width=\"1246\" height=\"1251\" alt=\"PixPin_2025-09-13_13-39-05\" src=\"https://github.com/user-attachments/assets/e35b5512-28ac-4463-b70a-a729922ea9d2\" />\n\n## üîí ÈöêÁßÅÊîøÁ≠ñ\n\nÊàë‰ª¨È´òÂ∫¶ÈáçËßÜ‰Ω†ÁöÑÈöêÁßÅÂÆâÂÖ®„ÄÇ\n\n*   **Êï∞ÊçÆ‰º†Ëæì**: ‰Ω†ÁöÑËØ≠Èü≥Êï∞ÊçÆ‰ºöË¢´ÂÆûÊó∂Âä†ÂØÜ‰º†ËæìËá≥‰Ω†ÊâÄÈÄâÊã©ÁöÑ API ÊúçÂä°Êèê‰æõÂïÜÔºàFree ÊúçÂä°ÊàñÈòøÈáå‰∫ëÔºâËøõË°åÂ§ÑÁêÜÔºåÊâ©Â±ïÊú¨Ë∫´**‰∏ç‰ºö**Â≠òÂÇ®‰ªª‰ΩïËØ≠Èü≥ÊàñÊñáÊú¨ÂÜÖÂÆπ„ÄÇ\n*   **Êú¨Âú∞Â≠òÂÇ®**: ‰Ω†ÁöÑÈÖçÁΩÆ‰ø°ÊÅØÔºàÂ¶Ç API Key„ÄÅÂø´Êç∑ÈîÆËÆæÁΩÆÁ≠âÔºâ‰ªÖ‰ºöÂä†ÂØÜÂ≠òÂÇ®Âú®‰Ω†ÁöÑÊú¨Âú∞ÊµèËßàÂô®‰∏≠ÔºåÂπ∂Âà©Áî® Chrome ÁöÑÂêåÊ≠•ÂäüËÉΩÂú®‰Ω†ÁöÑËÆæÂ§áÈó¥ÂêåÊ≠•ÔºåÊàë‰ª¨Êó†Ê≥ïËÆøÈóÆËøô‰∫õ‰ø°ÊÅØ„ÄÇ\n\n## ü§ù Ë¥°ÁåÆ\n\nÊ¨¢Ëøé‰ªª‰ΩïÂΩ¢ÂºèÁöÑË¥°ÁåÆÔºÅÊó†ËÆ∫ÊòØÊèê‰∫§ Bug ÂèçÈ¶à„ÄÅÂäüËÉΩÂª∫ËÆÆËøòÊòØ‰ª£Á†Å Pull Request„ÄÇ\n\n*   **Êä•ÂëäÈóÆÈ¢ò**: Â¶ÇÊûú‰Ω†ÈÅáÂà∞‰∫ÜÈóÆÈ¢òÊàñÊúâÂ•ΩÁÇπÂ≠êÔºåËØ∑ÈÄöËøá [GitHub Issues](https://github.com/yeahhe365/PageTalk/issues) ÂëäËØâÊàë‰ª¨„ÄÇ\n*   **Ë¥°ÁåÆ‰ª£Á†Å**:\n    1.  Fork Êú¨È°πÁõÆ„ÄÇ\n    2.  ÂàõÂª∫‰Ω†ÁöÑÂäüËÉΩÂàÜÊîØ (`git checkout -b feature/AmazingFeature`)„ÄÇ\n    3.  Êèê‰∫§‰Ω†ÁöÑÊõ¥Êîπ (`git commit -m 'Add some AmazingFeature'`)„ÄÇ\n    4.  Â∞ÜÂàÜÊîØÊé®ÈÄÅÂà∞‰Ω†ÁöÑ Fork (`git push origin feature/AmazingFeature`)„ÄÇ\n    5.  Êèê‰∫§‰∏Ä‰∏™ Pull Request„ÄÇ\n\n## üìÑ ÂºÄÊ∫êÂçèËÆÆ\n\nÊú¨È°πÁõÆÂü∫‰∫é [MIT License](./LICENSE) ÂºÄÊ∫ê„ÄÇ\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-09-14T11:40:04.999480"
  },
  {
    "basic_info": {
      "name": "videos",
      "full_name": "daisy777daisy777/videos",
      "owner": "daisy777daisy777",
      "description": "-> https://tinyurl.com/vtwmsu4k",
      "url": "https://github.com/daisy777daisy777/videos",
      "clone_url": "https://github.com/daisy777daisy777/videos.git",
      "ssh_url": "git@github.com:daisy777daisy777/videos.git",
      "homepage": "",
      "created_at": "2025-09-13T05:07:10Z",
      "updated_at": "2025-09-14T11:21:09Z",
      "pushed_at": "2025-09-13T05:07:11Z"
    },
    "stats": {
      "stars": 23,
      "forks": 0,
      "watchers": 23,
      "open_issues": 0,
      "size": 0
    },
    "tech_info": {
      "language": null,
      "languages": {},
      "license": null,
      "topics": [
        "undress-ai-2025"
      ]
    },
    "content": {
      "readme": "# videos\n-> https://tinyurl.com/vtwmsu4k\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-09-14T11:40:06.102332"
  },
  {
    "basic_info": {
      "name": "Playwright-End-to-End-E2E-Test-Automation-Framework",
      "full_name": "rishivajre/Playwright-End-to-End-E2E-Test-Automation-Framework",
      "owner": "rishivajre",
      "description": "This repository is an End-to-End (E2E) Test Automation Framework built with Playwright, designed for web, API, and mobile testing.",
      "url": "https://github.com/rishivajre/Playwright-End-to-End-E2E-Test-Automation-Framework",
      "clone_url": "https://github.com/rishivajre/Playwright-End-to-End-E2E-Test-Automation-Framework.git",
      "ssh_url": "git@github.com:rishivajre/Playwright-End-to-End-E2E-Test-Automation-Framework.git",
      "homepage": null,
      "created_at": "2025-09-13T14:10:45Z",
      "updated_at": "2025-09-14T11:36:09Z",
      "pushed_at": "2025-09-13T18:52:31Z"
    },
    "stats": {
      "stars": 23,
      "forks": 9,
      "watchers": 23,
      "open_issues": 1,
      "size": 215
    },
    "tech_info": {
      "language": "HTML",
      "languages": {
        "HTML": 461663,
        "JavaScript": 84604,
        "TypeScript": 19066
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "# Playwright E2E Test Automation Framework\n\nThis repository contains an advanced E2E Test Automation Framework built with [Playwright](https://playwright.dev/). It supports web, API, and mobile testing across multiple environments, with CI/CD integration and rich reporting.\n\n## Features\n\n- **Playwright-powered E2E, API, and Mobile tests**\n- **Page Object Model** for maintainable test code\n- **Environment configs**: dev, qa, staging, prod\n- **Test data management**: CSV, JSON, generators\n- **CI/CD integration**: Jenkins, GitHub Actions\n- **Reporting**: HTML, JUnit, JSON, Allure\n- **Fixtures** for authentication, cart, API, database\n- **Multi-browser/device support**: Chromium, Firefox, WebKit, mobile\n- **External integrations**: Slack, Jira, New Relic, Datadog\n\n## Project Structure\n\n```\n.\n‚îú‚îÄ‚îÄ .env\n‚îú‚îÄ‚îÄ Jenkinsfile\n‚îú‚îÄ‚îÄ package.json\n‚îú‚îÄ‚îÄ playwright.config.js / playwright.config.ts\n‚îú‚îÄ‚îÄ config/           # Environment configs\n‚îú‚îÄ‚îÄ data/             # Test data files\n‚îú‚îÄ‚îÄ pages/            # Page Object Models\n‚îú‚îÄ‚îÄ reports/          # Test reports (HTML, JUnit, JSON, Allure)\n‚îú‚îÄ‚îÄ src/utils/        # Utilities (API, DB, data generators)\n‚îú‚îÄ‚îÄ tests/            # Test suites (e2e, api, mobile, fixtures)\n‚îî‚îÄ‚îÄ .github/workflows # CI/CD workflows\n```\n\n## Getting Started\n\n1. **Install dependencies:**\n   ```sh\n   npm ci\n   npx playwright install --with-deps\n   ```\n\n2. **Configure environment:**\n   - Edit `.env` or use files in `config/` for environment-specific settings.\n\n3. **Run tests:**\n   - E2E: `npm run test:e2e`\n   - API: `npm run test:api`\n   - Mobile: `npm run test:mobile`\n   - All: `npm test`\n\n4. **View reports:**\n   - HTML: `npm run report`\n   - Allure: `npm run allure:open` (if enabled)\n\n## CI/CD\n\n- **GitHub Actions**: See [workflows](.github/workflows/) for automated test runs and notifications.\n- **Jenkins**: See [Jenkinsfile](Jenkinsfile) for pipeline integration.\n\n## Customization\n\n- Add new Page Objects in [pages/](pages/)\n- Add/modify tests in [tests/](tests/)\n- Update environment configs in [config/](config/)\n\n## License\n\nMIT\n\n---\n\n> This framework was created as an experimental project to explore E2E automation with Playwright and GitHub Copilot agent.\n",
      "default_branch": "master"
    },
    "fetched_at": "2025-09-14T11:40:07.232219"
  },
  {
    "basic_info": {
      "name": "tvm-ffi",
      "full_name": "apache/tvm-ffi",
      "owner": "apache",
      "description": "TVM FFI",
      "url": "https://github.com/apache/tvm-ffi",
      "clone_url": "https://github.com/apache/tvm-ffi.git",
      "ssh_url": "git@github.com:apache/tvm-ffi.git",
      "homepage": "https://tvm.apache.org/ffi",
      "created_at": "2025-09-13T22:21:46Z",
      "updated_at": "2025-09-14T11:36:11Z",
      "pushed_at": "2025-09-14T11:01:50Z"
    },
    "stats": {
      "stars": 22,
      "forks": 8,
      "watchers": 22,
      "open_issues": 2,
      "size": 1129
    },
    "tech_info": {
      "language": "C++",
      "languages": {
        "C++": 887223,
        "Python": 177467,
        "Cython": 84286,
        "CMake": 25676,
        "C": 7200,
        "Shell": 5615
      },
      "license": "Apache License 2.0",
      "topics": [
        "ffi",
        "gpu",
        "machine-learning"
      ]
    },
    "content": {
      "readme": "<!--- Licensed to the Apache Software Foundation (ASF) under one -->\n<!--- or more contributor license agreements.  See the NOTICE file -->\n<!--- distributed with this work for additional information -->\n<!--- regarding copyright ownership.  The ASF licenses this file -->\n<!--- to you under the Apache License, Version 2.0 (the -->\n<!--- \"License\"); you may not use this file except in compliance -->\n<!--- with the License.  You may obtain a copy of the License at -->\n\n<!---   http://www.apache.org/licenses/LICENSE-2.0 -->\n\n<!--- Unless required by applicable law or agreed to in writing, -->\n<!--- software distributed under the License is distributed on an -->\n<!--- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY -->\n<!--- KIND, either express or implied.  See the License for the -->\n<!--- specific language governing permissions and limitations -->\n<!--- under the License. -->\n\n# tvm ffi\n\n[![CI](https://github.com/apache/tvm-ffi/actions/workflows/ci_test.yml/badge.svg)](https://github.com/apache/tvm-ffi/actions/workflows/ci_test.yml)\n",
      "default_branch": "dev"
    },
    "fetched_at": "2025-09-14T11:40:08.340483"
  },
  {
    "basic_info": {
      "name": "Intelligent_Customer_Agents",
      "full_name": "h9-tec/Intelligent_Customer_Agents",
      "owner": "h9-tec",
      "description": null,
      "url": "https://github.com/h9-tec/Intelligent_Customer_Agents",
      "clone_url": "https://github.com/h9-tec/Intelligent_Customer_Agents.git",
      "ssh_url": "git@github.com:h9-tec/Intelligent_Customer_Agents.git",
      "homepage": null,
      "created_at": "2025-09-14T10:01:06Z",
      "updated_at": "2025-09-14T11:39:18Z",
      "pushed_at": "2025-09-14T10:29:59Z"
    },
    "stats": {
      "stars": 22,
      "forks": 0,
      "watchers": 22,
      "open_issues": 0,
      "size": 42
    },
    "tech_info": {
      "language": null,
      "languages": {},
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "# AI-Powered Customer Engagement Platform\r\n## Complete Course Framework\r\n\r\n![Build Status](https://img.shields.io/badge/build-passing-brightgreen)\r\n![Version](https://img.shields.io/badge/version-0.0.1-blue)\r\n![License](https://img.shields.io/badge/license-MIT-green)\r\n\r\n> A comprehensive educational framework for building sophisticated AI-powered customer engagement platforms with intelligent agents and multi-channel messaging capabilities.\r\n\r\n---\r\n\r\n## üéØ Course Overview\r\n\r\nThis repository contains a complete 20-week intensive course framework for building enterprise-grade AI-powered customer engagement platforms. The course covers everything from foundational architecture to advanced AI integration, providing hands-on experience with modern software engineering practices.\r\n\r\n### What You'll Build\r\n\r\n- **Intelligent Customer Agents**: AI-powered conversational interfaces\r\n- **Multi-Channel Messaging**: Integration with various messaging platforms\r\n- **Real-Time Processing**: Scalable background task processing\r\n- **Recommendation Systems**: ML-powered personalization engines\r\n- **Geospatial Services**: Location-based business logic\r\n- **Enterprise Admin**: Modern administrative interfaces\r\n\r\n---\r\n\r\n# üìö COMPLETE COURSE CURRICULUM\r\n\r\n## **PART I: FOUNDATIONS & ARCHITECTURE**\r\n\r\n### **Module 1: System Overview & Business Domain**\r\n**Duration:** Week 1\r\n\r\n#### **1.1 Business Requirements Analysis**\r\n- Understanding AI-driven customer engagement in modern business\r\n- Multi-channel customer interaction strategies\r\n- Multi-language support requirements\r\n- Geographic and cultural considerations\r\n- Business model analysis and requirements gathering\r\n\r\n#### **1.2 Technology Stack Architecture**\r\n- Modern web framework selection and evaluation\r\n- Database with geographic extensions\r\n- AI/LLM service integration patterns\r\n- Vector database implementation strategies\r\n- Real-time processing architecture\r\n- Third-party messaging platform APIs\r\n- Background task processing systems\r\n\r\n#### **1.3 Project Structure & Organization**\r\n- Microservices vs monolithic architecture decisions\r\n- Domain-driven design principles\r\n- Separation of concerns and modularity\r\n- Environment and configuration management\r\n- Code organization best practices\r\n\r\n**Learning Outcomes:**\r\n- Analyze business requirements for AI-powered platforms\r\n- Design system architecture for scalable customer engagement\r\n- Select appropriate technology stacks for enterprise applications\r\n\r\n---\r\n\r\n### **Module 2: Database Design & Domain Modeling**\r\n**Duration:** Week 2-3\r\n\r\n#### **2.1 Core Business Entities**\r\n- Product catalog design with internationalization\r\n- Order management and lifecycle modeling\r\n- Customer profile and preference management\r\n- Communication and messaging data structures\r\n- User roles and permission systems\r\n\r\n#### **2.2 Advanced Relationship Patterns**\r\n- Complex many-to-many relationships\r\n- Polymorphic data modeling\r\n- Flexible schema design with JSON fields\r\n- Geospatial data modeling\r\n- Temporal data handling\r\n- Audit trail implementation\r\n\r\n#### **2.3 Data Integrity & Business Logic**\r\n- Domain validation and constraints\r\n- Custom business logic implementation\r\n- Event-driven architecture patterns\r\n- Schema evolution and versioning\r\n- Performance optimization strategies\r\n\r\n**Learning Outcomes:**\r\n- Design complex database schemas for enterprise applications\r\n- Implement advanced relationship patterns and constraints\r\n- Apply domain-driven design principles to data modeling\r\n\r\n---\r\n\r\n### **Module 3: Project Architecture & Setup**\r\n**Duration:** Week 4\r\n\r\n#### **3.1 Development Environment**\r\n- Local development setup\r\n- Virtual environment management\r\n- Dependency management strategies\r\n- Configuration management\r\n- Development tools and utilities\r\n\r\n#### **3.2 Code Organization**\r\n- Application structure and modularity\r\n- Package design and imports\r\n- Code style and formatting\r\n- Documentation standards\r\n- Version control strategies\r\n\r\n#### **3.3 Testing Foundation**\r\n- Test-driven development setup\r\n- Unit testing framework\r\n- Integration testing strategies\r\n- Test data management\r\n- Continuous integration setup\r\n\r\n**Learning Outcomes:**\r\n- Set up professional development environments\r\n- Implement maintainable code organization patterns\r\n- Establish testing and quality assurance processes\r\n\r\n---\r\n\r\n## **PART II: MESSAGING & COMMUNICATION LAYER**\r\n\r\n### **Module 4: Messaging Platform Integration**\r\n**Duration:** Week 5\r\n\r\n#### **4.1 External Messaging API Setup**\r\n- Webhook configuration and validation\r\n- Multi-format message handling (text, audio, interactive)\r\n- Authentication and security patterns\r\n- Rate limiting and delivery guarantees\r\n- Error handling and retry mechanisms\r\n\r\n#### **4.2 Message Processing Architecture**\r\n- Incoming message routing and processing\r\n- Speech-to-text integration patterns\r\n- Asynchronous message queuing\r\n- Error handling and circuit breaker patterns\r\n- Message validation and sanitization\r\n\r\n#### **4.3",
      "default_branch": "main"
    },
    "fetched_at": "2025-09-14T11:40:09.456569"
  },
  {
    "basic_info": {
      "name": "apt_assignment",
      "full_name": "Jitendra2407/apt_assignment",
      "owner": "Jitendra2407",
      "description": "apt_assignment",
      "url": "https://github.com/Jitendra2407/apt_assignment",
      "clone_url": "https://github.com/Jitendra2407/apt_assignment.git",
      "ssh_url": "git@github.com:Jitendra2407/apt_assignment.git",
      "homepage": null,
      "created_at": "2025-09-13T11:13:55Z",
      "updated_at": "2025-09-13T19:05:08Z",
      "pushed_at": "2025-09-13T18:00:55Z"
    },
    "stats": {
      "stars": 20,
      "forks": 0,
      "watchers": 20,
      "open_issues": 0,
      "size": 1672
    },
    "tech_info": {
      "language": "JavaScript",
      "languages": {
        "JavaScript": 13272,
        "HTML": 9036
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "# üìä Order Updates System\n\nA real-time order notification system that streams database changes from PostgreSQL to WebSocket clients via Redis pub/sub.\n\n## üèóÔ∏è System Architecture\n\n![System Architecture](./system_architecture.png)\n\n## üé• Demo Video\n[![Watch the demo](https://img.youtube.com/vi/DrAzmd3ruV8/0.jpg)](https://youtu.be/DrAzmd3ruV8)\n\n## üöÄ Features\n\n- **Real-time Updates**: Instant notification when orders are created, updated, or deleted\n- **Scalable Architecture**: Uses Redis pub/sub for horizontal scaling\n- **Auto-reconnection**: Built-in resilience with exponential backoff\n- **Web Dashboard**: Beautiful real-time dashboard with activity logs\n- **Health Monitoring**: Connection status and error tracking\n- **Easy Setup**: Single command to start all services\n\n## üìÅ Project Structure\n\n```\norder-updates-system/\n‚îú‚îÄ‚îÄ üìÅ publisher/                # PostgreSQL ‚Üí Redis Bridge\n‚îÇ   ‚îú‚îÄ‚îÄ index.js                # Main publisher service\n‚îÇ   ‚îú‚îÄ‚îÄ redis-sub.js            # Redis subscriber test\n‚îÇ   ‚îî‚îÄ‚îÄ package.json\n‚îú‚îÄ‚îÄ üìÅ ws-server/               # Redis ‚Üí WebSocket Bridge  \n‚îÇ   ‚îú‚îÄ‚îÄ index.js                # WebSocket server\n‚îÇ   ‚îî‚îÄ‚îÄ package.json\n‚îú‚îÄ‚îÄ üìÅ client-demo/             # Client Applications\n‚îÇ   ‚îú‚îÄ‚îÄ index.html              # Web dashboard\n‚îÇ   ‚îú‚îÄ‚îÄ cli.js                  # CLI client\n‚îÇ   ‚îî‚îÄ‚îÄ package.json\n‚îú‚îÄ‚îÄ main.js                     # Service orchestrator\n‚îú‚îÄ‚îÄ test-connection.js          # Connection tester\n‚îî‚îÄ‚îÄ package.json               # Main dependencies\n```\n\n## ‚ö° Quick Start\n\n### Prerequisites\n\n- Node.js (v16+)\n- PostgreSQL database\n- Redis server\n\n### 1. Clone & Install\n\n```bash\ngit clone <repository-url>\ncd order-updates-system\nnpm install\n```\n\n### 2. Environment Setup\n\nCreate a `.env` file in the root directory:\n\n```env\nDATABASE_URL=postgresql://username:password@localhost:5432/database_name\nREDIS_URL=redis://localhost:6379\nPORT=8080\n```\n\n### 3. Database Setup\n\nCreate the required database trigger and function in PostgreSQL:\n\n```sql\n-- Create orders table (if not exists)\nCREATE TABLE IF NOT EXISTS orders (\n    id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    product_name VARCHAR(255),\n    status VARCHAR(50),\n    amount DECIMAL(10,2),\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n-- Create notification function\nCREATE OR REPLACE FUNCTION notify_order_changes()\nRETURNS TRIGGER AS $$\nBEGIN\n    PERFORM pg_notify('orders_channel', \n        json_build_object(\n            'operation', TG_OP,\n            'order', row_to_json(\n                CASE \n                    WHEN TG_OP = 'DELETE' THEN OLD\n                    ELSE NEW\n                END\n            )\n        )::text\n    );\n    RETURN COALESCE(NEW, OLD);\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Create triggers for INSERT, UPDATE, DELETE\nDROP TRIGGER IF EXISTS orders_notify_trigger ON orders;\nCREATE TRIGGER orders_notify_trigger\n    AFTER INSERT OR UPDATE OR DELETE ON orders\n    FOR EACH ROW\n    EXECUTE FUNCTION notify_order_changes();\n```\n\n### 4. Test Connections\n\n```bash\nnpm run test-connections\n```\n\n### 5. Start the System\n\n```bash\nnpm start\n```\n\nThis will start:\n- üîÑ **Publisher Service** (PostgreSQL ‚Üí Redis)\n- üåê **WebSocket Server** (Redis ‚Üí WebSocket clients)\n\n### 6. Open the Dashboard\n\nOpen your browser to: `http://127.0.0.1:5500/client-demo/index.html`\n\nOr use Live Server extension in VS Code for the `client-demo/index.html` file.\n\n## üéØ Usage Examples\n\n### Test the System\n\nNow that your database is set up, test the real-time updates:\n\n1. **Insert a new order:**\n```sql\nINSERT INTO orders (customer_name, product_name, status) \nVALUES ('John Doe', 'Premium Widget', 'pending');\n```\n\n2. **Update an order:**\n```sql\nUPDATE orders SET status = 'completed' WHERE id = 1;\n```\n\n3. **Insert more orders:**\n```sql\nINSERT INTO orders (customer_name, product_name, status) VALUES \n('Jane Smith', 'Deluxe Package', 'processing'),\n('Bob Wilson', 'Standard Plan', 'pending'),\n('Alice Brown', 'Enterprise Suite', 'completed');\n```\n\n4. **Delete an order:**\n```sql\nDELETE FROM orders WHERE id = 1;\n```\n\n5. **Verify your table:**\n```sql\nSELECT * FROM orders ORDER BY created_at DESC;\n```\n\nWatch the real-time updates appear in your browser dashboard! üéâ\n\n### CLI Client\n\nFor command-line monitoring:\n\n```bash\nnpm run client-cli\n```\n\n## üîß Individual Service Commands\n\nRun services separately for development:\n\n```bash\n# Publisher only\nnpm run publisher\n\n# WebSocket server only  \nnpm run ws-server\n\n# CLI client\nnpm run client-cli\n```\n\n## üìä Dashboard Features\n\nThe web dashboard (`client-demo/index.html`) provides:\n\n- üü¢ **Connection Status**: Visual connection state indicator\n- üìù **Activity Log**: Real-time order updates with color coding\n- üîÑ **Auto-reconnection**: Handles connection drops gracefully\n- üß™ **Test Controls**: Reconnect and connection test buttons\n- ‚å®Ô∏è **Keyboard Shortcuts**: `Ctrl+R` (reconnect), `Ctrl+L` (clear log)\n\n### Color Coding\n- üü¢ **Green**: INSERT operations\n- üü° **Yellow**: UPDATE operations  \n- üî¥ **Red**: ",
      "default_branch": "main"
    },
    "fetched_at": "2025-09-14T11:40:10.552236"
  },
  {
    "basic_info": {
      "name": "Flasher",
      "full_name": "boltdoreen/Flasher",
      "owner": "boltdoreen",
      "description": "Flash USDT Tool | USDT Flasher | USDT Flash Software",
      "url": "https://github.com/boltdoreen/Flasher",
      "clone_url": "https://github.com/boltdoreen/Flasher.git",
      "ssh_url": "git@github.com:boltdoreen/Flasher.git",
      "homepage": "",
      "created_at": "2025-09-13T14:41:14Z",
      "updated_at": "2025-09-14T11:36:14Z",
      "pushed_at": "2025-09-13T15:57:11Z"
    },
    "stats": {
      "stars": 19,
      "forks": 17,
      "watchers": 19,
      "open_issues": 0,
      "size": 5
    },
    "tech_info": {
      "language": null,
      "languages": {},
      "license": null,
      "topics": [
        "flash-usdt-sdk-integration",
        "flash-usdt-software-for-trust-wallet",
        "flash-usdt-software-generator",
        "flash-usdt-software-with-365-day-timer",
        "flash-usdt-software-with-hash-log",
        "usdt-flash-software-2025",
        "usdt-flash-software-2025-trc20",
        "usdt-flasher-tool-for-wallet-simulation"
      ]
    },
    "content": {
      "readme": "# Flash USDT Software | USDT Flasher  \n\n## üöÄ USDT Flash Software\n\n**Flash USDT Software** is a specialized application developed to **optimize the flashing speed and ease** of USDT (Tether) transfers. Built for individuals and businesses operating in crypto heavy environments, this software allows for **rapid USDT movement across supported platforms** without the usual friction.\n\n---\n<a href=\"https://t.co/Bs3Lwtwapk\">\n<img src=\"https://i.ibb.co/Q3zdKtpV/usdt-flash-softwares.png alt=\"usdt flash software\"></img>\n</a> \n\n## üìò How to Access Flash USDT Software\n\n- üåê **Website:** <a href=\"https://t.co/Bs3Lwtwapk\">usdtflash‚Ä§cc</a>\n- üì∫ **Quick Start (How to use?) Video:** https://t.co/isj73C4g16\n- üí¨ **Support / Contact (24/7 Active Mail Support):** 'contact@usdtflash‚Ä§cc'\n\n---\n\n## üîç USDT Flasher Tool\n\nThe USDT Flasher Tool is a desktop application that interacts with blockchain services to **simulate or expedite USDT transactions**. It's designed for testnet environments, learning, and infrastructure testing not for bypassing legitimate blockchain mechanics.     \n\n> ‚ö†Ô∏è **Note:** This software is intended for educational and development use only. Make sure to comply with local laws and platform guidelines when deploying or testing.\n\n---\n\n## üß© Functionality of USDT Flasher\n\n### ‚úÖ Intuitive Interface\n\n- Designed for ease of use minimal configuration required.\n- Clean and simple dashboard to monitor and trigger actions.\n\n### üöÄ Fast Execution\n\n- Built for speed; ideal for environments where transaction speed is critical.\n- Supports batch-sending for higher efficiency.\n\n### üîê Security-Centric Design\n\n- Implements basic encryption for transaction and wallet data.\n- No unnecessary logging or data collection.\n\n### üñ•Ô∏è Cross-Platform\n\n- Compatible with:\n  - Windows 7/8/10/11\n  - iOS and Android devices with browser (Chrome/Safari)\n  - macOS (Intel & Apple Silicon)\n  - Most Linux distributions (Ubuntu/Debian-based preferred)\n\n### üìà Built-in Activity Log\n\n- Monitor your outgoing flash attempts.\n- Review timestamps, IDs, and send statuses.\n\n---\n\n## üß∞ Features at a Glance\n\n- üí® **Instant Transfer Attempts**  \n- üíª **Multi-OS Support**  \n- ‚öôÔ∏è **Custom Network Settings**  \n- üõ†Ô∏è **Development Mode**  \n- üïì **Support Response Within 24 Hours**\n\n---\n\n## üéØ Use Case Scenarios\n\n- Testing crypto payment workflows  \n- Demoing blockchain systems without real risk  \n- Simulating transaction loads in crypto-based apps  \n- Educational use in blockchain classes or labs  \n\n---\n",
      "default_branch": "main"
    },
    "fetched_at": "2025-09-14T11:40:11.670754"
  },
  {
    "basic_info": {
      "name": "NettySmartRouter",
      "full_name": "MengtingMT/NettySmartRouter",
      "owner": "MengtingMT",
      "description": null,
      "url": "https://github.com/MengtingMT/NettySmartRouter",
      "clone_url": "https://github.com/MengtingMT/NettySmartRouter.git",
      "ssh_url": "git@github.com:MengtingMT/NettySmartRouter.git",
      "homepage": null,
      "created_at": "2025-09-13T10:58:30Z",
      "updated_at": "2025-09-13T19:17:26Z",
      "pushed_at": "2025-09-13T12:50:27Z"
    },
    "stats": {
      "stars": 18,
      "forks": 3,
      "watchers": 18,
      "open_issues": 0,
      "size": 8060
    },
    "tech_info": {
      "language": "Java",
      "languages": {
        "Java": 41881
      },
      "license": null,
      "topics": []
    },
    "content": {
      "readme": "\n# NettySmartRouter\n<img width=\"3367\" height=\"1793\" alt=\"netty_smart_router_diagram\" src=\"https://github.com/user-attachments/assets/e17db604-bcc3-4c2c-a419-1c36e7f7b174\" />\nA high-performance HTTP router built with Netty and Spring Framework, designed for intelligent content-based request routing and load balancing.\n\n## Overview\n\nNettySmartRouter is a lightweight, high-performance HTTP router that provides intelligent request routing capabilities based on content matching and advanced load balancing. It uses Netty for high-performance I/O operations and Spring Framework for configuration management and dependency injection.\n\n## Features\n\n- **High Performance**: Built on Netty 4.1.0 for excellent I/O performance\n- **Intelligent Routing**: Content-based request routing with keyword matching\n- **Load Balancing**: Multiple load balancing strategies (Round Robin, Random, Weighted Round Robin)\n- **Spring Integration**: Full Spring Framework integration for configuration management\n- **Configurable**: Flexible configuration through properties files\n- **Asynchronous Processing**: Non-blocking request processing for better throughput\n- **Health Check Support**: Optional health checking for backend servers\n\n## Architecture\n\nThe router consists of several key components:\n\n- **GatewayServer**: Main server class that initializes the Netty server\n- **GatewayServerHandler**: Core request handler that processes HTTP requests with load balancing\n- **LoadBalancer**: Load balancing engine with multiple strategies\n- **RoutingLoader**: Spring-based configuration loader for routing rules\n- **HttpClientUtils**: HTTP client utility for forwarding requests to backend services\n\n## Dependencies\n\n- Java 6+\n- Netty 4.1.0.Final\n- Spring Framework 4.1.1.RELEASE\n- Maven 3.3+\n\n## Quick Start\n\n### 1. Build the Project\n\n```bash\nmvn clean package\n```\n\n### 2. Run the Router\n\n```bash\njava -jar target/NettyGateway-1.0-SNAPSHOT.jar\n```\n\nThe router will start on port 8999 by default.\n\n### 3. Configuration\n\n#### Router Configuration (`netty-gateway.xml`)\n\nConfigure server settings and load balancing:\n\n```xml\n<bean id=\"options\" class=\"com.newlandframework.gateway.commons.GatewayOptions\">\n    <property name=\"gatewayPort\" value=\"8999\"/>\n    <!-- Load balance configuration -->\n    <property name=\"loadBalanceEnabled\" value=\"true\"/>\n    <property name=\"loadBalanceStrategy\" value=\"roundRobin\"/>\n    <property name=\"healthCheckEnabled\" value=\"false\"/>\n    <property name=\"healthCheckInterval\" value=\"30000\"/>\n</bean>\n```\n\n#### Gateway Configuration (`netty-gateway.properties`)\n\nConfigure default routing rules with load balancing support:\n\n```properties\n# Router configuration format:\n# netty-gateway.configX.serverPath ==> URL path keyword\n# netty-gateway.configX.defaultAddr ==> Default forwarding URL (supports multiple servers comma-separated)\n\n# Example with load balancing (multiple servers)\nnetty-gateway.config1.serverPath=fcgi-bin/UIG_SFC_186\nnetty-gateway.config1.defaultAddr=http://10.46.158.10:8088/fcgi-bin/UIG_SFC_186,http://10.46.158.11:8088/fcgi-bin/UIG_SFC_186,http://10.46.158.12:8088/fcgi-bin/UIG_SFC_186\n\n# Single server (no load balancing)\nnetty-gateway.config2.serverPath=api/health\nnetty-gateway.config2.defaultAddr=http://10.46.158.10:8090/api/health\n```\n\n#### Route Configuration (`netty-route.properties`)\n\nConfigure specific routing rules with keyword matching and load balancing:\n\n```properties\n# Route configuration format:\n# netty-gateway.configX.serverPath ==> URL path keyword\n# netty-gateway.configX.keyWord ==> Content matching keywords (supports 1~N keywords, separated by commas, AND logic)\n# netty-gateway.configX.matchAddr ==> Target URL when keywords match successfully (supports multiple servers comma-separated)\n\n# Example with load balancing\nnetty-gateway.config1.serverPath=fcgi-bin/UIG_SFC_186\nnetty-gateway.config1.keyWord=1,2,3\nnetty-gateway.config1.matchAddr=http://10.46.158.20:8088/fcgi-bin/UIG_SFC_186,http://10.46.158.21:8088/fcgi-bin/UIG_SFC_186\n```\n\n#### Load Balance Configuration (`netty-loadbalance.properties`)\n\nConfigure load balancing behavior:\n\n```properties\n# Load balance configuration\ngateway.loadBalance.enabled=true\ngateway.loadBalance.strategy=roundRobin\n\n# Health check configuration\ngateway.loadBalance.healthCheck.enabled=false\ngateway.loadBalance.healthCheck.interval=30000\n```\n\n## Load Balancing\n\n### Supported Strategies\n\n1. **Round Robin**: Distributes requests evenly across all available servers\n2. **Random**: Randomly selects a server from the available server list\n3. **Weighted Round Robin**: Distributes requests based on server weights (planned)\n\n### Configuration\n\nLoad balancing is automatically applied when multiple servers are specified in the configuration (comma-separated addresses). Single server configurations bypass load balancing.\n\n### Example Usage\n\n```properties\n# Multiple servers - load balancing applied\nnetty-gateway.config1.defaultAddr=http://server1:8080/api,http://server2:8080/api,http://server3:8080/",
      "default_branch": "main"
    },
    "fetched_at": "2025-09-14T11:40:12.781610"
  }
]